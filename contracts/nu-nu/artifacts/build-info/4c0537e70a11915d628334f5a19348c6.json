{
	"id": "4c0537e70a11915d628334f5a19348c6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"VettedToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.22;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ninterface IBurnManager {\r\n    function notifyBurn(address burner, uint256 amount) external;\r\n    function supportsToken(address token) external view returns (bool);\r\n}\r\n\r\ncontract Token is ERC20, Ownable {\r\n    address public immutable tokenFactory;\r\n    address public immutable creator;\r\n    string public imageUrl;\r\n    address public burnManager;\r\n    string public test;\r\n    \r\n    event BurnManagerSet(\r\n        address indexed oldManager,\r\n        address indexed newManager\r\n    );\r\n    event TokensBurned(\r\n        address indexed burner,\r\n        uint256 amount,\r\n        BurnType indexed burnType,\r\n        uint256 newTotalSupply\r\n    );\r\n\r\n    enum BurnType {\r\n        FACTORY,\r\n        SELF\r\n    }\r\n\r\n    constructor(\r\n        address initialOwner,\r\n        address _creator,\r\n        string memory name,\r\n        string memory symbol,\r\n        string memory _imageUrl,\r\n        address _burnManager //can be set optionally by creator for experimental actionseW\r\n    ) ERC20(name, symbol) Ownable(initialOwner) {\r\n        require(initialOwner != address(0), \"Invalid factory address\");\r\n        require(_creator != address(0), \"Invalid creator address\");\r\n\r\n        tokenFactory = initialOwner;\r\n        creator = _creator;\r\n        imageUrl = _imageUrl;\r\n\r\n        if (_burnManager != address(0)) {\r\n            require(\r\n                IBurnManager(_burnManager).supportsToken(address(this)),\r\n                \"Burn manager not compatible\"\r\n            );\r\n            burnManager = _burnManager;\r\n        }\r\n    }\r\n\r\n    // Only factory can mint\r\n    function mint(address to, uint256 amount) external {\r\n        require(msg.sender == tokenFactory, \"Only factory can mint\");\r\n        _mint(to, amount);\r\n    }\r\n\r\n    // Factory burn for bonding curve sells\r\n    function factoryBurn(address from, uint256 amount) external {\r\n        require(msg.sender == tokenFactory, \"Only factory can factory burn\");\r\n        _burn(from, amount);\r\n        emit TokensBurned(from, amount, BurnType.FACTORY, totalSupply());\r\n    }\r\n\r\n    // Any holder can self-burn their tokens\r\n    function burn(uint256 amount) public virtual {\r\n        require(amount > 0, \"Amount must be > 0\");\r\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance\");\r\n\r\n        _burn(msg.sender, amount);\r\n        emit TokensBurned(msg.sender, amount, BurnType.SELF, totalSupply());\r\n\r\n        if (burnManager != address(0)) {\r\n            IBurnManager(burnManager).notifyBurn(msg.sender, amount);\r\n        }\r\n    }\r\n\r\n    // Only token creator can set/update burn manager\r\n    function setBurnManager(address newManager) external {\r\n        require(msg.sender == creator, \"Only creator can set burn manager\");\r\n        require(newManager != address(0), \"Cannot be zero address\");\r\n        require(\r\n            IBurnManager(newManager).supportsToken(address(this)),\r\n            \"Burn manager not compatible\"\r\n        );\r\n\r\n        address oldManager = burnManager;\r\n        burnManager = newManager;\r\n        emit BurnManagerSet(oldManager, newManager);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"VettedToken.sol": {
				"IBurnManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "burner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "notifyBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "supportsToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"notifyBurn(address,uint256)": "1ed1028b",
							"supportsToken(address)": "061f7650"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"notifyBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"supportsToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VettedToken.sol\":\"IBurnManager\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"VettedToken.sol\":{\"keccak256\":\"0xc042fef1a0e9028ce63070387fb3b39d813fa3ca0c7964033441bf47a4f24819\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8660a9c7cfafbe04e4313b3a6e424f62422d568e24608cd830488b85f96fde4b\",\"dweb:/ipfs/QmPFV5RCKnTfGD9k9rm2xoi3CAKw6GeE2tq3A7CtBrXM3i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_creator",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_imageUrl",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_burnManager",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldManager",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newManager",
									"type": "address"
								}
							],
							"name": "BurnManagerSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "burner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "enum Token.BurnType",
									"name": "burnType",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newTotalSupply",
									"type": "uint256"
								}
							],
							"name": "TokensBurned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "creator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "factoryBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "imageUrl",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newManager",
									"type": "address"
								}
							],
							"name": "setBurnManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "test",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"VettedToken.sol\":345:3231  contract Token is ERC20, Ownable {... */\n  mstore(0x40, 0xc0)\n    /* \"VettedToken.sol\":892:1704  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"VettedToken.sol\":1184:1196  initialOwner */\n  dup6\n    /* \"VettedToken.sol\":1162:1166  name */\n  dup5\n    /* \"VettedToken.sol\":1168:1174  symbol */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  tag_8\n    /* \"VettedToken.sol\":1162:1166  name */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4751:4802   */\n  mstore\n    /* \"#utility.yul\":4724:4742   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"VettedToken.sol\":1217:1243  initialOwner != address(0) */\n  dup7\n  and\n    /* \"VettedToken.sol\":1209:1271  require(initialOwner != address(0), \"Invalid factory address\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5015:5017   */\n  0x20\n    /* \"VettedToken.sol\":1209:1271  require(initialOwner != address(0), \"Invalid factory address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4997:5018   */\n  mstore\n    /* \"#utility.yul\":5054:5056   */\n  0x17\n    /* \"#utility.yul\":5034:5052   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5027:5057   */\n  mstore\n    /* \"#utility.yul\":5093:5118   */\n  0x496e76616c696420666163746f72792061646472657373000000000000000000\n    /* \"#utility.yul\":5073:5091   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5066:5119   */\n  mstore\n    /* \"#utility.yul\":5136:5154   */\n  0x64\n  add\n    /* \"VettedToken.sol\":1209:1271  require(initialOwner != address(0), \"Invalid factory address\") */\n  tag_13\n    /* \"#utility.yul\":4813:5160   */\n  jump\n    /* \"VettedToken.sol\":1209:1271  require(initialOwner != address(0), \"Invalid factory address\") */\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"VettedToken.sol\":1290:1312  _creator != address(0) */\n  dup6\n  and\n    /* \"VettedToken.sol\":1282:1340  require(_creator != address(0), \"Invalid creator address\") */\n  tag_21\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5367:5369   */\n  0x20\n    /* \"VettedToken.sol\":1282:1340  require(_creator != address(0), \"Invalid creator address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5349:5370   */\n  mstore\n    /* \"#utility.yul\":5406:5408   */\n  0x17\n    /* \"#utility.yul\":5386:5404   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5379:5409   */\n  mstore\n    /* \"#utility.yul\":5445:5470   */\n  0x496e76616c69642063726561746f722061646472657373000000000000000000\n    /* \"#utility.yul\":5425:5443   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5418:5471   */\n  mstore\n    /* \"#utility.yul\":5488:5506   */\n  0x64\n  add\n    /* \"VettedToken.sol\":1282:1340  require(_creator != address(0), \"Invalid creator address\") */\n  tag_13\n    /* \"#utility.yul\":5165:5512   */\n  jump\n    /* \"VettedToken.sol\":1282:1340  require(_creator != address(0), \"Invalid creator address\") */\ntag_21:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"VettedToken.sol\":1353:1380  tokenFactory = initialOwner */\n  dup1\n  dup8\n  and\n  0x80\n  mstore\n    /* \"VettedToken.sol\":1391:1409  creator = _creator */\n  dup6\n  and\n  0xa0\n  mstore\n    /* \"VettedToken.sol\":1420:1428  imageUrl */\n  0x06\n    /* \"VettedToken.sol\":1420:1440  imageUrl = _imageUrl */\n  tag_24\n    /* \"VettedToken.sol\":1431:1440  _imageUrl */\n  dup4\n    /* \"VettedToken.sol\":1420:1428  imageUrl */\n  dup3\n    /* \"VettedToken.sol\":1420:1440  imageUrl = _imageUrl */\n  tag_9\n  jump\t// in\ntag_24:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"VettedToken.sol\":1457:1483  _burnManager != address(0) */\n  dup2\n  and\n  iszero\n    /* \"VettedToken.sol\":1453:1697  if (_burnManager != address(0)) {... */\n  tag_25\n  jumpi\n    /* \"VettedToken.sol\":1526:1581  IBurnManager(_burnManager).supportsToken(address(this)) */\n  mload(0x40)\n  shl(0xe4, 0x61f765)\n  dup2\n  mstore\n    /* \"VettedToken.sol\":1575:1579  this */\n  address\n    /* \"VettedToken.sol\":1526:1581  IBurnManager(_burnManager).supportsToken(address(this)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4751:4802   */\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"VettedToken.sol\":1526:1566  IBurnManager(_burnManager).supportsToken */\n  dup3\n  and\n  swap1\n  0x061f7650\n  swap1\n    /* \"#utility.yul\":4724:4742   */\n  0x24\n  add\n    /* \"VettedToken.sol\":1526:1581  IBurnManager(_burnManager).supportsToken(address(this)) */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_28\n  jumpi\n  returndatacopy(0x00, 0x00, returndatasize)\n  revert(0x00, returndatasize)\ntag_28:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"VettedToken.sol\":1500:1644  require(... */\n  tag_31\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":6001:6003   */\n  0x20\n    /* \"VettedToken.sol\":1500:1644  require(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5983:6004   */\n  mstore\n    /* \"#utility.yul\":6040:6042   */\n  0x1b\n    /* \"#utility.yul\":6020:6038   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":6013:6043   */\n  mstore\n    /* \"#utility.yul\":6079:6108   */\n  0x4275726e206d616e61676572206e6f7420636f6d70617469626c650000000000\n    /* \"#utility.yul\":6059:6077   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":6052:6109   */\n  mstore\n    /* \"#utility.yul\":6126:6144   */\n  0x64\n  add\n    /* \"VettedToken.sol\":1500:1644  require(... */\n  tag_13\n    /* \"#utility.yul\":5799:6150   */\n  jump\n    /* \"VettedToken.sol\":1500:1644  require(... */\ntag_31:\n    /* \"VettedToken.sol\":1659:1670  burnManager */\n  0x07\n    /* \"VettedToken.sol\":1659:1685  burnManager = _burnManager */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  or\n  swap1\n  sstore\n    /* \"VettedToken.sol\":1453:1697  if (_burnManager != address(0)) {... */\ntag_25:\n    /* \"VettedToken.sol\":892:1704  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"VettedToken.sol\":345:3231  contract Token is ERC20, Ownable {... */\n  jump(tag_43)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_36:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  0x00\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_45:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:323   */\ntag_37:\n    /* \"#utility.yul\":257:267   */\n  0x4e487b71\n    /* \"#utility.yul\":252:255   */\n  0xe0\n    /* \"#utility.yul\":248:268   */\n  shl\n    /* \"#utility.yul\":245:246   */\n  0x00\n    /* \"#utility.yul\":238:269   */\n  mstore\n    /* \"#utility.yul\":288:292   */\n  0x41\n    /* \"#utility.yul\":285:286   */\n  0x04\n    /* \"#utility.yul\":278:293   */\n  mstore\n    /* \"#utility.yul\":312:316   */\n  0x24\n    /* \"#utility.yul\":309:310   */\n  0x00\n    /* \"#utility.yul\":302:317   */\n  revert\n    /* \"#utility.yul\":328:1051   */\ntag_38:\n    /* \"#utility.yul\":382:387   */\n  0x00\n    /* \"#utility.yul\":435:438   */\n  dup3\n    /* \"#utility.yul\":428:432   */\n  0x1f\n    /* \"#utility.yul\":420:426   */\n  dup4\n    /* \"#utility.yul\":416:433   */\n  add\n    /* \"#utility.yul\":412:439   */\n  slt\n    /* \"#utility.yul\":402:457   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":453:454   */\n  0x00\n    /* \"#utility.yul\":450:451   */\n  0x00\n    /* \"#utility.yul\":443:455   */\n  revert\n    /* \"#utility.yul\":402:457   */\ntag_48:\n    /* \"#utility.yul\":480:493   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":505:535   */\n  dup2\n  gt\n    /* \"#utility.yul\":502:558   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":538:556   */\n  tag_50\n  tag_37\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":587:589   */\n  0x40\n    /* \"#utility.yul\":581:590   */\n  mload\n    /* \"#utility.yul\":679:681   */\n  0x1f\n    /* \"#utility.yul\":641:658   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":637:668   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":670:672   */\n  0x3f\n    /* \"#utility.yul\":633:673   */\n  add\n    /* \"#utility.yul\":629:683   */\n  and\n    /* \"#utility.yul\":617:684   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":699:733   */\n  dup2\n  gt\n    /* \"#utility.yul\":735:757   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":696:758   */\n  or\n    /* \"#utility.yul\":693:781   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":761:779   */\n  tag_52\n  tag_37\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":797:799   */\n  0x40\n    /* \"#utility.yul\":790:812   */\n  mstore\n    /* \"#utility.yul\":821:843   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":862:881   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":883:887   */\n  0x20\n    /* \"#utility.yul\":858:888   */\n  add\n    /* \"#utility.yul\":855:894   */\n  dup6\n  lt\n    /* \"#utility.yul\":852:911   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":907:908   */\n  0x00\n    /* \"#utility.yul\":904:905   */\n  0x00\n    /* \"#utility.yul\":897:909   */\n  revert\n    /* \"#utility.yul\":852:911   */\ntag_53:\n    /* \"#utility.yul\":964:970   */\n  dup2\n    /* \"#utility.yul\":957:961   */\n  0x20\n    /* \"#utility.yul\":949:955   */\n  dup6\n    /* \"#utility.yul\":945:962   */\n  add\n    /* \"#utility.yul\":938:942   */\n  0x20\n    /* \"#utility.yul\":930:936   */\n  dup4\n    /* \"#utility.yul\":926:943   */\n  add\n    /* \"#utility.yul\":920:971   */\n  mcopy\n    /* \"#utility.yul\":1019:1020   */\n  0x00\n    /* \"#utility.yul\":991:1010   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":1012:1016   */\n  0x20\n    /* \"#utility.yul\":987:1017   */\n  add\n    /* \"#utility.yul\":980:1021   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":995:1001   */\n  swap4\n    /* \"#utility.yul\":328:1051   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:2091   */\ntag_3:\n    /* \"#utility.yul\":1201:1207   */\n  0x00\n    /* \"#utility.yul\":1209:1215   */\n  0x00\n    /* \"#utility.yul\":1217:1223   */\n  0x00\n    /* \"#utility.yul\":1225:1231   */\n  0x00\n    /* \"#utility.yul\":1233:1239   */\n  0x00\n    /* \"#utility.yul\":1241:1247   */\n  0x00\n    /* \"#utility.yul\":1294:1297   */\n  0xc0\n    /* \"#utility.yul\":1282:1291   */\n  dup8\n    /* \"#utility.yul\":1273:1280   */\n  dup10\n    /* \"#utility.yul\":1269:1292   */\n  sub\n    /* \"#utility.yul\":1265:1298   */\n  slt\n    /* \"#utility.yul\":1262:1315   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1311:1312   */\n  0x00\n    /* \"#utility.yul\":1308:1309   */\n  0x00\n    /* \"#utility.yul\":1301:1313   */\n  revert\n    /* \"#utility.yul\":1262:1315   */\ntag_55:\n    /* \"#utility.yul\":1334:1374   */\n  tag_56\n    /* \"#utility.yul\":1364:1373   */\n  dup8\n    /* \"#utility.yul\":1334:1374   */\n  tag_36\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1324:1374   */\n  swap6\n  pop\n    /* \"#utility.yul\":1393:1442   */\n  tag_57\n    /* \"#utility.yul\":1438:1440   */\n  0x20\n    /* \"#utility.yul\":1427:1436   */\n  dup9\n    /* \"#utility.yul\":1423:1441   */\n  add\n    /* \"#utility.yul\":1393:1442   */\n  tag_36\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1486:1488   */\n  0x40\n    /* \"#utility.yul\":1471:1489   */\n  dup9\n  add\n    /* \"#utility.yul\":1465:1490   */\n  mload\n    /* \"#utility.yul\":1383:1442   */\n  swap1\n  swap6\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1502:1532   */\n  dup2\n  gt\n    /* \"#utility.yul\":1499:1549   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1545:1546   */\n  0x00\n    /* \"#utility.yul\":1542:1543   */\n  0x00\n    /* \"#utility.yul\":1535:1547   */\n  revert\n    /* \"#utility.yul\":1499:1549   */\ntag_58:\n    /* \"#utility.yul\":1568:1629   */\n  tag_59\n    /* \"#utility.yul\":1621:1628   */\n  dup10\n    /* \"#utility.yul\":1612:1618   */\n  dup3\n    /* \"#utility.yul\":1601:1610   */\n  dup11\n    /* \"#utility.yul\":1597:1619   */\n  add\n    /* \"#utility.yul\":1568:1629   */\n  tag_38\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1675:1677   */\n  0x60\n    /* \"#utility.yul\":1660:1678   */\n  dup10\n  add\n    /* \"#utility.yul\":1654:1679   */\n  mload\n    /* \"#utility.yul\":1558:1629   */\n  swap1\n  swap6\n  pop\n    /* \"#utility.yul\":1654:1679   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1691:1723   */\n  dup2\n  gt\n    /* \"#utility.yul\":1688:1740   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1736:1737   */\n  0x00\n    /* \"#utility.yul\":1733:1734   */\n  0x00\n    /* \"#utility.yul\":1726:1738   */\n  revert\n    /* \"#utility.yul\":1688:1740   */\ntag_60:\n    /* \"#utility.yul\":1759:1822   */\n  tag_61\n    /* \"#utility.yul\":1814:1821   */\n  dup10\n    /* \"#utility.yul\":1803:1811   */\n  dup3\n    /* \"#utility.yul\":1792:1801   */\n  dup11\n    /* \"#utility.yul\":1788:1812   */\n  add\n    /* \"#utility.yul\":1759:1822   */\n  tag_38\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1868:1871   */\n  0x80\n    /* \"#utility.yul\":1853:1872   */\n  dup10\n  add\n    /* \"#utility.yul\":1847:1873   */\n  mload\n    /* \"#utility.yul\":1749:1822   */\n  swap1\n  swap5\n  pop\n    /* \"#utility.yul\":1847:1873   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1885:1917   */\n  dup2\n  gt\n    /* \"#utility.yul\":1882:1934   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":1930:1931   */\n  0x00\n    /* \"#utility.yul\":1927:1928   */\n  0x00\n    /* \"#utility.yul\":1920:1932   */\n  revert\n    /* \"#utility.yul\":1882:1934   */\ntag_62:\n    /* \"#utility.yul\":1953:2016   */\n  tag_63\n    /* \"#utility.yul\":2008:2015   */\n  dup10\n    /* \"#utility.yul\":1997:2005   */\n  dup3\n    /* \"#utility.yul\":1986:1995   */\n  dup11\n    /* \"#utility.yul\":1982:2006   */\n  add\n    /* \"#utility.yul\":1953:2016   */\n  tag_38\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1943:2016   */\n  swap3\n  pop\n  pop\n    /* \"#utility.yul\":2035:2085   */\n  tag_64\n    /* \"#utility.yul\":2080:2083   */\n  0xa0\n    /* \"#utility.yul\":2069:2078   */\n  dup9\n    /* \"#utility.yul\":2065:2084   */\n  add\n    /* \"#utility.yul\":2035:2085   */\n  tag_36\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2025:2085   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:2091   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  jump\t// out\n    /* \"#utility.yul\":2096:2476   */\ntag_39:\n    /* \"#utility.yul\":2175:2176   */\n  0x01\n    /* \"#utility.yul\":2171:2183   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2218:2230   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2239:2300   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2293:2297   */\n  0x7f\n    /* \"#utility.yul\":2285:2291   */\n  dup3\n    /* \"#utility.yul\":2281:2298   */\n  and\n    /* \"#utility.yul\":2271:2298   */\n  swap2\n  pop\n    /* \"#utility.yul\":2239:2300   */\ntag_66:\n    /* \"#utility.yul\":2346:2348   */\n  0x20\n    /* \"#utility.yul\":2338:2344   */\n  dup3\n    /* \"#utility.yul\":2335:2349   */\n  lt\n    /* \"#utility.yul\":2315:2333   */\n  dup2\n    /* \"#utility.yul\":2312:2350   */\n  sub\n    /* \"#utility.yul\":2309:2470   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":2392:2402   */\n  0x4e487b71\n    /* \"#utility.yul\":2387:2390   */\n  0xe0\n    /* \"#utility.yul\":2383:2403   */\n  shl\n    /* \"#utility.yul\":2380:2381   */\n  0x00\n    /* \"#utility.yul\":2373:2404   */\n  mstore\n    /* \"#utility.yul\":2427:2431   */\n  0x22\n    /* \"#utility.yul\":2424:2425   */\n  0x04\n    /* \"#utility.yul\":2417:2432   */\n  mstore\n    /* \"#utility.yul\":2455:2459   */\n  0x24\n    /* \"#utility.yul\":2452:2453   */\n  0x00\n    /* \"#utility.yul\":2445:2460   */\n  revert\n    /* \"#utility.yul\":2309:2470   */\ntag_67:\n  pop\n    /* \"#utility.yul\":2096:2476   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2607:3125   */\ntag_41:\n    /* \"#utility.yul\":2709:2711   */\n  0x1f\n    /* \"#utility.yul\":2704:2707   */\n  dup3\n    /* \"#utility.yul\":2701:2712   */\n  gt\n    /* \"#utility.yul\":2698:3119   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2745:2750   */\n  dup1\n    /* \"#utility.yul\":2742:2743   */\n  0x00\n    /* \"#utility.yul\":2735:2751   */\n  mstore\n    /* \"#utility.yul\":2789:2793   */\n  0x20\n    /* \"#utility.yul\":2786:2787   */\n  0x00\n    /* \"#utility.yul\":2776:2794   */\n  keccak256\n    /* \"#utility.yul\":2859:2861   */\n  0x1f\n    /* \"#utility.yul\":2847:2857   */\n  dup5\n    /* \"#utility.yul\":2843:2862   */\n  add\n    /* \"#utility.yul\":2840:2841   */\n  0x05\n    /* \"#utility.yul\":2836:2863   */\n  shr\n    /* \"#utility.yul\":2830:2834   */\n  dup2\n    /* \"#utility.yul\":2826:2864   */\n  add\n    /* \"#utility.yul\":2895:2899   */\n  0x20\n    /* \"#utility.yul\":2883:2893   */\n  dup6\n    /* \"#utility.yul\":2880:2900   */\n  lt\n    /* \"#utility.yul\":2877:2924   */\n  iszero\n  tag_71\n  jumpi\n  pop\n    /* \"#utility.yul\":2918:2922   */\n  dup1\n    /* \"#utility.yul\":2877:2924   */\ntag_71:\n    /* \"#utility.yul\":2973:2975   */\n  0x1f\n    /* \"#utility.yul\":2968:2971   */\n  dup5\n    /* \"#utility.yul\":2964:2976   */\n  add\n    /* \"#utility.yul\":2961:2962   */\n  0x05\n    /* \"#utility.yul\":2957:2977   */\n  shr\n    /* \"#utility.yul\":2951:2955   */\n  dup3\n    /* \"#utility.yul\":2947:2978   */\n  add\n    /* \"#utility.yul\":2937:2978   */\n  swap2\n  pop\n    /* \"#utility.yul\":3028:3109   */\ntag_72:\n    /* \"#utility.yul\":3046:3048   */\n  dup2\n    /* \"#utility.yul\":3039:3044   */\n  dup2\n    /* \"#utility.yul\":3036:3049   */\n  lt\n    /* \"#utility.yul\":3028:3109   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":3105:3106   */\n  0x00\n    /* \"#utility.yul\":3091:3107   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3072:3073   */\n  0x01\n    /* \"#utility.yul\":3061:3074   */\n  add\n    /* \"#utility.yul\":3028:3109   */\n  jump(tag_72)\ntag_74:\n    /* \"#utility.yul\":3032:3035   */\n  pop\n  pop\n    /* \"#utility.yul\":2698:3119   */\ntag_70:\n    /* \"#utility.yul\":2607:3125   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3301:4600   */\ntag_9:\n    /* \"#utility.yul\":3421:3431   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3443:3473   */\n  dup2\n  gt\n    /* \"#utility.yul\":3440:3496   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3476:3494   */\n  tag_78\n  tag_37\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3505:3602   */\n  tag_79\n    /* \"#utility.yul\":3595:3601   */\n  dup2\n    /* \"#utility.yul\":3555:3593   */\n  tag_80\n    /* \"#utility.yul\":3587:3591   */\n  dup5\n    /* \"#utility.yul\":3581:3592   */\n  sload\n    /* \"#utility.yul\":3555:3593   */\n  tag_39\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3549:3553   */\n  dup5\n    /* \"#utility.yul\":3505:3602   */\n  tag_41\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3651:3655   */\n  0x20\n    /* \"#utility.yul\":3682:3684   */\n  0x1f\n    /* \"#utility.yul\":3671:3685   */\n  dup3\n  gt\n    /* \"#utility.yul\":3699:3700   */\n  0x01\n    /* \"#utility.yul\":3694:4343   */\n  dup2\n  eq\n  tag_82\n  jumpi\n    /* \"#utility.yul\":4387:4388   */\n  0x00\n    /* \"#utility.yul\":4404:4410   */\n  dup4\n    /* \"#utility.yul\":4401:4490   */\n  iszero\n  tag_83\n  jumpi\n  pop\n    /* \"#utility.yul\":4456:4475   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":4450:4476   */\n  mload\n    /* \"#utility.yul\":4401:4490   */\ntag_83:\n  not(0x00)\n    /* \"#utility.yul\":3258:3259   */\n  0x03\n    /* \"#utility.yul\":3254:3265   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":3250:3274   */\n  shr\n    /* \"#utility.yul\":3246:3275   */\n  not\n    /* \"#utility.yul\":3236:3276   */\n  and\n    /* \"#utility.yul\":3282:3283   */\n  0x01\n    /* \"#utility.yul\":3278:3289   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":3233:3290   */\n  or\n    /* \"#utility.yul\":4503:4584   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3664:4594   */\n  jump(tag_74)\n    /* \"#utility.yul\":3694:4343   */\ntag_82:\n    /* \"#utility.yul\":2554:2555   */\n  0x00\n    /* \"#utility.yul\":2547:2561   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":2591:2595   */\n  0x20\n    /* \"#utility.yul\":2578:2596   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3730:3750   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3848:4070   */\ntag_86:\n    /* \"#utility.yul\":3862:3869   */\n  dup3\n    /* \"#utility.yul\":3859:3860   */\n  dup2\n    /* \"#utility.yul\":3856:3870   */\n  lt\n    /* \"#utility.yul\":3848:4070   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":3944:3963   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3938:3964   */\n  mload\n    /* \"#utility.yul\":3923:3965   */\n  dup3\n  sstore\n    /* \"#utility.yul\":4051:4055   */\n  0x20\n    /* \"#utility.yul\":4036:4056   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":4004:4005   */\n  0x01\n    /* \"#utility.yul\":3992:4006   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3878:3890   */\n  add\n    /* \"#utility.yul\":3848:4070   */\n  jump(tag_86)\ntag_88:\n    /* \"#utility.yul\":3852:3855   */\n  pop\n    /* \"#utility.yul\":4098:4104   */\n  dup5\n    /* \"#utility.yul\":4089:4096   */\n  dup3\n    /* \"#utility.yul\":4086:4105   */\n  lt\n    /* \"#utility.yul\":4083:4284   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4159:4178   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":4153:4179   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":4242:4243   */\n  0x03\n    /* \"#utility.yul\":4238:4252   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":4254:4257   */\n  0xf8\n    /* \"#utility.yul\":4234:4258   */\n  and\n    /* \"#utility.yul\":4230:4267   */\n  shr\n    /* \"#utility.yul\":4226:4268   */\n  not\n    /* \"#utility.yul\":4211:4269   */\n  and\n    /* \"#utility.yul\":4196:4270   */\n  dup2\n  sstore\n    /* \"#utility.yul\":4083:4284   */\ntag_89:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4330:4331   */\n  0x01\n    /* \"#utility.yul\":4314:4328   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":4310:4332   */\n  add\n    /* \"#utility.yul\":4297:4333   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":3301:4600   */\n  jump\t// out\n    /* \"#utility.yul\":5517:5794   */\ntag_30:\n    /* \"#utility.yul\":5584:5590   */\n  0x00\n    /* \"#utility.yul\":5637:5639   */\n  0x20\n    /* \"#utility.yul\":5625:5634   */\n  dup3\n    /* \"#utility.yul\":5616:5623   */\n  dup5\n    /* \"#utility.yul\":5612:5635   */\n  sub\n    /* \"#utility.yul\":5608:5640   */\n  slt\n    /* \"#utility.yul\":5605:5657   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":5653:5654   */\n  0x00\n    /* \"#utility.yul\":5650:5651   */\n  0x00\n    /* \"#utility.yul\":5643:5655   */\n  revert\n    /* \"#utility.yul\":5605:5657   */\ntag_94:\n    /* \"#utility.yul\":5685:5694   */\n  dup2\n    /* \"#utility.yul\":5679:5695   */\n  mload\n    /* \"#utility.yul\":5738:5743   */\n  dup1\n    /* \"#utility.yul\":5731:5744   */\n  iszero\n    /* \"#utility.yul\":5724:5745   */\n  iszero\n    /* \"#utility.yul\":5717:5722   */\n  dup2\n    /* \"#utility.yul\":5714:5746   */\n  eq\n    /* \"#utility.yul\":5704:5764   */\n  tag_95\n  jumpi\n    /* \"#utility.yul\":5760:5761   */\n  0x00\n    /* \"#utility.yul\":5757:5758   */\n  0x00\n    /* \"#utility.yul\":5750:5762   */\n  revert\n    /* \"#utility.yul\":5704:5764   */\ntag_95:\n    /* \"#utility.yul\":5783:5788   */\n  swap4\n    /* \"#utility.yul\":5517:5794   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5799:6150   */\ntag_43:\n    /* \"VettedToken.sol\":345:3231  contract Token is ERC20, Ownable {... */\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x27f7320d12022267a30ae0570361d18e54ded7bfc682ac5b98d912c6ab83c578\")\n  0x00\n  assignImmutable(\"0x5d40e99405081227bb9ff3dfcb5688bebff2335619d1e80403a820b0e682b492\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"VettedToken.sol\":345:3231  contract Token is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xaba83150\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe77772fe\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf8a8fd6d\n      eq\n      tag_23\n      jumpi\n      revert(0x00, 0x00)\n    tag_25:\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x96b5059d\n      eq\n      tag_17\n      jumpi\n      revert(0x00, 0x00)\n    tag_24:\n      dup1\n      0x23b872dd\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6819cd19\n      eq\n      tag_12\n      jumpi\n      revert(0x00, 0x00)\n    tag_26:\n      dup1\n      0x02d05d3f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1faa49c3\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"VettedToken.sol\":429:461  address public immutable creator */\n    tag_3:\n      tag_27\n      immutable(\"0x27f7320d12022267a30ae0570361d18e54ded7bfc682ac5b98d912c6ab83c578\")\n      dup2\n      jump\n    tag_27:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"VettedToken.sol\":429:461  address public immutable creator */\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_35\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":1293:1307   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1286:1308   */\n      iszero\n        /* \"#utility.yul\":1268:1309   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1256:1258   */\n      0x20\n        /* \"#utility.yul\":1241:1259   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_29\n        /* \"#utility.yul\":1128:1315   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_41:\n      mload(0x40)\n        /* \"#utility.yul\":1466:1491   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1454:1456   */\n      0x20\n        /* \"#utility.yul\":1439:1457   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      tag_29\n        /* \"#utility.yul\":1320:1497   */\n      jump\n        /* \"VettedToken.sol\":497:523  address public burnManager */\n    tag_7:\n      sload(0x07)\n      tag_27\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_35\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"#utility.yul\":2023:2059   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2011:2013   */\n      0x20\n        /* \"#utility.yul\":1996:2014   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      tag_29\n        /* \"#utility.yul\":1881:2065   */\n      jump\n        /* \"VettedToken.sol\":1742:1900  function mint(address to, uint256 amount) external {... */\n    tag_10:\n      tag_57\n      tag_58\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"VettedToken.sol\":2259:2681  function burn(uint256 amount) public virtual {... */\n    tag_11:\n      tag_57\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"VettedToken.sol\":1953:2205  function factoryBurn(address from, uint256 amount) external {... */\n    tag_12:\n      tag_57\n      tag_65\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_41\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_57\n      tag_73\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_27)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_31\n      tag_78\n      jump\t// in\n        /* \"VettedToken.sol\":2744:3228  function setBurnManager(address newManager) external {... */\n    tag_17:\n      tag_57\n      tag_81\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_18:\n      tag_35\n      tag_84\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"VettedToken.sol\":468:490  string public imageUrl */\n    tag_19:\n      tag_31\n      tag_88\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_20:\n      tag_41\n      tag_91\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"VettedToken.sol\":385:422  address public immutable tokenFactory */\n    tag_21:\n      tag_27\n      immutable(\"0x5d40e99405081227bb9ff3dfcb5688bebff2335619d1e80403a820b0e682b492\")\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_57\n      tag_99\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n        /* \"VettedToken.sol\":530:548  string public test */\n    tag_23:\n      tag_31\n      tag_102\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_107\n      swap1\n      tag_106\n      jump\t// in\n    tag_107:\n      dup1\n      iszero\n      tag_108\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_109\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_108)\n    tag_109:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_110:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_110\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_114\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_111:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_121:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"VettedToken.sol\":1742:1900  function mint(address to, uint256 amount) external {... */\n    tag_59:\n        /* \"VettedToken.sol\":1812:1822  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"VettedToken.sol\":1826:1838  tokenFactory */\n      immutable(\"0x5d40e99405081227bb9ff3dfcb5688bebff2335619d1e80403a820b0e682b492\")\n        /* \"VettedToken.sol\":1812:1838  msg.sender == tokenFactory */\n      and\n      eq\n        /* \"VettedToken.sol\":1804:1864  require(msg.sender == tokenFactory, \"Only factory can mint\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3344:3346   */\n      0x20\n        /* \"VettedToken.sol\":1804:1864  require(msg.sender == tokenFactory, \"Only factory can mint\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3326:3347   */\n      mstore\n        /* \"#utility.yul\":3383:3385   */\n      0x15\n        /* \"#utility.yul\":3363:3381   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3356:3386   */\n      mstore\n      shl(0x5a, 0x13db9b1e48199858dd1bdc9e4818d85b881b5a5b9d)\n        /* \"#utility.yul\":3402:3420   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3395:3446   */\n      mstore\n        /* \"#utility.yul\":3463:3481   */\n      0x64\n      add\n        /* \"VettedToken.sol\":1804:1864  require(msg.sender == tokenFactory, \"Only factory can mint\") */\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"VettedToken.sol\":1875:1892  _mint(to, amount) */\n      tag_128\n        /* \"VettedToken.sol\":1881:1883  to */\n      dup3\n        /* \"VettedToken.sol\":1885:1891  amount */\n      dup3\n        /* \"VettedToken.sol\":1875:1880  _mint */\n      tag_129\n        /* \"VettedToken.sol\":1875:1892  _mint(to, amount) */\n      jump\t// in\n    tag_128:\n        /* \"VettedToken.sol\":1742:1900  function mint(address to, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"VettedToken.sol\":2259:2681  function burn(uint256 amount) public virtual {... */\n    tag_63:\n        /* \"VettedToken.sol\":2332:2333  0 */\n      0x00\n        /* \"VettedToken.sol\":2323:2329  amount */\n      dup2\n        /* \"VettedToken.sol\":2323:2333  amount > 0 */\n      gt\n        /* \"VettedToken.sol\":2315:2356  require(amount > 0, \"Amount must be > 0\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3694:3696   */\n      0x20\n        /* \"VettedToken.sol\":2315:2356  require(amount > 0, \"Amount must be > 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3676:3697   */\n      mstore\n        /* \"#utility.yul\":3733:3735   */\n      0x12\n        /* \"#utility.yul\":3713:3731   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3706:3736   */\n      mstore\n      shl(0x74, 0x0416d6f756e74206d757374206265203e203)\n        /* \"#utility.yul\":3752:3770   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3745:3793   */\n      mstore\n        /* \"#utility.yul\":3810:3828   */\n      0x64\n      add\n        /* \"VettedToken.sol\":2315:2356  require(amount > 0, \"Amount must be > 0\") */\n      tag_126\n        /* \"#utility.yul\":3492:3834   */\n      jump\n        /* \"VettedToken.sol\":2315:2356  require(amount > 0, \"Amount must be > 0\") */\n    tag_131:\n        /* \"VettedToken.sol\":2385:2395  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"VettedToken.sol\":2400:2406  amount */\n      dup2\n      gt\n        /* \"VettedToken.sol\":2375:2406  balanceOf(msg.sender) >= amount */\n      iszero\n        /* \"VettedToken.sol\":2367:2431  require(balanceOf(msg.sender) >= amount, \"Insufficient balance\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4041:4043   */\n      0x20\n        /* \"VettedToken.sol\":2367:2431  require(balanceOf(msg.sender) >= amount, \"Insufficient balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4023:4044   */\n      mstore\n        /* \"#utility.yul\":4080:4082   */\n      0x14\n        /* \"#utility.yul\":4060:4078   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4053:4083   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":4099:4117   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4092:4142   */\n      mstore\n        /* \"#utility.yul\":4159:4177   */\n      0x64\n      add\n        /* \"VettedToken.sol\":2367:2431  require(balanceOf(msg.sender) >= amount, \"Insufficient balance\") */\n      tag_126\n        /* \"#utility.yul\":3839:4183   */\n      jump\n        /* \"VettedToken.sol\":2367:2431  require(balanceOf(msg.sender) >= amount, \"Insufficient balance\") */\n    tag_135:\n        /* \"VettedToken.sol\":2444:2469  _burn(msg.sender, amount) */\n      tag_138\n        /* \"VettedToken.sol\":2450:2460  msg.sender */\n      caller\n        /* \"VettedToken.sol\":2462:2468  amount */\n      dup3\n        /* \"VettedToken.sol\":2444:2449  _burn */\n      tag_139\n        /* \"VettedToken.sol\":2444:2469  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_138:\n        /* \"VettedToken.sol\":2518:2531  BurnType.SELF */\n      0x01\n        /* \"VettedToken.sol\":2498:2508  msg.sender */\n      caller\n        /* \"VettedToken.sol\":2485:2547  TokensBurned(msg.sender, amount, BurnType.SELF, totalSupply()) */\n      0x14c08ae9f74e8b735a667822feb792c4e1324d0dd5887af1528665f8c2357f86\n        /* \"VettedToken.sol\":2510:2516  amount */\n      dup4\n        /* \"VettedToken.sol\":2533:2546  totalSupply() */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"VettedToken.sol\":2533:2546  totalSupply() */\n    tag_143:\n        /* \"VettedToken.sol\":2485:2547  TokensBurned(msg.sender, amount, BurnType.SELF, totalSupply()) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4494:4519   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":4550:4552   */\n      0x20\n        /* \"#utility.yul\":4535:4553   */\n      dup4\n      add\n        /* \"#utility.yul\":4528:4562   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4467:4485   */\n      add\n        /* \"VettedToken.sol\":2485:2547  TokensBurned(msg.sender, amount, BurnType.SELF, totalSupply()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"VettedToken.sol\":2564:2575  burnManager */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"VettedToken.sol\":2564:2589  burnManager != address(0) */\n      iszero\n        /* \"VettedToken.sol\":2560:2674  if (burnManager != address(0)) {... */\n      tag_146\n      jumpi\n        /* \"VettedToken.sol\":2619:2630  burnManager */\n      sload(0x07)\n        /* \"VettedToken.sol\":2606:2662  IBurnManager(burnManager).notifyBurn(msg.sender, amount) */\n      mload(0x40)\n      shl(0xe0, 0x1ed1028b)\n      dup2\n      mstore\n        /* \"VettedToken.sol\":2643:2653  msg.sender */\n      caller\n        /* \"VettedToken.sol\":2606:2662  IBurnManager(burnManager).notifyBurn(msg.sender, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4747:4798   */\n      mstore\n        /* \"#utility.yul\":4814:4832   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4807:4841   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"VettedToken.sol\":2619:2630  burnManager */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"VettedToken.sol\":2606:2642  IBurnManager(burnManager).notifyBurn */\n      0x1ed1028b\n      swap1\n        /* \"#utility.yul\":4720:4738   */\n      0x44\n      add\n        /* \"VettedToken.sol\":2606:2662  IBurnManager(burnManager).notifyBurn(msg.sender, amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_149\n      jumpi\n      revert(0x00, 0x00)\n    tag_149:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_151\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n        /* \"VettedToken.sol\":2560:2674  if (burnManager != address(0)) {... */\n    tag_146:\n        /* \"VettedToken.sol\":2259:2681  function burn(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"VettedToken.sol\":1953:2205  function factoryBurn(address from, uint256 amount) external {... */\n    tag_66:\n        /* \"VettedToken.sol\":2032:2042  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"VettedToken.sol\":2046:2058  tokenFactory */\n      immutable(\"0x5d40e99405081227bb9ff3dfcb5688bebff2335619d1e80403a820b0e682b492\")\n        /* \"VettedToken.sol\":2032:2058  msg.sender == tokenFactory */\n      and\n      eq\n        /* \"VettedToken.sol\":2024:2092  require(msg.sender == tokenFactory, \"Only factory can factory burn\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5054:5056   */\n      0x20\n        /* \"VettedToken.sol\":2024:2092  require(msg.sender == tokenFactory, \"Only factory can factory burn\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5036:5057   */\n      mstore\n        /* \"#utility.yul\":5093:5095   */\n      0x1d\n        /* \"#utility.yul\":5073:5091   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5066:5096   */\n      mstore\n        /* \"#utility.yul\":5132:5163   */\n      0x4f6e6c7920666163746f72792063616e20666163746f7279206275726e000000\n        /* \"#utility.yul\":5112:5130   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5105:5164   */\n      mstore\n        /* \"#utility.yul\":5181:5199   */\n      0x64\n      add\n        /* \"VettedToken.sol\":2024:2092  require(msg.sender == tokenFactory, \"Only factory can factory burn\") */\n      tag_126\n        /* \"#utility.yul\":4852:5205   */\n      jump\n        /* \"VettedToken.sol\":2024:2092  require(msg.sender == tokenFactory, \"Only factory can factory burn\") */\n    tag_153:\n        /* \"VettedToken.sol\":2103:2122  _burn(from, amount) */\n      tag_156\n        /* \"VettedToken.sol\":2109:2113  from */\n      dup3\n        /* \"VettedToken.sol\":2115:2121  amount */\n      dup3\n        /* \"VettedToken.sol\":2103:2108  _burn */\n      tag_139\n        /* \"VettedToken.sol\":2103:2122  _burn(from, amount) */\n      jump\t// in\n    tag_156:\n        /* \"VettedToken.sol\":2165:2181  BurnType.FACTORY */\n      0x00\n        /* \"VettedToken.sol\":2151:2155  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"VettedToken.sol\":2138:2197  TokensBurned(from, amount, BurnType.FACTORY, totalSupply()) */\n      and\n      0x14c08ae9f74e8b735a667822feb792c4e1324d0dd5887af1528665f8c2357f86\n        /* \"VettedToken.sol\":2157:2163  amount */\n      dup4\n        /* \"VettedToken.sol\":2183:2196  totalSupply() */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"VettedToken.sol\":2183:2196  totalSupply() */\n    tag_159:\n        /* \"VettedToken.sol\":2138:2197  TokensBurned(from, amount, BurnType.FACTORY, totalSupply()) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4494:4519   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":4550:4552   */\n      0x20\n        /* \"#utility.yul\":4535:4553   */\n      dup4\n      add\n        /* \"#utility.yul\":4528:4562   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4467:4485   */\n      add\n        /* \"VettedToken.sol\":2138:2197  TokensBurned(from, amount, BurnType.FACTORY, totalSupply()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"VettedToken.sol\":1953:2205  function factoryBurn(address from, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n        /* \"VettedToken.sol\":2744:3228  function setBurnManager(address newManager) external {... */\n    tag_82:\n        /* \"VettedToken.sol\":2816:2826  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"VettedToken.sol\":2830:2837  creator */\n      immutable(\"0x27f7320d12022267a30ae0570361d18e54ded7bfc682ac5b98d912c6ab83c578\")\n        /* \"VettedToken.sol\":2816:2837  msg.sender == creator */\n      and\n      eq\n        /* \"VettedToken.sol\":2808:2875  require(msg.sender == creator, \"Only creator can set burn manager\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5412:5414   */\n      0x20\n        /* \"VettedToken.sol\":2808:2875  require(msg.sender == creator, \"Only creator can set burn manager\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5394:5415   */\n      mstore\n        /* \"#utility.yul\":5451:5453   */\n      0x21\n        /* \"#utility.yul\":5431:5449   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5424:5454   */\n      mstore\n        /* \"#utility.yul\":5490:5524   */\n      0x4f6e6c792063726561746f722063616e20736574206275726e206d616e616765\n        /* \"#utility.yul\":5470:5488   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5463:5525   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":5541:5559   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5534:5565   */\n      mstore\n        /* \"#utility.yul\":5582:5601   */\n      0x84\n      add\n        /* \"VettedToken.sol\":2808:2875  require(msg.sender == creator, \"Only creator can set burn manager\") */\n      tag_126\n        /* \"#utility.yul\":5210:5607   */\n      jump\n        /* \"VettedToken.sol\":2808:2875  require(msg.sender == creator, \"Only creator can set burn manager\") */\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"VettedToken.sol\":2894:2918  newManager != address(0) */\n      dup2\n      and\n        /* \"VettedToken.sol\":2886:2945  require(newManager != address(0), \"Cannot be zero address\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5814:5816   */\n      0x20\n        /* \"VettedToken.sol\":2886:2945  require(newManager != address(0), \"Cannot be zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5796:5817   */\n      mstore\n        /* \"#utility.yul\":5853:5855   */\n      0x16\n        /* \"#utility.yul\":5833:5851   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5826:5856   */\n      mstore\n      shl(0x50, 0x43616e6e6f74206265207a65726f2061646472657373)\n        /* \"#utility.yul\":5872:5890   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5865:5917   */\n      mstore\n        /* \"#utility.yul\":5934:5952   */\n      0x64\n      add\n        /* \"VettedToken.sol\":2886:2945  require(newManager != address(0), \"Cannot be zero address\") */\n      tag_126\n        /* \"#utility.yul\":5612:5958   */\n      jump\n        /* \"VettedToken.sol\":2886:2945  require(newManager != address(0), \"Cannot be zero address\") */\n    tag_179:\n        /* \"VettedToken.sol\":2978:3031  IBurnManager(newManager).supportsToken(address(this)) */\n      mload(0x40)\n      shl(0xe4, 0x61f765)\n      dup2\n      mstore\n        /* \"VettedToken.sol\":3025:3029  this */\n      address\n        /* \"VettedToken.sol\":2978:3031  IBurnManager(newManager).supportsToken(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"VettedToken.sol\":2978:3016  IBurnManager(newManager).supportsToken */\n      dup3\n      and\n      swap1\n      0x061f7650\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"VettedToken.sol\":2978:3031  IBurnManager(newManager).supportsToken(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_185\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"VettedToken.sol\":2956:3086  require(... */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6447:6449   */\n      0x20\n        /* \"VettedToken.sol\":2956:3086  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6429:6450   */\n      mstore\n        /* \"#utility.yul\":6486:6488   */\n      0x1b\n        /* \"#utility.yul\":6466:6484   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6459:6489   */\n      mstore\n        /* \"#utility.yul\":6525:6554   */\n      0x4275726e206d616e61676572206e6f7420636f6d70617469626c650000000000\n        /* \"#utility.yul\":6505:6523   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6498:6555   */\n      mstore\n        /* \"#utility.yul\":6572:6590   */\n      0x64\n      add\n        /* \"VettedToken.sol\":2956:3086  require(... */\n      tag_126\n        /* \"#utility.yul\":6245:6596   */\n      jump\n        /* \"VettedToken.sol\":2956:3086  require(... */\n    tag_187:\n        /* \"VettedToken.sol\":3120:3131  burnManager */\n      0x07\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"VettedToken.sol\":3142:3166  burnManager = newManager */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"VettedToken.sol\":3182:3220  BurnManagerSet(oldManager, newManager) */\n      mload(0x40)\n        /* \"VettedToken.sol\":3120:3131  burnManager */\n      swap2\n      and\n      swap2\n        /* \"VettedToken.sol\":3142:3166  burnManager = newManager */\n      swap1\n        /* \"VettedToken.sol\":3120:3131  burnManager */\n      dup3\n      swap1\n        /* \"VettedToken.sol\":3182:3220  BurnManagerSet(oldManager, newManager) */\n      0x0a216b4ae65e96da40adb74d7d42ec050b88e0da645103a084647ed55eb3e0d9\n      swap1\n        /* \"VettedToken.sol\":3099:3117  address oldManager */\n      0x00\n      swap1\n        /* \"VettedToken.sol\":3182:3220  BurnManagerSet(oldManager, newManager) */\n      log3\n        /* \"VettedToken.sol\":2797:3228  {... */\n      pop\n        /* \"VettedToken.sol\":2744:3228  function setBurnManager(address newManager) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_114\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"VettedToken.sol\":468:490  string public imageUrl */\n    tag_88:\n      0x06\n      dup1\n      sload\n      tag_193\n      swap1\n      tag_106\n      jump\t// in\n    tag_193:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_194\n      swap1\n      tag_106\n      jump\t// in\n    tag_194:\n      dup1\n      iszero\n      tag_195\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_196\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_195)\n    tag_196:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_197:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_197\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_195:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_200:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_126\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"VettedToken.sol\":530:548  string public test */\n    tag_102:\n      0x08\n      dup1\n      sload\n      tag_193\n      swap1\n      tag_106\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_217\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6821:6853   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6803:6854   */\n      mstore\n        /* \"#utility.yul\":6870:6888   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6863:6897   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6913:6931   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6906:6940   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6776:6794   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_126\n        /* \"#utility.yul\":6601:6946   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_222\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      tag_126\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_222:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      tag_126\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      tag_126\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n      tag_233\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8106:8107  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      tag_126\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8137:8144  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8154:8155  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8163  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8136  _update */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_126\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_213:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      tag_126\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_244:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_246\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":160:211   */\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      tag_126\n        /* \"#utility.yul\":14:217   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_246:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_249\n      swap2\n        /* \"#utility.yul\":1466:1491   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1454:1456   */\n      0x20\n        /* \"#utility.yul\":1439:1457   */\n      add\n      swap1\n        /* \"#utility.yul\":1320:1497   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_227:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_252\n      swap2\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_254\n      swap1\n      pop\n      jump\n    tag_251:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6821:6853   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6803:6854   */\n      mstore\n        /* \"#utility.yul\":6870:6888   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6863:6897   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6913:6931   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6906:6940   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6776:6794   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_126\n        /* \"#utility.yul\":6601:6946   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_255:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_254:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_257\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_258)\n    tag_257:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_259\n      swap2\n        /* \"#utility.yul\":1466:1491   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1454:1456   */\n      0x20\n        /* \"#utility.yul\":1439:1457   */\n      add\n      swap1\n        /* \"#utility.yul\":1320:1497   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":222:640   */\n    tag_34:\n        /* \"#utility.yul\":371:373   */\n      0x20\n        /* \"#utility.yul\":360:369   */\n      dup2\n        /* \"#utility.yul\":353:374   */\n      mstore\n        /* \"#utility.yul\":334:338   */\n      0x00\n        /* \"#utility.yul\":403:409   */\n      dup3\n        /* \"#utility.yul\":397:410   */\n      mload\n        /* \"#utility.yul\":446:452   */\n      dup1\n        /* \"#utility.yul\":441:443   */\n      0x20\n        /* \"#utility.yul\":430:439   */\n      dup5\n        /* \"#utility.yul\":426:444   */\n      add\n        /* \"#utility.yul\":419:453   */\n      mstore\n        /* \"#utility.yul\":505:511   */\n      dup1\n        /* \"#utility.yul\":500:502   */\n      0x20\n        /* \"#utility.yul\":492:498   */\n      dup6\n        /* \"#utility.yul\":488:503   */\n      add\n        /* \"#utility.yul\":483:485   */\n      0x40\n        /* \"#utility.yul\":472:481   */\n      dup6\n        /* \"#utility.yul\":468:486   */\n      add\n        /* \"#utility.yul\":462:512   */\n      mcopy\n        /* \"#utility.yul\":561:562   */\n      0x00\n        /* \"#utility.yul\":556:558   */\n      0x40\n        /* \"#utility.yul\":547:553   */\n      dup3\n        /* \"#utility.yul\":536:545   */\n      dup6\n        /* \"#utility.yul\":532:554   */\n      add\n        /* \"#utility.yul\":528:559   */\n      add\n        /* \"#utility.yul\":521:563   */\n      mstore\n        /* \"#utility.yul\":631:633   */\n      0x40\n        /* \"#utility.yul\":624:626   */\n      0x1f\n        /* \"#utility.yul\":620:627   */\n      not\n        /* \"#utility.yul\":615:617   */\n      0x1f\n        /* \"#utility.yul\":607:613   */\n      dup4\n        /* \"#utility.yul\":603:618   */\n      add\n        /* \"#utility.yul\":599:628   */\n      and\n        /* \"#utility.yul\":588:597   */\n      dup5\n        /* \"#utility.yul\":584:629   */\n      add\n        /* \"#utility.yul\":580:634   */\n      add\n        /* \"#utility.yul\":572:634   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":222:640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":645:818   */\n    tag_260:\n        /* \"#utility.yul\":713:733   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":762:793   */\n      dup2\n      and\n        /* \"#utility.yul\":752:794   */\n      dup2\n      eq\n        /* \"#utility.yul\":742:812   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":808:809   */\n      0x00\n        /* \"#utility.yul\":805:806   */\n      0x00\n        /* \"#utility.yul\":798:810   */\n      revert\n        /* \"#utility.yul\":742:812   */\n    tag_265:\n        /* \"#utility.yul\":645:818   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":823:1123   */\n    tag_37:\n        /* \"#utility.yul\":891:897   */\n      0x00\n        /* \"#utility.yul\":899:905   */\n      0x00\n        /* \"#utility.yul\":952:954   */\n      0x40\n        /* \"#utility.yul\":940:949   */\n      dup4\n        /* \"#utility.yul\":931:938   */\n      dup6\n        /* \"#utility.yul\":927:950   */\n      sub\n        /* \"#utility.yul\":923:955   */\n      slt\n        /* \"#utility.yul\":920:972   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":968:969   */\n      0x00\n        /* \"#utility.yul\":965:966   */\n      0x00\n        /* \"#utility.yul\":958:970   */\n      revert\n        /* \"#utility.yul\":920:972   */\n    tag_267:\n        /* \"#utility.yul\":991:1020   */\n      tag_268\n        /* \"#utility.yul\":1010:1019   */\n      dup4\n        /* \"#utility.yul\":991:1020   */\n      tag_260\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":981:1020   */\n      swap5\n        /* \"#utility.yul\":1089:1091   */\n      0x20\n        /* \"#utility.yul\":1074:1092   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1061:1093   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":823:1123   */\n      jump\t// out\n        /* \"#utility.yul\":1502:1876   */\n    tag_50:\n        /* \"#utility.yul\":1579:1585   */\n      0x00\n        /* \"#utility.yul\":1587:1593   */\n      0x00\n        /* \"#utility.yul\":1595:1601   */\n      0x00\n        /* \"#utility.yul\":1648:1650   */\n      0x60\n        /* \"#utility.yul\":1636:1645   */\n      dup5\n        /* \"#utility.yul\":1627:1634   */\n      dup7\n        /* \"#utility.yul\":1623:1646   */\n      sub\n        /* \"#utility.yul\":1619:1651   */\n      slt\n        /* \"#utility.yul\":1616:1668   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":1664:1665   */\n      0x00\n        /* \"#utility.yul\":1661:1662   */\n      0x00\n        /* \"#utility.yul\":1654:1666   */\n      revert\n        /* \"#utility.yul\":1616:1668   */\n    tag_272:\n        /* \"#utility.yul\":1687:1716   */\n      tag_273\n        /* \"#utility.yul\":1706:1715   */\n      dup5\n        /* \"#utility.yul\":1687:1716   */\n      tag_260\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":1677:1716   */\n      swap3\n      pop\n        /* \"#utility.yul\":1735:1773   */\n      tag_274\n        /* \"#utility.yul\":1769:1771   */\n      0x20\n        /* \"#utility.yul\":1758:1767   */\n      dup6\n        /* \"#utility.yul\":1754:1772   */\n      add\n        /* \"#utility.yul\":1735:1773   */\n      tag_260\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":1502:1876   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1725:1773   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1842:1844   */\n      0x40\n        /* \"#utility.yul\":1827:1845   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1814:1846   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1502:1876   */\n      jump\t// out\n        /* \"#utility.yul\":2070:2296   */\n    tag_62:\n        /* \"#utility.yul\":2129:2135   */\n      0x00\n        /* \"#utility.yul\":2182:2184   */\n      0x20\n        /* \"#utility.yul\":2170:2179   */\n      dup3\n        /* \"#utility.yul\":2161:2168   */\n      dup5\n        /* \"#utility.yul\":2157:2180   */\n      sub\n        /* \"#utility.yul\":2153:2185   */\n      slt\n        /* \"#utility.yul\":2150:2202   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2195:2196   */\n      0x00\n        /* \"#utility.yul\":2188:2200   */\n      revert\n        /* \"#utility.yul\":2150:2202   */\n    tag_277:\n      pop\n        /* \"#utility.yul\":2243:2266   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2070:2296   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2301:2487   */\n    tag_69:\n        /* \"#utility.yul\":2360:2366   */\n      0x00\n        /* \"#utility.yul\":2413:2415   */\n      0x20\n        /* \"#utility.yul\":2401:2410   */\n      dup3\n        /* \"#utility.yul\":2392:2399   */\n      dup5\n        /* \"#utility.yul\":2388:2411   */\n      sub\n        /* \"#utility.yul\":2384:2416   */\n      slt\n        /* \"#utility.yul\":2381:2433   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":2429:2430   */\n      0x00\n        /* \"#utility.yul\":2426:2427   */\n      0x00\n        /* \"#utility.yul\":2419:2431   */\n      revert\n        /* \"#utility.yul\":2381:2433   */\n    tag_279:\n        /* \"#utility.yul\":2452:2481   */\n      tag_280\n        /* \"#utility.yul\":2471:2480   */\n      dup3\n        /* \"#utility.yul\":2452:2481   */\n      tag_260\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":2442:2481   */\n      swap4\n        /* \"#utility.yul\":2301:2487   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2492:2752   */\n    tag_92:\n        /* \"#utility.yul\":2560:2566   */\n      0x00\n        /* \"#utility.yul\":2568:2574   */\n      0x00\n        /* \"#utility.yul\":2621:2623   */\n      0x40\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2600:2607   */\n      dup6\n        /* \"#utility.yul\":2596:2619   */\n      sub\n        /* \"#utility.yul\":2592:2624   */\n      slt\n        /* \"#utility.yul\":2589:2641   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":2637:2638   */\n      0x00\n        /* \"#utility.yul\":2634:2635   */\n      0x00\n        /* \"#utility.yul\":2627:2639   */\n      revert\n        /* \"#utility.yul\":2589:2641   */\n    tag_282:\n        /* \"#utility.yul\":2660:2689   */\n      tag_283\n        /* \"#utility.yul\":2679:2688   */\n      dup4\n        /* \"#utility.yul\":2660:2689   */\n      tag_260\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2650:2689   */\n      swap2\n      pop\n        /* \"#utility.yul\":2708:2746   */\n      tag_284\n        /* \"#utility.yul\":2742:2744   */\n      0x20\n        /* \"#utility.yul\":2731:2740   */\n      dup5\n        /* \"#utility.yul\":2727:2745   */\n      add\n        /* \"#utility.yul\":2708:2746   */\n      tag_260\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":2698:2746   */\n      swap1\n      pop\n        /* \"#utility.yul\":2492:2752   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2757:3137   */\n    tag_106:\n        /* \"#utility.yul\":2836:2837   */\n      0x01\n        /* \"#utility.yul\":2832:2844   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2879:2891   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2900:2961   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":2954:2958   */\n      0x7f\n        /* \"#utility.yul\":2946:2952   */\n      dup3\n        /* \"#utility.yul\":2942:2959   */\n      and\n        /* \"#utility.yul\":2932:2959   */\n      swap2\n      pop\n        /* \"#utility.yul\":2900:2961   */\n    tag_286:\n        /* \"#utility.yul\":3007:3009   */\n      0x20\n        /* \"#utility.yul\":2999:3005   */\n      dup3\n        /* \"#utility.yul\":2996:3010   */\n      lt\n        /* \"#utility.yul\":2976:2994   */\n      dup2\n        /* \"#utility.yul\":2973:3011   */\n      sub\n        /* \"#utility.yul\":2970:3131   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":3053:3063   */\n      0x4e487b71\n        /* \"#utility.yul\":3048:3051   */\n      0xe0\n        /* \"#utility.yul\":3044:3064   */\n      shl\n        /* \"#utility.yul\":3041:3042   */\n      0x00\n        /* \"#utility.yul\":3034:3065   */\n      mstore\n        /* \"#utility.yul\":3088:3092   */\n      0x22\n        /* \"#utility.yul\":3085:3086   */\n      0x04\n        /* \"#utility.yul\":3078:3093   */\n      mstore\n        /* \"#utility.yul\":3116:3120   */\n      0x24\n        /* \"#utility.yul\":3113:3114   */\n      0x00\n        /* \"#utility.yul\":3106:3121   */\n      revert\n        /* \"#utility.yul\":2970:3131   */\n    tag_287:\n      pop\n        /* \"#utility.yul\":2757:3137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5963:6240   */\n    tag_186:\n        /* \"#utility.yul\":6030:6036   */\n      0x00\n        /* \"#utility.yul\":6083:6085   */\n      0x20\n        /* \"#utility.yul\":6071:6080   */\n      dup3\n        /* \"#utility.yul\":6062:6069   */\n      dup5\n        /* \"#utility.yul\":6058:6081   */\n      sub\n        /* \"#utility.yul\":6054:6086   */\n      slt\n        /* \"#utility.yul\":6051:6103   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":6099:6100   */\n      0x00\n        /* \"#utility.yul\":6096:6097   */\n      0x00\n        /* \"#utility.yul\":6089:6101   */\n      revert\n        /* \"#utility.yul\":6051:6103   */\n    tag_298:\n        /* \"#utility.yul\":6131:6140   */\n      dup2\n        /* \"#utility.yul\":6125:6141   */\n      mload\n        /* \"#utility.yul\":6184:6189   */\n      dup1\n        /* \"#utility.yul\":6177:6190   */\n      iszero\n        /* \"#utility.yul\":6170:6191   */\n      iszero\n        /* \"#utility.yul\":6163:6168   */\n      dup2\n        /* \"#utility.yul\":6160:6192   */\n      eq\n        /* \"#utility.yul\":6150:6210   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":6206:6207   */\n      0x00\n        /* \"#utility.yul\":6203:6204   */\n      0x00\n        /* \"#utility.yul\":6196:6208   */\n      revert\n        /* \"#utility.yul\":6951:7173   */\n    tag_253:\n        /* \"#utility.yul\":7016:7025   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7037:7047   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7034:7167   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":7089:7099   */\n      0x4e487b71\n        /* \"#utility.yul\":7084:7087   */\n      0xe0\n        /* \"#utility.yul\":7080:7100   */\n      shl\n        /* \"#utility.yul\":7077:7078   */\n      0x00\n        /* \"#utility.yul\":7070:7101   */\n      mstore\n        /* \"#utility.yul\":7124:7128   */\n      0x11\n        /* \"#utility.yul\":7121:7122   */\n      0x04\n        /* \"#utility.yul\":7114:7129   */\n      mstore\n        /* \"#utility.yul\":7152:7156   */\n      0x24\n        /* \"#utility.yul\":7149:7150   */\n      0x00\n        /* \"#utility.yul\":7142:7157   */\n      revert\n\n    auxdata: 0xa2646970667358221220892de6aa65a75e2ca4ff6d7ed0e0e0910822f908e2c58b460a4f9166a4ef3be164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1066": {
									"entryPoint": null,
									"id": 1066,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 568,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_address_fromMemory": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_16cfceb364b99915d337c26d8ba3bdcbce06c3595a535f586d679980d6a44d7d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2235764f18311222866a46b9cb0375f82b2ee44c533dd0ec92ce180500aee66f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4259564b459b7f2329d6dfde1735bd513320c28bd67c2fe25b44aa76ee2a6087__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1081,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 676,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6152:7",
										"nodeType": "YulBlock",
										"src": "0:6152:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:7",
													"nodeType": "YulBlock",
													"src": "74:117:7",
													"statements": [
														{
															"nativeSrc": "84:22:7",
															"nodeType": "YulAssignment",
															"src": "84:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:7"
																},
																"nativeSrc": "93:13:7",
																"nodeType": "YulFunctionCall",
																"src": "93:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:7",
																"nodeType": "YulBlock",
																"src": "169:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:7",
																					"nodeType": "YulLiteral",
																					"src": "178:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:7",
																					"nodeType": "YulLiteral",
																					"src": "181:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:7"
																			},
																			"nativeSrc": "171:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:7"
																		},
																		"nativeSrc": "171:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:7",
																										"nodeType": "YulLiteral",
																										"src": "154:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:7",
																										"nodeType": "YulLiteral",
																										"src": "159:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:7"
																								},
																								"nativeSrc": "150:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:7",
																								"nodeType": "YulLiteral",
																								"src": "163:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:7"
																						},
																						"nativeSrc": "146:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:7"
																				},
																				"nativeSrc": "135:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:7"
																		},
																		"nativeSrc": "125:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:7"
																},
																"nativeSrc": "118:50:7",
																"nodeType": "YulFunctionCall",
																"src": "118:50:7"
															},
															"nativeSrc": "115:70:7",
															"nodeType": "YulIf",
															"src": "115:70:7"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:7",
														"nodeType": "YulTypedName",
														"src": "53:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:7",
														"nodeType": "YulTypedName",
														"src": "64:5:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nativeSrc": "228:95:7",
													"nodeType": "YulBlock",
													"src": "228:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "245:1:7",
																		"nodeType": "YulLiteral",
																		"src": "245:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "252:3:7",
																				"nodeType": "YulLiteral",
																				"src": "252:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "257:10:7",
																				"nodeType": "YulLiteral",
																				"src": "257:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "248:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "248:3:7"
																		},
																		"nativeSrc": "248:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "248:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "238:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "238:6:7"
																},
																"nativeSrc": "238:31:7",
																"nodeType": "YulFunctionCall",
																"src": "238:31:7"
															},
															"nativeSrc": "238:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "238:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "285:1:7",
																		"nodeType": "YulLiteral",
																		"src": "285:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "288:4:7",
																		"nodeType": "YulLiteral",
																		"src": "288:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "278:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "278:6:7"
																},
																"nativeSrc": "278:15:7",
																"nodeType": "YulFunctionCall",
																"src": "278:15:7"
															},
															"nativeSrc": "278:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "278:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "309:1:7",
																		"nodeType": "YulLiteral",
																		"src": "309:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "312:4:7",
																		"nodeType": "YulLiteral",
																		"src": "312:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "302:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "302:6:7"
																},
																"nativeSrc": "302:15:7",
																"nodeType": "YulFunctionCall",
																"src": "302:15:7"
															},
															"nativeSrc": "302:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "302:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "196:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "196:127:7"
											},
											{
												"body": {
													"nativeSrc": "392:659:7",
													"nodeType": "YulBlock",
													"src": "392:659:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "441:16:7",
																"nodeType": "YulBlock",
																"src": "441:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "450:1:7",
																					"nodeType": "YulLiteral",
																					"src": "450:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "453:1:7",
																					"nodeType": "YulLiteral",
																					"src": "453:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "443:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "443:6:7"
																			},
																			"nativeSrc": "443:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "443:12:7"
																		},
																		"nativeSrc": "443:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "443:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "420:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "420:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "428:4:7",
																						"nodeType": "YulLiteral",
																						"src": "428:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "416:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "416:3:7"
																				},
																				"nativeSrc": "416:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "416:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "435:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "435:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "412:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "412:3:7"
																		},
																		"nativeSrc": "412:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "412:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "405:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "405:6:7"
																},
																"nativeSrc": "405:35:7",
																"nodeType": "YulFunctionCall",
																"src": "405:35:7"
															},
															"nativeSrc": "402:55:7",
															"nodeType": "YulIf",
															"src": "402:55:7"
														},
														{
															"nativeSrc": "466:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "466:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "486:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "486:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "480:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "480:5:7"
																},
																"nativeSrc": "480:13:7",
																"nodeType": "YulFunctionCall",
																"src": "480:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "470:6:7",
																	"nodeType": "YulTypedName",
																	"src": "470:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "536:22:7",
																"nodeType": "YulBlock",
																"src": "536:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "538:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "538:16:7"
																			},
																			"nativeSrc": "538:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "538:18:7"
																		},
																		"nativeSrc": "538:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "538:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "508:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "508:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "524:2:7",
																						"nodeType": "YulLiteral",
																						"src": "524:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "528:1:7",
																						"nodeType": "YulLiteral",
																						"src": "528:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "520:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "520:3:7"
																				},
																				"nativeSrc": "520:10:7",
																				"nodeType": "YulFunctionCall",
																				"src": "520:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "532:1:7",
																				"nodeType": "YulLiteral",
																				"src": "532:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "516:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "516:3:7"
																		},
																		"nativeSrc": "516:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "516:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "505:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "505:2:7"
																},
																"nativeSrc": "505:30:7",
																"nodeType": "YulFunctionCall",
																"src": "505:30:7"
															},
															"nativeSrc": "502:56:7",
															"nodeType": "YulIf",
															"src": "502:56:7"
														},
														{
															"nativeSrc": "567:23:7",
															"nodeType": "YulVariableDeclaration",
															"src": "567:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "587:2:7",
																		"nodeType": "YulLiteral",
																		"src": "587:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "581:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "581:5:7"
																},
																"nativeSrc": "581:9:7",
																"nodeType": "YulFunctionCall",
																"src": "581:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "571:6:7",
																	"nodeType": "YulTypedName",
																	"src": "571:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "599:85:7",
															"nodeType": "YulVariableDeclaration",
															"src": "599:85:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "621:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "621:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "645:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "645:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "653:4:7",
																										"nodeType": "YulLiteral",
																										"src": "653:4:7",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "641:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "641:3:7"
																								},
																								"nativeSrc": "641:17:7",
																								"nodeType": "YulFunctionCall",
																								"src": "641:17:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "664:2:7",
																										"nodeType": "YulLiteral",
																										"src": "664:2:7",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "660:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "660:3:7"
																								},
																								"nativeSrc": "660:7:7",
																								"nodeType": "YulFunctionCall",
																								"src": "660:7:7"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "637:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "637:3:7"
																						},
																						"nativeSrc": "637:31:7",
																						"nodeType": "YulFunctionCall",
																						"src": "637:31:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "670:2:7",
																						"nodeType": "YulLiteral",
																						"src": "670:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "633:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "633:3:7"
																				},
																				"nativeSrc": "633:40:7",
																				"nodeType": "YulFunctionCall",
																				"src": "633:40:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "679:2:7",
																						"nodeType": "YulLiteral",
																						"src": "679:2:7",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "675:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "675:3:7"
																				},
																				"nativeSrc": "675:7:7",
																				"nodeType": "YulFunctionCall",
																				"src": "675:7:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "629:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "629:3:7"
																		},
																		"nativeSrc": "629:54:7",
																		"nodeType": "YulFunctionCall",
																		"src": "629:54:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "617:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "617:3:7"
																},
																"nativeSrc": "617:67:7",
																"nodeType": "YulFunctionCall",
																"src": "617:67:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "603:10:7",
																	"nodeType": "YulTypedName",
																	"src": "603:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "759:22:7",
																"nodeType": "YulBlock",
																"src": "759:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "761:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "761:16:7"
																			},
																			"nativeSrc": "761:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "761:18:7"
																		},
																		"nativeSrc": "761:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "761:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "702:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "702:10:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "722:2:7",
																								"nodeType": "YulLiteral",
																								"src": "722:2:7",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "726:1:7",
																								"nodeType": "YulLiteral",
																								"src": "726:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "718:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:7"
																						},
																						"nativeSrc": "718:10:7",
																						"nodeType": "YulFunctionCall",
																						"src": "718:10:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "730:1:7",
																						"nodeType": "YulLiteral",
																						"src": "730:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "714:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "714:3:7"
																				},
																				"nativeSrc": "714:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "714:18:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "699:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "699:2:7"
																		},
																		"nativeSrc": "699:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "699:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "738:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "738:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "750:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "735:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "735:2:7"
																		},
																		"nativeSrc": "735:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "735:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "696:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "696:2:7"
																},
																"nativeSrc": "696:62:7",
																"nodeType": "YulFunctionCall",
																"src": "696:62:7"
															},
															"nativeSrc": "693:88:7",
															"nodeType": "YulIf",
															"src": "693:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "797:2:7",
																		"nodeType": "YulLiteral",
																		"src": "797:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "801:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "801:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "790:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "790:6:7"
																},
																"nativeSrc": "790:22:7",
																"nodeType": "YulFunctionCall",
																"src": "790:22:7"
															},
															"nativeSrc": "790:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "790:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "828:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "828:6:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "836:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "836:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "821:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "821:6:7"
																},
																"nativeSrc": "821:22:7",
																"nodeType": "YulFunctionCall",
																"src": "821:22:7"
															},
															"nativeSrc": "821:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "821:22:7"
														},
														{
															"body": {
																"nativeSrc": "895:16:7",
																"nodeType": "YulBlock",
																"src": "895:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "904:1:7",
																					"nodeType": "YulLiteral",
																					"src": "904:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "907:1:7",
																					"nodeType": "YulLiteral",
																					"src": "907:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "897:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "897:6:7"
																			},
																			"nativeSrc": "897:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "897:12:7"
																		},
																		"nativeSrc": "897:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "897:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "866:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "866:6:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "874:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "874:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "862:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "862:3:7"
																				},
																				"nativeSrc": "862:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "862:19:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "883:4:7",
																				"nodeType": "YulLiteral",
																				"src": "883:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "858:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "858:3:7"
																		},
																		"nativeSrc": "858:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "858:30:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "890:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "890:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "855:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "855:2:7"
																},
																"nativeSrc": "855:39:7",
																"nodeType": "YulFunctionCall",
																"src": "855:39:7"
															},
															"nativeSrc": "852:59:7",
															"nodeType": "YulIf",
															"src": "852:59:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "930:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "930:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "938:4:7",
																				"nodeType": "YulLiteral",
																				"src": "938:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "926:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "926:3:7"
																		},
																		"nativeSrc": "926:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "926:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "949:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "949:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "957:4:7",
																				"nodeType": "YulLiteral",
																				"src": "957:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "945:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "945:3:7"
																		},
																		"nativeSrc": "945:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "945:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "964:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "964:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "920:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "920:5:7"
																},
																"nativeSrc": "920:51:7",
																"nodeType": "YulFunctionCall",
																"src": "920:51:7"
															},
															"nativeSrc": "920:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "920:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "995:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "995:6:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1003:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1003:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "991:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "991:3:7"
																				},
																				"nativeSrc": "991:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "991:19:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1012:4:7",
																				"nodeType": "YulLiteral",
																				"src": "1012:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "987:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "987:3:7"
																		},
																		"nativeSrc": "987:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "987:30:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1019:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1019:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "980:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:7"
																},
																"nativeSrc": "980:41:7",
																"nodeType": "YulFunctionCall",
																"src": "980:41:7"
															},
															"nativeSrc": "980:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "980:41:7"
														},
														{
															"nativeSrc": "1030:15:7",
															"nodeType": "YulAssignment",
															"src": "1030:15:7",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1039:6:7",
																"nodeType": "YulIdentifier",
																"src": "1039:6:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1030:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1030:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "328:723:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "366:6:7",
														"nodeType": "YulTypedName",
														"src": "366:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "374:3:7",
														"nodeType": "YulTypedName",
														"src": "374:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "382:5:7",
														"nodeType": "YulTypedName",
														"src": "382:5:7",
														"type": ""
													}
												],
												"src": "328:723:7"
											},
											{
												"body": {
													"nativeSrc": "1252:839:7",
													"nodeType": "YulBlock",
													"src": "1252:839:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1299:16:7",
																"nodeType": "YulBlock",
																"src": "1299:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1308:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1308:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1311:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1311:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1301:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1301:6:7"
																			},
																			"nativeSrc": "1301:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1301:12:7"
																		},
																		"nativeSrc": "1301:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1301:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1273:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1273:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1282:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1282:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1269:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1269:3:7"
																		},
																		"nativeSrc": "1269:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1269:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1294:3:7",
																		"nodeType": "YulLiteral",
																		"src": "1294:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1265:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:7"
																},
																"nativeSrc": "1265:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1265:33:7"
															},
															"nativeSrc": "1262:53:7",
															"nodeType": "YulIf",
															"src": "1262:53:7"
														},
														{
															"nativeSrc": "1324:50:7",
															"nodeType": "YulAssignment",
															"src": "1324:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1364:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1364:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "1334:29:7",
																	"nodeType": "YulIdentifier",
																	"src": "1334:29:7"
																},
																"nativeSrc": "1334:40:7",
																"nodeType": "YulFunctionCall",
																"src": "1334:40:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1324:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1324:6:7"
																}
															]
														},
														{
															"nativeSrc": "1383:59:7",
															"nodeType": "YulAssignment",
															"src": "1383:59:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1427:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1427:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1438:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1438:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1423:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1423:3:7"
																		},
																		"nativeSrc": "1423:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1423:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "1393:29:7",
																	"nodeType": "YulIdentifier",
																	"src": "1393:29:7"
																},
																"nativeSrc": "1393:49:7",
																"nodeType": "YulFunctionCall",
																"src": "1393:49:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1383:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1383:6:7"
																}
															]
														},
														{
															"nativeSrc": "1451:39:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1451:39:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1475:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1475:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1486:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1486:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1471:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1471:3:7"
																		},
																		"nativeSrc": "1471:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1471:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1465:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1465:5:7"
																},
																"nativeSrc": "1465:25:7",
																"nodeType": "YulFunctionCall",
																"src": "1465:25:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1455:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1455:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1533:16:7",
																"nodeType": "YulBlock",
																"src": "1533:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1542:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1542:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1545:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1545:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1535:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1535:6:7"
																			},
																			"nativeSrc": "1535:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1535:12:7"
																		},
																		"nativeSrc": "1535:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1535:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1505:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1505:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1521:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1521:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1525:1:7",
																						"nodeType": "YulLiteral",
																						"src": "1525:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1517:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1517:3:7"
																				},
																				"nativeSrc": "1517:10:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1517:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1529:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1529:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1513:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:7"
																		},
																		"nativeSrc": "1513:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1513:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1502:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1502:2:7"
																},
																"nativeSrc": "1502:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1502:30:7"
															},
															"nativeSrc": "1499:50:7",
															"nodeType": "YulIf",
															"src": "1499:50:7"
														},
														{
															"nativeSrc": "1558:71:7",
															"nodeType": "YulAssignment",
															"src": "1558:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1601:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1601:9:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1612:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1612:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1597:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1597:3:7"
																		},
																		"nativeSrc": "1597:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1597:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1621:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "1621:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1568:28:7",
																	"nodeType": "YulIdentifier",
																	"src": "1568:28:7"
																},
																"nativeSrc": "1568:61:7",
																"nodeType": "YulFunctionCall",
																"src": "1568:61:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1558:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1558:6:7"
																}
															]
														},
														{
															"nativeSrc": "1638:41:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1638:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1675:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1675:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1660:3:7"
																		},
																		"nativeSrc": "1660:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1660:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1654:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1654:5:7"
																},
																"nativeSrc": "1654:25:7",
																"nodeType": "YulFunctionCall",
																"src": "1654:25:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1642:8:7",
																	"nodeType": "YulTypedName",
																	"src": "1642:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1724:16:7",
																"nodeType": "YulBlock",
																"src": "1724:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1733:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1733:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1736:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1736:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1726:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1726:6:7"
																			},
																			"nativeSrc": "1726:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1726:12:7"
																		},
																		"nativeSrc": "1726:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1726:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1694:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "1694:8:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1712:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1712:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1716:1:7",
																						"nodeType": "YulLiteral",
																						"src": "1716:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1708:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1708:3:7"
																				},
																				"nativeSrc": "1708:10:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1708:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1720:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1720:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1704:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:7"
																		},
																		"nativeSrc": "1704:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1704:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1691:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1691:2:7"
																},
																"nativeSrc": "1691:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1691:32:7"
															},
															"nativeSrc": "1688:52:7",
															"nodeType": "YulIf",
															"src": "1688:52:7"
														},
														{
															"nativeSrc": "1749:73:7",
															"nodeType": "YulAssignment",
															"src": "1749:73:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1792:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1792:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1803:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "1803:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1788:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1788:3:7"
																		},
																		"nativeSrc": "1788:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1788:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1814:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "1814:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1759:28:7",
																	"nodeType": "YulIdentifier",
																	"src": "1759:28:7"
																},
																"nativeSrc": "1759:63:7",
																"nodeType": "YulFunctionCall",
																"src": "1759:63:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1749:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:7"
																}
															]
														},
														{
															"nativeSrc": "1831:42:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1831:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1857:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1857:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1868:3:7",
																				"nodeType": "YulLiteral",
																				"src": "1868:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1853:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1853:3:7"
																		},
																		"nativeSrc": "1853:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1853:19:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1847:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1847:5:7"
																},
																"nativeSrc": "1847:26:7",
																"nodeType": "YulFunctionCall",
																"src": "1847:26:7"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nativeSrc": "1835:8:7",
																	"nodeType": "YulTypedName",
																	"src": "1835:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1918:16:7",
																"nodeType": "YulBlock",
																"src": "1918:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1927:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1927:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1930:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1930:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1920:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1920:6:7"
																			},
																			"nativeSrc": "1920:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1920:12:7"
																		},
																		"nativeSrc": "1920:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1920:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nativeSrc": "1888:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "1888:8:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1906:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1906:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1910:1:7",
																						"nodeType": "YulLiteral",
																						"src": "1910:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1902:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1902:3:7"
																				},
																				"nativeSrc": "1902:10:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1902:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1914:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1914:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1898:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1898:3:7"
																		},
																		"nativeSrc": "1898:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1898:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1885:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1885:2:7"
																},
																"nativeSrc": "1885:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1885:32:7"
															},
															"nativeSrc": "1882:52:7",
															"nodeType": "YulIf",
															"src": "1882:52:7"
														},
														{
															"nativeSrc": "1943:73:7",
															"nodeType": "YulAssignment",
															"src": "1943:73:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1986:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1986:9:7"
																			},
																			{
																				"name": "offset_2",
																				"nativeSrc": "1997:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "1997:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1982:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1982:3:7"
																		},
																		"nativeSrc": "1982:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1982:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2008:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2008:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1953:28:7",
																	"nodeType": "YulIdentifier",
																	"src": "1953:28:7"
																},
																"nativeSrc": "1953:63:7",
																"nodeType": "YulFunctionCall",
																"src": "1953:63:7"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "1943:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1943:6:7"
																}
															]
														},
														{
															"nativeSrc": "2025:60:7",
															"nodeType": "YulAssignment",
															"src": "2025:60:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2069:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2069:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2080:3:7",
																				"nodeType": "YulLiteral",
																				"src": "2080:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2065:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2065:3:7"
																		},
																		"nativeSrc": "2065:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2065:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "2035:29:7",
																	"nodeType": "YulIdentifier",
																	"src": "2035:29:7"
																},
																"nativeSrc": "2035:50:7",
																"nodeType": "YulFunctionCall",
																"src": "2035:50:7"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "2025:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2025:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_address_fromMemory",
												"nativeSrc": "1056:1035:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1178:9:7",
														"nodeType": "YulTypedName",
														"src": "1178:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1189:7:7",
														"nodeType": "YulTypedName",
														"src": "1189:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1201:6:7",
														"nodeType": "YulTypedName",
														"src": "1201:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1209:6:7",
														"nodeType": "YulTypedName",
														"src": "1209:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1217:6:7",
														"nodeType": "YulTypedName",
														"src": "1217:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1225:6:7",
														"nodeType": "YulTypedName",
														"src": "1225:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1233:6:7",
														"nodeType": "YulTypedName",
														"src": "1233:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "1241:6:7",
														"nodeType": "YulTypedName",
														"src": "1241:6:7",
														"type": ""
													}
												],
												"src": "1056:1035:7"
											},
											{
												"body": {
													"nativeSrc": "2151:325:7",
													"nodeType": "YulBlock",
													"src": "2151:325:7",
													"statements": [
														{
															"nativeSrc": "2161:22:7",
															"nodeType": "YulAssignment",
															"src": "2161:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2175:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2175:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2178:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2178:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2171:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2171:3:7"
																},
																"nativeSrc": "2171:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2171:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2161:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2161:6:7"
																}
															]
														},
														{
															"nativeSrc": "2192:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2192:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2222:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2222:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2228:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2228:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2218:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2218:3:7"
																},
																"nativeSrc": "2218:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2218:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2196:18:7",
																	"nodeType": "YulTypedName",
																	"src": "2196:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2269:31:7",
																"nodeType": "YulBlock",
																"src": "2269:31:7",
																"statements": [
																	{
																		"nativeSrc": "2271:27:7",
																		"nodeType": "YulAssignment",
																		"src": "2271:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2285:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2285:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2293:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2293:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2281:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2281:3:7"
																			},
																			"nativeSrc": "2281:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2281:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2271:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2271:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2249:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2249:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2242:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2242:6:7"
																},
																"nativeSrc": "2242:26:7",
																"nodeType": "YulFunctionCall",
																"src": "2242:26:7"
															},
															"nativeSrc": "2239:61:7",
															"nodeType": "YulIf",
															"src": "2239:61:7"
														},
														{
															"body": {
																"nativeSrc": "2359:111:7",
																"nodeType": "YulBlock",
																"src": "2359:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2380:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2380:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2387:3:7",
																							"nodeType": "YulLiteral",
																							"src": "2387:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2392:10:7",
																							"nodeType": "YulLiteral",
																							"src": "2392:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2383:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2383:3:7"
																					},
																					"nativeSrc": "2383:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2383:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2373:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2373:6:7"
																			},
																			"nativeSrc": "2373:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2373:31:7"
																		},
																		"nativeSrc": "2373:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2373:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2424:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2424:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2427:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2427:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2417:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2417:6:7"
																			},
																			"nativeSrc": "2417:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2417:15:7"
																		},
																		"nativeSrc": "2417:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2417:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2452:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2452:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2455:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2455:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2445:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2445:6:7"
																			},
																			"nativeSrc": "2445:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2445:15:7"
																		},
																		"nativeSrc": "2445:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2445:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2315:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2315:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2338:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2338:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2346:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2346:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2335:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2335:2:7"
																		},
																		"nativeSrc": "2335:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2335:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2312:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2312:2:7"
																},
																"nativeSrc": "2312:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2312:38:7"
															},
															"nativeSrc": "2309:161:7",
															"nodeType": "YulIf",
															"src": "2309:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2096:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2131:4:7",
														"nodeType": "YulTypedName",
														"src": "2131:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2140:6:7",
														"nodeType": "YulTypedName",
														"src": "2140:6:7",
														"type": ""
													}
												],
												"src": "2096:380:7"
											},
											{
												"body": {
													"nativeSrc": "2537:65:7",
													"nodeType": "YulBlock",
													"src": "2537:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2554:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2554:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2557:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2557:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2547:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2547:6:7"
																},
																"nativeSrc": "2547:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2547:14:7"
															},
															"nativeSrc": "2547:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "2547:14:7"
														},
														{
															"nativeSrc": "2570:26:7",
															"nodeType": "YulAssignment",
															"src": "2570:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2588:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2588:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2591:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2591:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2578:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2578:9:7"
																},
																"nativeSrc": "2578:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2578:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2570:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2570:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "2481:121:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2520:3:7",
														"nodeType": "YulTypedName",
														"src": "2520:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2528:4:7",
														"nodeType": "YulTypedName",
														"src": "2528:4:7",
														"type": ""
													}
												],
												"src": "2481:121:7"
											},
											{
												"body": {
													"nativeSrc": "2688:437:7",
													"nodeType": "YulBlock",
													"src": "2688:437:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2721:398:7",
																"nodeType": "YulBlock",
																"src": "2721:398:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2742:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2742:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2745:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2745:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2735:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2735:6:7"
																			},
																			"nativeSrc": "2735:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2735:16:7"
																		},
																		"nativeSrc": "2735:16:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2735:16:7"
																	},
																	{
																		"nativeSrc": "2764:30:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2764:30:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2786:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2786:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2789:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2789:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2776:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2776:9:7"
																			},
																			"nativeSrc": "2776:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2776:18:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2768:4:7",
																				"nodeType": "YulTypedName",
																				"src": "2768:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2807:57:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2807:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2830:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "2830:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2840:1:7",
																							"nodeType": "YulLiteral",
																							"src": "2840:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2847:10:7",
																									"nodeType": "YulIdentifier",
																									"src": "2847:10:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2859:2:7",
																									"nodeType": "YulLiteral",
																									"src": "2859:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2843:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2843:3:7"
																							},
																							"nativeSrc": "2843:19:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2843:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2836:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2836:3:7"
																					},
																					"nativeSrc": "2836:27:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2836:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2826:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2826:3:7"
																			},
																			"nativeSrc": "2826:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2826:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2811:11:7",
																				"nodeType": "YulTypedName",
																				"src": "2811:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2901:23:7",
																			"nodeType": "YulBlock",
																			"src": "2901:23:7",
																			"statements": [
																				{
																					"nativeSrc": "2903:19:7",
																					"nodeType": "YulAssignment",
																					"src": "2903:19:7",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2918:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2918:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2903:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "2903:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2883:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "2883:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2895:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2895:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2880:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "2880:2:7"
																			},
																			"nativeSrc": "2880:20:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2880:20:7"
																		},
																		"nativeSrc": "2877:47:7",
																		"nodeType": "YulIf",
																		"src": "2877:47:7"
																	},
																	{
																		"nativeSrc": "2937:41:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2937:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2951:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "2951:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2961:1:7",
																							"nodeType": "YulLiteral",
																							"src": "2961:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2968:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2968:3:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2973:2:7",
																									"nodeType": "YulLiteral",
																									"src": "2973:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2964:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2964:3:7"
																							},
																							"nativeSrc": "2964:12:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2964:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2957:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2957:3:7"
																					},
																					"nativeSrc": "2957:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2957:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2947:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2947:3:7"
																			},
																			"nativeSrc": "2947:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2947:31:7"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2941:2:7",
																				"nodeType": "YulTypedName",
																				"src": "2941:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2991:24:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2991:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "3004:11:7",
																			"nodeType": "YulIdentifier",
																			"src": "3004:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2995:5:7",
																				"nodeType": "YulTypedName",
																				"src": "2995:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3089:20:7",
																			"nodeType": "YulBlock",
																			"src": "3089:20:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "3098:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "3098:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3105:1:7",
																								"nodeType": "YulLiteral",
																								"src": "3105:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "3091:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "3091:6:7"
																						},
																						"nativeSrc": "3091:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3091:16:7"
																					},
																					"nativeSrc": "3091:16:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "3091:16:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3039:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3039:5:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "3046:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "3046:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3036:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3036:2:7"
																			},
																			"nativeSrc": "3036:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3036:13:7"
																		},
																		"nativeSrc": "3028:81:7",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "3050:26:7",
																			"nodeType": "YulBlock",
																			"src": "3050:26:7",
																			"statements": [
																				{
																					"nativeSrc": "3052:22:7",
																					"nodeType": "YulAssignment",
																					"src": "3052:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "3065:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "3065:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3072:1:7",
																								"nodeType": "YulLiteral",
																								"src": "3072:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3061:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3061:3:7"
																						},
																						"nativeSrc": "3061:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3061:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "3052:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "3052:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "3032:3:7",
																			"nodeType": "YulBlock",
																			"src": "3032:3:7",
																			"statements": []
																		},
																		"src": "3028:81:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2704:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2704:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2709:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2709:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2701:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2701:2:7"
																},
																"nativeSrc": "2701:11:7",
																"nodeType": "YulFunctionCall",
																"src": "2701:11:7"
															},
															"nativeSrc": "2698:421:7",
															"nodeType": "YulIf",
															"src": "2698:421:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2607:518:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2660:5:7",
														"nodeType": "YulTypedName",
														"src": "2660:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2667:3:7",
														"nodeType": "YulTypedName",
														"src": "2667:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2672:10:7",
														"nodeType": "YulTypedName",
														"src": "2672:10:7",
														"type": ""
													}
												],
												"src": "2607:518:7"
											},
											{
												"body": {
													"nativeSrc": "3215:81:7",
													"nodeType": "YulBlock",
													"src": "3215:81:7",
													"statements": [
														{
															"nativeSrc": "3225:65:7",
															"nodeType": "YulAssignment",
															"src": "3225:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "3240:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3240:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3258:1:7",
																										"nodeType": "YulLiteral",
																										"src": "3258:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "3261:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "3261:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "3254:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3254:3:7"
																								},
																								"nativeSrc": "3254:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3254:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3271:1:7",
																										"nodeType": "YulLiteral",
																										"src": "3271:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "3267:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3267:3:7"
																								},
																								"nativeSrc": "3267:6:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3267:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "3250:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3250:3:7"
																						},
																						"nativeSrc": "3250:24:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3250:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3246:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3246:3:7"
																				},
																				"nativeSrc": "3246:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3246:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3236:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3236:3:7"
																		},
																		"nativeSrc": "3236:40:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3236:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3282:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3282:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3285:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3285:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3278:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3278:3:7"
																		},
																		"nativeSrc": "3278:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3278:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3233:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:2:7"
																},
																"nativeSrc": "3233:57:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3130:166:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3192:4:7",
														"nodeType": "YulTypedName",
														"src": "3192:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3198:3:7",
														"nodeType": "YulTypedName",
														"src": "3198:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3206:4:7",
														"nodeType": "YulTypedName",
														"src": "3206:4:7",
														"type": ""
													}
												],
												"src": "3130:166:7"
											},
											{
												"body": {
													"nativeSrc": "3397:1203:7",
													"nodeType": "YulBlock",
													"src": "3397:1203:7",
													"statements": [
														{
															"nativeSrc": "3407:24:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3407:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3427:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3427:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3421:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3421:5:7"
																},
																"nativeSrc": "3421:10:7",
																"nodeType": "YulFunctionCall",
																"src": "3421:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3411:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3411:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3474:22:7",
																"nodeType": "YulBlock",
																"src": "3474:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3476:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "3476:16:7"
																			},
																			"nativeSrc": "3476:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3476:18:7"
																		},
																		"nativeSrc": "3476:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3476:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3446:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3446:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3462:2:7",
																						"nodeType": "YulLiteral",
																						"src": "3462:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3466:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3466:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3458:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3458:3:7"
																				},
																				"nativeSrc": "3458:10:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3458:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3470:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3470:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3454:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3454:3:7"
																		},
																		"nativeSrc": "3454:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3454:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3443:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3443:2:7"
																},
																"nativeSrc": "3443:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3443:30:7"
															},
															"nativeSrc": "3440:56:7",
															"nodeType": "YulIf",
															"src": "3440:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3549:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3549:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3587:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "3587:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3581:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3581:5:7"
																				},
																				"nativeSrc": "3581:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3581:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3555:25:7",
																			"nodeType": "YulIdentifier",
																			"src": "3555:25:7"
																		},
																		"nativeSrc": "3555:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3555:38:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3595:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3595:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "3505:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3505:43:7"
																},
																"nativeSrc": "3505:97:7",
																"nodeType": "YulFunctionCall",
																"src": "3505:97:7"
															},
															"nativeSrc": "3505:97:7",
															"nodeType": "YulExpressionStatement",
															"src": "3505:97:7"
														},
														{
															"nativeSrc": "3611:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3611:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3628:1:7",
																"nodeType": "YulLiteral",
																"src": "3628:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3615:9:7",
																	"nodeType": "YulTypedName",
																	"src": "3615:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3638:17:7",
															"nodeType": "YulAssignment",
															"src": "3638:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3651:4:7",
																"nodeType": "YulLiteral",
																"src": "3651:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3638:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3638:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3701:642:7",
																		"nodeType": "YulBlock",
																		"src": "3701:642:7",
																		"statements": [
																			{
																				"nativeSrc": "3715:35:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3715:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3734:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "3734:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3746:2:7",
																									"nodeType": "YulLiteral",
																									"src": "3746:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3742:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "3742:3:7"
																							},
																							"nativeSrc": "3742:7:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3742:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3730:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3730:3:7"
																					},
																					"nativeSrc": "3730:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3730:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3719:7:7",
																						"nodeType": "YulTypedName",
																						"src": "3719:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3763:49:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3763:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3807:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "3807:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3777:29:7",
																						"nodeType": "YulIdentifier",
																						"src": "3777:29:7"
																					},
																					"nativeSrc": "3777:35:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3777:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3767:6:7",
																						"nodeType": "YulTypedName",
																						"src": "3767:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3825:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3825:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3834:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3834:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3829:1:7",
																						"nodeType": "YulTypedName",
																						"src": "3829:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3905:165:7",
																					"nodeType": "YulBlock",
																					"src": "3905:165:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3930:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "3930:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3948:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "3948:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3953:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "3953:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3944:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "3944:3:7"
																												},
																												"nativeSrc": "3944:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "3944:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3938:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "3938:5:7"
																										},
																										"nativeSrc": "3938:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "3938:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3923:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3923:6:7"
																								},
																								"nativeSrc": "3923:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3923:42:7"
																							},
																							"nativeSrc": "3923:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "3923:42:7"
																						},
																						{
																							"nativeSrc": "3982:24:7",
																							"nodeType": "YulAssignment",
																							"src": "3982:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3996:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "3996:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4004:1:7",
																										"nodeType": "YulLiteral",
																										"src": "4004:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3992:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3992:3:7"
																								},
																								"nativeSrc": "3992:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3992:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3982:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3982:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4023:33:7",
																							"nodeType": "YulAssignment",
																							"src": "4023:33:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4040:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "4040:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4051:4:7",
																										"nodeType": "YulLiteral",
																										"src": "4051:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4036:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4036:3:7"
																								},
																								"nativeSrc": "4036:20:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4036:20:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4023:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "4023:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3859:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "3859:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3862:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "3862:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3856:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "3856:2:7"
																					},
																					"nativeSrc": "3856:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3856:14:7"
																				},
																				"nativeSrc": "3848:222:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3871:21:7",
																					"nodeType": "YulBlock",
																					"src": "3871:21:7",
																					"statements": [
																						{
																							"nativeSrc": "3873:17:7",
																							"nodeType": "YulAssignment",
																							"src": "3873:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3882:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "3882:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3885:4:7",
																										"nodeType": "YulLiteral",
																										"src": "3885:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3878:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3878:3:7"
																								},
																								"nativeSrc": "3878:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3878:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3873:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "3873:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3852:3:7",
																					"nodeType": "YulBlock",
																					"src": "3852:3:7",
																					"statements": []
																				},
																				"src": "3848:222:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "4118:166:7",
																					"nodeType": "YulBlock",
																					"src": "4118:166:7",
																					"statements": [
																						{
																							"nativeSrc": "4136:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4136:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4163:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "4163:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4168:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4168:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4159:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "4159:3:7"
																										},
																										"nativeSrc": "4159:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4159:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4153:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "4153:5:7"
																								},
																								"nativeSrc": "4153:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4153:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4140:9:7",
																									"nodeType": "YulTypedName",
																									"src": "4140:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4203:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4203:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4215:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4215:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "4242:1:7",
																																				"nodeType": "YulLiteral",
																																				"src": "4242:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "4245:6:7",
																																				"nodeType": "YulIdentifier",
																																				"src": "4245:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "4238:3:7",
																																			"nodeType": "YulIdentifier",
																																			"src": "4238:3:7"
																																		},
																																		"nativeSrc": "4238:14:7",
																																		"nodeType": "YulFunctionCall",
																																		"src": "4238:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4254:3:7",
																																		"nodeType": "YulLiteral",
																																		"src": "4254:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "4234:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "4234:3:7"
																																},
																																"nativeSrc": "4234:24:7",
																																"nodeType": "YulFunctionCall",
																																"src": "4234:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4264:1:7",
																																		"nodeType": "YulLiteral",
																																		"src": "4264:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "4260:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "4260:3:7"
																																},
																																"nativeSrc": "4260:6:7",
																																"nodeType": "YulFunctionCall",
																																"src": "4260:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "4230:3:7",
																															"nodeType": "YulIdentifier",
																															"src": "4230:3:7"
																														},
																														"nativeSrc": "4230:37:7",
																														"nodeType": "YulFunctionCall",
																														"src": "4230:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "4226:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4226:3:7"
																												},
																												"nativeSrc": "4226:42:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4226:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "4211:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "4211:3:7"
																										},
																										"nativeSrc": "4211:58:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4211:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4196:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4196:6:7"
																								},
																								"nativeSrc": "4196:74:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4196:74:7"
																							},
																							"nativeSrc": "4196:74:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4196:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4089:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4089:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4098:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4098:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4086:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4086:2:7"
																					},
																					"nativeSrc": "4086:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4086:19:7"
																				},
																				"nativeSrc": "4083:201:7",
																				"nodeType": "YulIf",
																				"src": "4083:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4304:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4304:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "4318:1:7",
																											"nodeType": "YulLiteral",
																											"src": "4318:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "4321:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "4321:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "4314:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "4314:3:7"
																									},
																									"nativeSrc": "4314:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "4314:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4330:1:7",
																									"nodeType": "YulLiteral",
																									"src": "4330:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4310:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4310:3:7"
																							},
																							"nativeSrc": "4310:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4310:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4297:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4297:6:7"
																					},
																					"nativeSrc": "4297:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4297:36:7"
																				},
																				"nativeSrc": "4297:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4297:36:7"
																			}
																		]
																	},
																	"nativeSrc": "3694:649:7",
																	"nodeType": "YulCase",
																	"src": "3694:649:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3699:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3699:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4360:234:7",
																		"nodeType": "YulBlock",
																		"src": "4360:234:7",
																		"statements": [
																			{
																				"nativeSrc": "4374:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4374:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4387:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4387:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "4378:5:7",
																						"nodeType": "YulTypedName",
																						"src": "4378:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4423:67:7",
																					"nodeType": "YulBlock",
																					"src": "4423:67:7",
																					"statements": [
																						{
																							"nativeSrc": "4441:35:7",
																							"nodeType": "YulAssignment",
																							"src": "4441:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4460:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "4460:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4465:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4465:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4456:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "4456:3:7"
																										},
																										"nativeSrc": "4456:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4456:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4450:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "4450:5:7"
																								},
																								"nativeSrc": "4450:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4450:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "4441:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "4441:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "4404:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4404:6:7"
																				},
																				"nativeSrc": "4401:89:7",
																				"nodeType": "YulIf",
																				"src": "4401:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4510:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4510:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4569:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "4569:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4576:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4576:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4516:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "4516:52:7"
																							},
																							"nativeSrc": "4516:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4516:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4503:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4503:6:7"
																					},
																					"nativeSrc": "4503:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4503:81:7"
																				},
																				"nativeSrc": "4503:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4503:81:7"
																			}
																		]
																	},
																	"nativeSrc": "4352:242:7",
																	"nodeType": "YulCase",
																	"src": "4352:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3674:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3674:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3682:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3682:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3671:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3671:2:7"
																},
																"nativeSrc": "3671:14:7",
																"nodeType": "YulFunctionCall",
																"src": "3671:14:7"
															},
															"nativeSrc": "3664:930:7",
															"nodeType": "YulSwitch",
															"src": "3664:930:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3301:1299:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3382:4:7",
														"nodeType": "YulTypedName",
														"src": "3382:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3388:3:7",
														"nodeType": "YulTypedName",
														"src": "3388:3:7",
														"type": ""
													}
												],
												"src": "3301:1299:7"
											},
											{
												"body": {
													"nativeSrc": "4706:102:7",
													"nodeType": "YulBlock",
													"src": "4706:102:7",
													"statements": [
														{
															"nativeSrc": "4716:26:7",
															"nodeType": "YulAssignment",
															"src": "4716:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4728:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4728:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4739:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4739:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4724:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4724:3:7"
																},
																"nativeSrc": "4724:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4724:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4716:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4716:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4758:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4758:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4773:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4773:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4789:3:7",
																								"nodeType": "YulLiteral",
																								"src": "4789:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4794:1:7",
																								"nodeType": "YulLiteral",
																								"src": "4794:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4785:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4785:3:7"
																						},
																						"nativeSrc": "4785:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4785:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4798:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4798:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4781:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4781:3:7"
																				},
																				"nativeSrc": "4781:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4781:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4769:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4769:3:7"
																		},
																		"nativeSrc": "4769:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4769:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4751:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4751:6:7"
																},
																"nativeSrc": "4751:51:7",
																"nodeType": "YulFunctionCall",
																"src": "4751:51:7"
															},
															"nativeSrc": "4751:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "4751:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4605:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4675:9:7",
														"nodeType": "YulTypedName",
														"src": "4675:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4686:6:7",
														"nodeType": "YulTypedName",
														"src": "4686:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4697:4:7",
														"nodeType": "YulTypedName",
														"src": "4697:4:7",
														"type": ""
													}
												],
												"src": "4605:203:7"
											},
											{
												"body": {
													"nativeSrc": "4987:173:7",
													"nodeType": "YulBlock",
													"src": "4987:173:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5004:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5004:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5015:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5015:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4997:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4997:6:7"
																},
																"nativeSrc": "4997:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4997:21:7"
															},
															"nativeSrc": "4997:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "4997:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5038:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5038:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5049:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5049:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5034:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5034:3:7"
																		},
																		"nativeSrc": "5034:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5034:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5054:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5054:2:7",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5027:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5027:6:7"
																},
																"nativeSrc": "5027:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5027:30:7"
															},
															"nativeSrc": "5027:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "5027:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5077:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5077:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5088:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5088:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5073:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5073:3:7"
																		},
																		"nativeSrc": "5073:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5073:18:7"
																	},
																	{
																		"hexValue": "496e76616c696420666163746f72792061646472657373",
																		"kind": "string",
																		"nativeSrc": "5093:25:7",
																		"nodeType": "YulLiteral",
																		"src": "5093:25:7",
																		"type": "",
																		"value": "Invalid factory address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5066:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5066:6:7"
																},
																"nativeSrc": "5066:53:7",
																"nodeType": "YulFunctionCall",
																"src": "5066:53:7"
															},
															"nativeSrc": "5066:53:7",
															"nodeType": "YulExpressionStatement",
															"src": "5066:53:7"
														},
														{
															"nativeSrc": "5128:26:7",
															"nodeType": "YulAssignment",
															"src": "5128:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5140:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5140:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5151:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5151:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5136:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5136:3:7"
																},
																"nativeSrc": "5136:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5136:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5128:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5128:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_16cfceb364b99915d337c26d8ba3bdcbce06c3595a535f586d679980d6a44d7d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4813:347:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4964:9:7",
														"nodeType": "YulTypedName",
														"src": "4964:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4978:4:7",
														"nodeType": "YulTypedName",
														"src": "4978:4:7",
														"type": ""
													}
												],
												"src": "4813:347:7"
											},
											{
												"body": {
													"nativeSrc": "5339:173:7",
													"nodeType": "YulBlock",
													"src": "5339:173:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5356:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5356:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5367:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5367:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5349:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5349:6:7"
																},
																"nativeSrc": "5349:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5349:21:7"
															},
															"nativeSrc": "5349:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "5349:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5390:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5390:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5401:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5401:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5386:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5386:3:7"
																		},
																		"nativeSrc": "5386:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5386:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5406:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5406:2:7",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5379:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5379:6:7"
																},
																"nativeSrc": "5379:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5379:30:7"
															},
															"nativeSrc": "5379:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "5379:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5429:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5429:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5440:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5440:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5425:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5425:3:7"
																		},
																		"nativeSrc": "5425:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5425:18:7"
																	},
																	{
																		"hexValue": "496e76616c69642063726561746f722061646472657373",
																		"kind": "string",
																		"nativeSrc": "5445:25:7",
																		"nodeType": "YulLiteral",
																		"src": "5445:25:7",
																		"type": "",
																		"value": "Invalid creator address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5418:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5418:6:7"
																},
																"nativeSrc": "5418:53:7",
																"nodeType": "YulFunctionCall",
																"src": "5418:53:7"
															},
															"nativeSrc": "5418:53:7",
															"nodeType": "YulExpressionStatement",
															"src": "5418:53:7"
														},
														{
															"nativeSrc": "5480:26:7",
															"nodeType": "YulAssignment",
															"src": "5480:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5492:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5492:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5503:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5503:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5488:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5488:3:7"
																},
																"nativeSrc": "5488:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5488:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5480:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5480:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4259564b459b7f2329d6dfde1735bd513320c28bd67c2fe25b44aa76ee2a6087__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5165:347:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5316:9:7",
														"nodeType": "YulTypedName",
														"src": "5316:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5330:4:7",
														"nodeType": "YulTypedName",
														"src": "5330:4:7",
														"type": ""
													}
												],
												"src": "5165:347:7"
											},
											{
												"body": {
													"nativeSrc": "5595:199:7",
													"nodeType": "YulBlock",
													"src": "5595:199:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5641:16:7",
																"nodeType": "YulBlock",
																"src": "5641:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5650:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5650:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5653:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5653:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5643:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5643:6:7"
																			},
																			"nativeSrc": "5643:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5643:12:7"
																		},
																		"nativeSrc": "5643:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5643:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5616:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5616:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5625:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5625:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5612:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5612:3:7"
																		},
																		"nativeSrc": "5612:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5612:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5637:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5637:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5608:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5608:3:7"
																},
																"nativeSrc": "5608:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5608:32:7"
															},
															"nativeSrc": "5605:52:7",
															"nodeType": "YulIf",
															"src": "5605:52:7"
														},
														{
															"nativeSrc": "5666:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5666:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5685:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5685:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5679:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5679:5:7"
																},
																"nativeSrc": "5679:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5679:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5670:5:7",
																	"nodeType": "YulTypedName",
																	"src": "5670:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5748:16:7",
																"nodeType": "YulBlock",
																"src": "5748:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5757:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5757:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5760:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5760:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5750:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5750:6:7"
																			},
																			"nativeSrc": "5750:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5750:12:7"
																		},
																		"nativeSrc": "5750:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5750:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5717:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5717:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "5738:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "5738:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "5731:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "5731:6:7"
																						},
																						"nativeSrc": "5731:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "5731:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5724:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5724:6:7"
																				},
																				"nativeSrc": "5724:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5724:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5714:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5714:2:7"
																		},
																		"nativeSrc": "5714:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5714:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5707:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5707:6:7"
																},
																"nativeSrc": "5707:40:7",
																"nodeType": "YulFunctionCall",
																"src": "5707:40:7"
															},
															"nativeSrc": "5704:60:7",
															"nodeType": "YulIf",
															"src": "5704:60:7"
														},
														{
															"nativeSrc": "5773:15:7",
															"nodeType": "YulAssignment",
															"src": "5773:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "5783:5:7",
																"nodeType": "YulIdentifier",
																"src": "5783:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5773:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5773:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5517:277:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5561:9:7",
														"nodeType": "YulTypedName",
														"src": "5561:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5572:7:7",
														"nodeType": "YulTypedName",
														"src": "5572:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5584:6:7",
														"nodeType": "YulTypedName",
														"src": "5584:6:7",
														"type": ""
													}
												],
												"src": "5517:277:7"
											},
											{
												"body": {
													"nativeSrc": "5973:177:7",
													"nodeType": "YulBlock",
													"src": "5973:177:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5990:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5990:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6001:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6001:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5983:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5983:6:7"
																},
																"nativeSrc": "5983:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5983:21:7"
															},
															"nativeSrc": "5983:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "5983:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6024:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6024:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6035:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6035:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6020:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6020:3:7"
																		},
																		"nativeSrc": "6020:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6020:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6040:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6040:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6013:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6013:6:7"
																},
																"nativeSrc": "6013:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6013:30:7"
															},
															"nativeSrc": "6013:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "6013:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6063:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6063:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6074:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6074:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6059:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6059:3:7"
																		},
																		"nativeSrc": "6059:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6059:18:7"
																	},
																	{
																		"hexValue": "4275726e206d616e61676572206e6f7420636f6d70617469626c65",
																		"kind": "string",
																		"nativeSrc": "6079:29:7",
																		"nodeType": "YulLiteral",
																		"src": "6079:29:7",
																		"type": "",
																		"value": "Burn manager not compatible"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6052:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6052:6:7"
																},
																"nativeSrc": "6052:57:7",
																"nodeType": "YulFunctionCall",
																"src": "6052:57:7"
															},
															"nativeSrc": "6052:57:7",
															"nodeType": "YulExpressionStatement",
															"src": "6052:57:7"
														},
														{
															"nativeSrc": "6118:26:7",
															"nodeType": "YulAssignment",
															"src": "6118:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6130:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6130:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6141:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6141:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6126:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6126:3:7"
																},
																"nativeSrc": "6126:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6126:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6118:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6118:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2235764f18311222866a46b9cb0375f82b2ee44c533dd0ec92ce180500aee66f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5799:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5950:9:7",
														"nodeType": "YulTypedName",
														"src": "5950:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5964:4:7",
														"nodeType": "YulTypedName",
														"src": "5964:4:7",
														"type": ""
													}
												],
												"src": "5799:351:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        let offset := mload(add(headStart, 64))\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 96))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value3 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let offset_2 := mload(add(headStart, 128))\n        if gt(offset_2, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value4 := abi_decode_string_fromMemory(add(headStart, offset_2), dataEnd)\n        value5 := abi_decode_address_fromMemory(add(headStart, 160))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_16cfceb364b99915d337c26d8ba3bdcbce06c3595a535f586d679980d6a44d7d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Invalid factory address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4259564b459b7f2329d6dfde1735bd513320c28bd67c2fe25b44aa76ee2a6087__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Invalid creator address\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_2235764f18311222866a46b9cb0375f82b2ee44c533dd0ec92ce180500aee66f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Burn manager not compatible\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f5ffd5b506040516114a43803806114a483398101604081905261002e91610341565b858484600361003d8382610485565b50600461004a8282610485565b5050506001600160a01b03811661007b57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61008481610238565b506001600160a01b0386166100db5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420666163746f727920616464726573730000000000000000006044820152606401610072565b6001600160a01b0385166101315760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642063726561746f7220616464726573730000000000000000006044820152606401610072565b6001600160a01b03808716608052851660a05260066101508382610485565b506001600160a01b0381161561022d576040516261f76560e41b81523060048201526001600160a01b0382169063061f765090602401602060405180830381865afa1580156101a1573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101c5919061053f565b6102115760405162461bcd60e51b815260206004820152601b60248201527f4275726e206d616e61676572206e6f7420636f6d70617469626c6500000000006044820152606401610072565b600780546001600160a01b0319166001600160a01b0383161790555b505050505050610565565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b80516001600160a01b038116811461029f575f5ffd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126102c7575f5ffd5b81516001600160401b038111156102e0576102e06102a4565b604051601f8201601f19908116603f011681016001600160401b038111828210171561030e5761030e6102a4565b604052818152838201602001851015610325575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f5f5f5f5f5f60c08789031215610356575f5ffd5b61035f87610289565b955061036d60208801610289565b60408801519095506001600160401b03811115610388575f5ffd5b61039489828a016102b8565b606089015190955090506001600160401b038111156103b1575f5ffd5b6103bd89828a016102b8565b608089015190945090506001600160401b038111156103da575f5ffd5b6103e689828a016102b8565b9250506103f560a08801610289565b90509295509295509295565b600181811c9082168061041557607f821691505b60208210810361043357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561048057805f5260205f20601f840160051c8101602085101561045e5750805b601f840160051c820191505b8181101561047d575f815560010161046a565b50505b505050565b81516001600160401b0381111561049e5761049e6102a4565b6104b2816104ac8454610401565b84610439565b6020601f8211600181146104e4575f83156104cd5750848201515b5f19600385901b1c1916600184901b17845561047d565b5f84815260208120601f198516915b8281101561051357878501518255602094850194600190920191016104f3565b508482101561053057868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f6020828403121561054f575f5ffd5b8151801515811461055e575f5ffd5b9392505050565b60805160a051610f0961059b5f395f818161013b01526106d201525f81816102e8015281816103fc01526105dc0152610f095ff3fe608060405234801561000f575f5ffd5b5060043610610132575f3560e01c806370a08231116100b4578063a9059cbb11610079578063a9059cbb14610290578063aba83150146102a3578063dd62ed3e146102ab578063e77772fe146102e3578063f2fde38b1461030a578063f8a8fd6d1461031d575f5ffd5b806370a0823114610234578063715018a61461025c5780638da5cb5b1461026457806395d89b411461027557806396b5059d1461027d575f5ffd5b806323b872dd116100fa57806323b872dd146101d7578063313ce567146101ea57806340c10f19146101f957806342966c681461020e5780636819cd1914610221575f5ffd5b806302d05d3f1461013657806306fdde031461017a578063095ea7b31461018f57806318160ddd146101b25780631faa49c3146101c4575b5f5ffd5b61015d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b610182610325565b6040516101719190610d43565b6101a261019d366004610d93565b6103b5565b6040519015158152602001610171565b6002545b604051908152602001610171565b60075461015d906001600160a01b031681565b6101a26101e5366004610dbb565b6103ce565b60405160128152602001610171565b61020c610207366004610d93565b6103f1565b005b61020c61021c366004610df5565b610474565b61020c61022f366004610d93565b6105d1565b6101b6610242366004610e0c565b6001600160a01b03165f9081526020819052604090205490565b61020c6106a5565b6005546001600160a01b031661015d565b6101826106b8565b61020c61028b366004610e0c565b6106c7565b6101a261029e366004610d93565b61089a565b6101826108a7565b6101b66102b9366004610e2c565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61015d7f000000000000000000000000000000000000000000000000000000000000000081565b61020c610318366004610e0c565b610933565b61018261096d565b60606003805461033490610e5d565b80601f016020809104026020016040519081016040528092919081815260200182805461036090610e5d565b80156103ab5780601f10610382576101008083540402835291602001916103ab565b820191905f5260205f20905b81548152906001019060200180831161038e57829003601f168201915b5050505050905090565b5f336103c281858561097a565b60019150505b92915050565b5f336103db85828561098c565b6103e6858585610a08565b506001949350505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104665760405162461bcd60e51b815260206004820152601560248201527413db9b1e48199858dd1bdc9e4818d85b881b5a5b9d605a1b60448201526064015b60405180910390fd5b6104708282610a65565b5050565b5f81116104b85760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b604482015260640161045d565b335f9081526020819052604090205481111561050d5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161045d565b6105173382610a99565b6001337f14c08ae9f74e8b735a667822feb792c4e1324d0dd5887af1528665f8c2357f868361054560025490565b6040805192835260208301919091520160405180910390a36007546001600160a01b0316156105ce57600754604051631ed1028b60e01b8152336004820152602481018390526001600160a01b0390911690631ed1028b906044015f604051808303815f87803b1580156105b7575f5ffd5b505af11580156105c9573d5f5f3e3d5ffd5b505050505b50565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106495760405162461bcd60e51b815260206004820152601d60248201527f4f6e6c7920666163746f72792063616e20666163746f7279206275726e000000604482015260640161045d565b6106538282610a99565b5f826001600160a01b03167f14c08ae9f74e8b735a667822feb792c4e1324d0dd5887af1528665f8c2357f868361068960025490565b6040805192835260208301919091520160405180910390a35050565b6106ad610acd565b6106b65f610afa565b565b60606004805461033490610e5d565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107495760405162461bcd60e51b815260206004820152602160248201527f4f6e6c792063726561746f722063616e20736574206275726e206d616e6167656044820152603960f91b606482015260840161045d565b6001600160a01b0381166107985760405162461bcd60e51b815260206004820152601660248201527543616e6e6f74206265207a65726f206164647265737360501b604482015260640161045d565b6040516261f76560e41b81523060048201526001600160a01b0382169063061f765090602401602060405180830381865afa1580156107d9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107fd9190610e95565b6108495760405162461bcd60e51b815260206004820152601b60248201527f4275726e206d616e61676572206e6f7420636f6d70617469626c650000000000604482015260640161045d565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f0a216b4ae65e96da40adb74d7d42ec050b88e0da645103a084647ed55eb3e0d9905f90a35050565b5f336103c2818585610a08565b600680546108b490610e5d565b80601f01602080910402602001604051908101604052809291908181526020018280546108e090610e5d565b801561092b5780601f106109025761010080835404028352916020019161092b565b820191905f5260205f20905b81548152906001019060200180831161090e57829003601f168201915b505050505081565b61093b610acd565b6001600160a01b03811661096457604051631e4fbdf760e01b81525f600482015260240161045d565b6105ce81610afa565b600880546108b490610e5d565b6109878383836001610b4b565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610a0257818110156109f457604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161045d565b610a0284848484035f610b4b565b50505050565b6001600160a01b038316610a3157604051634b637e8f60e11b81525f600482015260240161045d565b6001600160a01b038216610a5a5760405163ec442f0560e01b81525f600482015260240161045d565b610987838383610c1d565b6001600160a01b038216610a8e5760405163ec442f0560e01b81525f600482015260240161045d565b6104705f8383610c1d565b6001600160a01b038216610ac257604051634b637e8f60e11b81525f600482015260240161045d565b610470825f83610c1d565b6005546001600160a01b031633146106b65760405163118cdaa760e01b815233600482015260240161045d565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038416610b745760405163e602df0560e01b81525f600482015260240161045d565b6001600160a01b038316610b9d57604051634a1406b160e11b81525f600482015260240161045d565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610a0257826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610c0f91815260200190565b60405180910390a350505050565b6001600160a01b038316610c47578060025f828254610c3c9190610eb4565b90915550610cb79050565b6001600160a01b0383165f9081526020819052604090205481811015610c995760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161045d565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610cd357600280548290039055610cf1565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d3691815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610d8e575f5ffd5b919050565b5f5f60408385031215610da4575f5ffd5b610dad83610d78565b946020939093013593505050565b5f5f5f60608486031215610dcd575f5ffd5b610dd684610d78565b9250610de460208501610d78565b929592945050506040919091013590565b5f60208284031215610e05575f5ffd5b5035919050565b5f60208284031215610e1c575f5ffd5b610e2582610d78565b9392505050565b5f5f60408385031215610e3d575f5ffd5b610e4683610d78565b9150610e5460208401610d78565b90509250929050565b600181811c90821680610e7157607f821691505b602082108103610e8f57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f60208284031215610ea5575f5ffd5b81518015158114610e25575f5ffd5b808201808211156103c857634e487b7160e01b5f52601160045260245ffdfea2646970667358221220892de6aa65a75e2ca4ff6d7ed0e0e0910822f908e2c58b460a4f9166a4ef3be164736f6c634300081e0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x14A4 CODESIZE SUB DUP1 PUSH2 0x14A4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x341 JUMP JUMPDEST DUP6 DUP5 DUP5 PUSH1 0x3 PUSH2 0x3D DUP4 DUP3 PUSH2 0x485 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x4A DUP3 DUP3 PUSH2 0x485 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84 DUP2 PUSH2 0x238 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0xDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420666163746F72792061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x131 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642063726561746F722061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x80 MSTORE DUP6 AND PUSH1 0xA0 MSTORE PUSH1 0x6 PUSH2 0x150 DUP4 DUP3 PUSH2 0x485 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x22D JUMPI PUSH1 0x40 MLOAD PUSH3 0x61F765 PUSH1 0xE4 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x61F7650 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A1 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x53F JUMP JUMPDEST PUSH2 0x211 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E206D616E61676572206E6F7420636F6D70617469626C650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x72 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP PUSH2 0x565 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x29F JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2E0 JUMPI PUSH2 0x2E0 PUSH2 0x2A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x30E JUMPI PUSH2 0x30E PUSH2 0x2A4 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x325 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x356 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x35F DUP8 PUSH2 0x289 JUMP JUMPDEST SWAP6 POP PUSH2 0x36D PUSH1 0x20 DUP9 ADD PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MLOAD SWAP1 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x388 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x394 DUP10 DUP3 DUP11 ADD PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MLOAD SWAP1 SWAP6 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x3BD DUP10 DUP3 DUP11 ADD PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x80 DUP10 ADD MLOAD SWAP1 SWAP5 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x3E6 DUP10 DUP3 DUP11 ADD PUSH2 0x2B8 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x3F5 PUSH1 0xA0 DUP9 ADD PUSH2 0x289 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x415 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x433 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x480 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x45E JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x47D JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x46A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x49E JUMPI PUSH2 0x49E PUSH2 0x2A4 JUMP JUMPDEST PUSH2 0x4B2 DUP2 PUSH2 0x4AC DUP5 SLOAD PUSH2 0x401 JUMP JUMPDEST DUP5 PUSH2 0x439 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4E4 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x4CD JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x47D JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x513 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x4F3 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x530 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x55E JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0xF09 PUSH2 0x59B PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x13B ADD MSTORE PUSH2 0x6D2 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x2E8 ADD MSTORE DUP2 DUP2 PUSH2 0x3FC ADD MSTORE PUSH2 0x5DC ADD MSTORE PUSH2 0xF09 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x132 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xABA83150 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xE77772FE EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x31D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x96B5059D EQ PUSH2 0x27D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xFA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x6819CD19 EQ PUSH2 0x221 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x2D05D3F EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x1FAA49C3 EQ PUSH2 0x1C4 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x15D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0xD43 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0xD93 JUMP JUMPDEST PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x15D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST PUSH2 0x20C PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0xD93 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH2 0x21C CALLDATASIZE PUSH1 0x4 PUSH2 0xDF5 JUMP JUMPDEST PUSH2 0x474 JUMP JUMPDEST PUSH2 0x20C PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0xD93 JUMP JUMPDEST PUSH2 0x5D1 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x20C PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15D JUMP JUMPDEST PUSH2 0x182 PUSH2 0x6B8 JUMP JUMPDEST PUSH2 0x20C PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0xE0C JUMP JUMPDEST PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0xD93 JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST PUSH2 0x182 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x15D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x20C PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0C JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x96D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x334 SWAP1 PUSH2 0xE5D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x360 SWAP1 PUSH2 0xE5D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3AB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x382 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3AB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x38E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3C2 DUP2 DUP6 DUP6 PUSH2 0x97A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3DB DUP6 DUP3 DUP6 PUSH2 0x98C JUMP JUMPDEST PUSH2 0x3E6 DUP6 DUP6 DUP6 PUSH2 0xA08 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13DB9B1E48199858DD1BDC9E4818D85B881B5A5B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x470 DUP3 DUP3 PUSH2 0xA65 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x416D6F756E74206D757374206265203E203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45D JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45D JUMP JUMPDEST PUSH2 0x517 CALLER DUP3 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x1 CALLER PUSH32 0x14C08AE9F74E8B735A667822FEB792C4E1324D0DD5887AF1528665F8C2357F86 DUP4 PUSH2 0x545 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x5CE JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1ED1028B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x1ED1028B SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5B7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5C9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920666163746F72792063616E20666163746F7279206275726E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45D JUMP JUMPDEST PUSH2 0x653 DUP3 DUP3 PUSH2 0xA99 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x14C08AE9F74E8B735A667822FEB792C4E1324D0DD5887AF1528665F8C2357F86 DUP4 PUSH2 0x689 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6AD PUSH2 0xACD JUMP JUMPDEST PUSH2 0x6B6 PUSH0 PUSH2 0xAFA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x334 SWAP1 PUSH2 0xE5D JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x749 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063726561746F722063616E20736574206275726E206D616E616765 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x43616E6E6F74206265207A65726F2061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x61F765 PUSH1 0xE4 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x61F7650 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7D9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7FD SWAP2 SWAP1 PUSH2 0xE95 JUMP JUMPDEST PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E206D616E61676572206E6F7420636F6D70617469626C650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45D JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0xA216B4AE65E96DA40ADB74D7D42EC050B88E0DA645103A084647ED55EB3E0D9 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3C2 DUP2 DUP6 DUP6 PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x8B4 SWAP1 PUSH2 0xE5D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8E0 SWAP1 PUSH2 0xE5D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x92B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x902 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x92B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x90E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x93B PUSH2 0xACD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x964 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x45D JUMP JUMPDEST PUSH2 0x5CE DUP2 PUSH2 0xAFA JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x8B4 SWAP1 PUSH2 0xE5D JUMP JUMPDEST PUSH2 0x987 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB4B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0xA02 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9F4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x45D JUMP JUMPDEST PUSH2 0xA02 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xB4B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA31 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x45D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA5A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x45D JUMP JUMPDEST PUSH2 0x987 DUP4 DUP4 DUP4 PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA8E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x45D JUMP JUMPDEST PUSH2 0x470 PUSH0 DUP4 DUP4 PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAC2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x45D JUMP JUMPDEST PUSH2 0x470 DUP3 PUSH0 DUP4 PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x45D JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB74 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x45D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB9D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x45D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xA02 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC0F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC47 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC3C SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xCB7 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xC99 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x45D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCD3 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD36 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD8E JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDA4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xDAD DUP4 PUSH2 0xD78 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDCD JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xDD6 DUP5 PUSH2 0xD78 JUMP JUMPDEST SWAP3 POP PUSH2 0xDE4 PUSH1 0x20 DUP6 ADD PUSH2 0xD78 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE05 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE1C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xE25 DUP3 PUSH2 0xD78 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE3D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xE46 DUP4 PUSH2 0xD78 JUMP JUMPDEST SWAP2 POP PUSH2 0xE54 PUSH1 0x20 DUP5 ADD PUSH2 0xD78 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xE71 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE8F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE25 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3C8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0x2D DUPN 0xAA PUSH6 0xA75E2CA4FF6D PUSH31 0xD0E0E0910822F908E2C58B460A4F9166A4EF3BE164736F6C634300081E0033 ",
							"sourceMap": "345:2886:6:-:0;;;892:812;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1184:12;1162:4;1168:6;1648:5:2;:13;1162:4:6;1648:5:2;:13;:::i;:::-;-1:-1:-1;1671:7:2;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;4751:51:7;4724:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;1217:26:6;::::2;1209:62;;;::::0;-1:-1:-1;;;1209:62:6;;5015:2:7;1209:62:6::2;::::0;::::2;4997:21:7::0;5054:2;5034:18;;;5027:30;5093:25;5073:18;;;5066:53;5136:18;;1209:62:6::2;4813:347:7::0;1209:62:6::2;-1:-1:-1::0;;;;;1290:22:6;::::2;1282:58;;;::::0;-1:-1:-1;;;1282:58:6;;5367:2:7;1282:58:6::2;::::0;::::2;5349:21:7::0;5406:2;5386:18;;;5379:30;5445:25;5425:18;;;5418:53;5488:18;;1282:58:6::2;5165:347:7::0;1282:58:6::2;-1:-1:-1::0;;;;;1353:27:6;;::::2;;::::0;1391:18;::::2;;::::0;1420:8:::2;:20;1431:9:::0;1420:8;:20:::2;:::i;:::-;-1:-1:-1::0;;;;;;1457:26:6;::::2;::::0;1453:244:::2;;1526:55;::::0;-1:-1:-1;;;1526:55:6;;1575:4:::2;1526:55;::::0;::::2;4751:51:7::0;-1:-1:-1;;;;;1526:40:6;::::2;::::0;::::2;::::0;4724:18:7;;1526:55:6::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:144;;;::::0;-1:-1:-1;;;1500:144:6;;6001:2:7;1500:144:6::2;::::0;::::2;5983:21:7::0;6040:2;6020:18;;;6013:30;6079:29;6059:18;;;6052:57;6126:18;;1500:144:6::2;5799:351:7::0;1500:144:6::2;1659:11;:26:::0;;-1:-1:-1;;;;;;1659:26:6::2;-1:-1:-1::0;;;;;1659:26:6;::::2;;::::0;;1453:244:::2;892:812:::0;;;;;;345:2886;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:177:7:-;93:13;;-1:-1:-1;;;;;135:31:7;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:723;382:5;435:3;428:4;420:6;416:17;412:27;402:55;;453:1;450;443:12;402:55;480:13;;-1:-1:-1;;;;;505:30:7;;502:56;;;538:18;;:::i;:::-;587:2;581:9;679:2;641:17;;-1:-1:-1;;637:31:7;;;670:2;633:40;629:54;617:67;;-1:-1:-1;;;;;699:34:7;;735:22;;;696:62;693:88;;;761:18;;:::i;:::-;797:2;790:22;821;;;862:19;;;883:4;858:30;855:39;-1:-1:-1;852:59:7;;;907:1;904;897:12;852:59;964:6;957:4;949:6;945:17;938:4;930:6;926:17;920:51;1019:1;991:19;;;1012:4;987:30;980:41;;;;995:6;328:723;-1:-1:-1;;;328:723:7:o;1056:1035::-;1201:6;1209;1217;1225;1233;1241;1294:3;1282:9;1273:7;1269:23;1265:33;1262:53;;;1311:1;1308;1301:12;1262:53;1334:40;1364:9;1334:40;:::i;:::-;1324:50;;1393:49;1438:2;1427:9;1423:18;1393:49;:::i;:::-;1486:2;1471:18;;1465:25;1383:59;;-1:-1:-1;;;;;;1502:30:7;;1499:50;;;1545:1;1542;1535:12;1499:50;1568:61;1621:7;1612:6;1601:9;1597:22;1568:61;:::i;:::-;1675:2;1660:18;;1654:25;1558:71;;-1:-1:-1;1654:25:7;-1:-1:-1;;;;;;1691:32:7;;1688:52;;;1736:1;1733;1726:12;1688:52;1759:63;1814:7;1803:8;1792:9;1788:24;1759:63;:::i;:::-;1868:3;1853:19;;1847:26;1749:73;;-1:-1:-1;1847:26:7;-1:-1:-1;;;;;;1885:32:7;;1882:52;;;1930:1;1927;1920:12;1882:52;1953:63;2008:7;1997:8;1986:9;1982:24;1953:63;:::i;:::-;1943:73;;;2035:50;2080:3;2069:9;2065:19;2035:50;:::i;:::-;2025:60;;1056:1035;;;;;;;;:::o;2096:380::-;2175:1;2171:12;;;;2218;;;2239:61;;2293:4;2285:6;2281:17;2271:27;;2239:61;2346:2;2338:6;2335:14;2315:18;2312:38;2309:161;;2392:10;2387:3;2383:20;2380:1;2373:31;2427:4;2424:1;2417:15;2455:4;2452:1;2445:15;2309:161;;2096:380;;;:::o;2607:518::-;2709:2;2704:3;2701:11;2698:421;;;2745:5;2742:1;2735:16;2789:4;2786:1;2776:18;2859:2;2847:10;2843:19;2840:1;2836:27;2830:4;2826:38;2895:4;2883:10;2880:20;2877:47;;;-1:-1:-1;2918:4:7;2877:47;2973:2;2968:3;2964:12;2961:1;2957:20;2951:4;2947:31;2937:41;;3028:81;3046:2;3039:5;3036:13;3028:81;;;3105:1;3091:16;;3072:1;3061:13;3028:81;;;3032:3;;2698:421;2607:518;;;:::o;3301:1299::-;3421:10;;-1:-1:-1;;;;;3443:30:7;;3440:56;;;3476:18;;:::i;:::-;3505:97;3595:6;3555:38;3587:4;3581:11;3555:38;:::i;:::-;3549:4;3505:97;:::i;:::-;3651:4;3682:2;3671:14;;3699:1;3694:649;;;;4387:1;4404:6;4401:89;;;-1:-1:-1;4456:19:7;;;4450:26;4401:89;-1:-1:-1;;3258:1:7;3254:11;;;3250:24;3246:29;3236:40;3282:1;3278:11;;;3233:57;4503:81;;3664:930;;3694:649;2554:1;2547:14;;;2591:4;2578:18;;-1:-1:-1;;3730:20:7;;;3848:222;3862:7;3859:1;3856:14;3848:222;;;3944:19;;;3938:26;3923:42;;4051:4;4036:20;;;;4004:1;3992:14;;;;3878:12;3848:222;;;3852:3;4098:6;4089:7;4086:19;4083:201;;;4159:19;;;4153:26;-1:-1:-1;;4242:1:7;4238:14;;;4254:3;4234:24;4230:37;4226:42;4211:58;4196:74;;4083:201;-1:-1:-1;;;;4330:1:7;4314:14;;;4310:22;4297:36;;-1:-1:-1;3301:1299:7:o;5517:277::-;5584:6;5637:2;5625:9;5616:7;5612:23;5608:32;5605:52;;;5653:1;5650;5643:12;5605:52;5685:9;5679:16;5738:5;5731:13;5724:21;5717:5;5714:32;5704:60;;5760:1;5757;5750:12;5704:60;5783:5;5517:277;-1:-1:-1;;;5517:277:7:o;5799:351::-;345:2886:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 2426,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 2891,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 2713,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2765,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 2661,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 2444,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2810,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2568,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3101,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 949,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnManager_964": {
									"entryPoint": null,
									"id": 964,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burn_1173": {
									"entryPoint": 1140,
									"id": 1173,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@creator_960": {
									"entryPoint": null,
									"id": 960,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@factoryBurn_1117": {
									"entryPoint": 1489,
									"id": 1117,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@imageUrl_962": {
									"entryPoint": 2215,
									"id": 962,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1087": {
									"entryPoint": 1009,
									"id": 1087,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 805,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1701,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBurnManager_1223": {
									"entryPoint": 1735,
									"id": 1223,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1720,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@test_966": {
									"entryPoint": 2413,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenFactory_958": {
									"entryPoint": null,
									"id": 958,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 974,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2355,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 2202,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0df0e15285aeaeace24cf81fdd8168b646fee9f8566dd9a818a9a32d37a5aa86__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2235764f18311222866a46b9cb0375f82b2ee44c533dd0ec92ce180500aee66f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6f2ad510629a16bcda656e83577356065014f95b24cec689ffb20b639afc7bae__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7bdadf44383341607f9d3d53191424fb5a938d032ae319ca5f468c99fd5d4a74__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7175:7",
										"nodeType": "YulBlock",
										"src": "0:7175:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:7",
													"nodeType": "YulBlock",
													"src": "115:102:7",
													"statements": [
														{
															"nativeSrc": "125:26:7",
															"nodeType": "YulAssignment",
															"src": "125:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:7",
																		"nodeType": "YulLiteral",
																		"src": "148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:7"
																},
																"nativeSrc": "133:18:7",
																"nodeType": "YulFunctionCall",
																"src": "133:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:7",
																								"nodeType": "YulLiteral",
																								"src": "198:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:7",
																								"nodeType": "YulLiteral",
																								"src": "203:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:7"
																						},
																						"nativeSrc": "194:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:7",
																						"nodeType": "YulLiteral",
																						"src": "207:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:7"
																				},
																				"nativeSrc": "190:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:7"
																		},
																		"nativeSrc": "178:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nativeSrc": "160:51:7",
																"nodeType": "YulFunctionCall",
																"src": "160:51:7"
															},
															"nativeSrc": "160:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:7",
														"nodeType": "YulTypedName",
														"src": "84:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:7",
														"nodeType": "YulTypedName",
														"src": "95:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:7",
														"nodeType": "YulTypedName",
														"src": "106:4:7",
														"type": ""
													}
												],
												"src": "14:203:7"
											},
											{
												"body": {
													"nativeSrc": "343:297:7",
													"nodeType": "YulBlock",
													"src": "343:297:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "360:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "360:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "371:2:7",
																		"nodeType": "YulLiteral",
																		"src": "371:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "353:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "353:6:7"
																},
																"nativeSrc": "353:21:7",
																"nodeType": "YulFunctionCall",
																"src": "353:21:7"
															},
															"nativeSrc": "353:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "353:21:7"
														},
														{
															"nativeSrc": "383:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "383:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "403:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "403:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "397:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "397:5:7"
																},
																"nativeSrc": "397:13:7",
																"nodeType": "YulFunctionCall",
																"src": "397:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "387:6:7",
																	"nodeType": "YulTypedName",
																	"src": "387:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "430:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "430:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "441:2:7",
																				"nodeType": "YulLiteral",
																				"src": "441:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "426:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "426:3:7"
																		},
																		"nativeSrc": "426:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "426:18:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "446:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "446:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "419:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "419:6:7"
																},
																"nativeSrc": "419:34:7",
																"nodeType": "YulFunctionCall",
																"src": "419:34:7"
															},
															"nativeSrc": "419:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "419:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "472:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "472:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "483:2:7",
																				"nodeType": "YulLiteral",
																				"src": "483:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "468:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "468:3:7"
																		},
																		"nativeSrc": "468:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "468:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "492:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "492:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "500:2:7",
																				"nodeType": "YulLiteral",
																				"src": "500:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "488:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "488:3:7"
																		},
																		"nativeSrc": "488:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "488:15:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "505:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "505:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "462:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "462:5:7"
																},
																"nativeSrc": "462:50:7",
																"nodeType": "YulFunctionCall",
																"src": "462:50:7"
															},
															"nativeSrc": "462:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "462:50:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "536:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "536:9:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "547:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "547:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "532:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:7"
																				},
																				"nativeSrc": "532:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "532:22:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "556:2:7",
																				"nodeType": "YulLiteral",
																				"src": "556:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "528:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "528:3:7"
																		},
																		"nativeSrc": "528:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "528:31:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "561:1:7",
																		"nodeType": "YulLiteral",
																		"src": "561:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "521:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:6:7"
																},
																"nativeSrc": "521:42:7",
																"nodeType": "YulFunctionCall",
																"src": "521:42:7"
															},
															"nativeSrc": "521:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "521:42:7"
														},
														{
															"nativeSrc": "572:62:7",
															"nodeType": "YulAssignment",
															"src": "572:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "588:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "588:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "607:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "607:6:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "615:2:7",
																								"nodeType": "YulLiteral",
																								"src": "615:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "603:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "603:3:7"
																						},
																						"nativeSrc": "603:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "603:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "624:2:7",
																								"nodeType": "YulLiteral",
																								"src": "624:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "620:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "620:3:7"
																						},
																						"nativeSrc": "620:7:7",
																						"nodeType": "YulFunctionCall",
																						"src": "620:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "599:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "599:3:7"
																				},
																				"nativeSrc": "599:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "599:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "584:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:7"
																		},
																		"nativeSrc": "584:45:7",
																		"nodeType": "YulFunctionCall",
																		"src": "584:45:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "631:2:7",
																		"nodeType": "YulLiteral",
																		"src": "631:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "580:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "580:3:7"
																},
																"nativeSrc": "580:54:7",
																"nodeType": "YulFunctionCall",
																"src": "580:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "572:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "572:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "222:418:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "312:9:7",
														"nodeType": "YulTypedName",
														"src": "312:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "323:6:7",
														"nodeType": "YulTypedName",
														"src": "323:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "334:4:7",
														"nodeType": "YulTypedName",
														"src": "334:4:7",
														"type": ""
													}
												],
												"src": "222:418:7"
											},
											{
												"body": {
													"nativeSrc": "694:124:7",
													"nodeType": "YulBlock",
													"src": "694:124:7",
													"statements": [
														{
															"nativeSrc": "704:29:7",
															"nodeType": "YulAssignment",
															"src": "704:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "726:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "726:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "713:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "713:12:7"
																},
																"nativeSrc": "713:20:7",
																"nodeType": "YulFunctionCall",
																"src": "713:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "704:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "796:16:7",
																"nodeType": "YulBlock",
																"src": "796:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "805:1:7",
																					"nodeType": "YulLiteral",
																					"src": "805:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "808:1:7",
																					"nodeType": "YulLiteral",
																					"src": "808:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "798:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "798:6:7"
																			},
																			"nativeSrc": "798:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "798:12:7"
																		},
																		"nativeSrc": "798:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "798:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "755:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "755:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "766:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "766:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "781:3:7",
																										"nodeType": "YulLiteral",
																										"src": "781:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "786:1:7",
																										"nodeType": "YulLiteral",
																										"src": "786:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "777:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "777:3:7"
																								},
																								"nativeSrc": "777:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "777:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "790:1:7",
																								"nodeType": "YulLiteral",
																								"src": "790:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "773:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "773:3:7"
																						},
																						"nativeSrc": "773:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "773:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "762:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "762:3:7"
																				},
																				"nativeSrc": "762:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "762:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "752:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "752:2:7"
																		},
																		"nativeSrc": "752:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "752:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "745:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:7"
																},
																"nativeSrc": "745:50:7",
																"nodeType": "YulFunctionCall",
																"src": "745:50:7"
															},
															"nativeSrc": "742:70:7",
															"nodeType": "YulIf",
															"src": "742:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "645:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "673:6:7",
														"nodeType": "YulTypedName",
														"src": "673:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "684:5:7",
														"nodeType": "YulTypedName",
														"src": "684:5:7",
														"type": ""
													}
												],
												"src": "645:173:7"
											},
											{
												"body": {
													"nativeSrc": "910:213:7",
													"nodeType": "YulBlock",
													"src": "910:213:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "956:16:7",
																"nodeType": "YulBlock",
																"src": "956:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "965:1:7",
																					"nodeType": "YulLiteral",
																					"src": "965:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "968:1:7",
																					"nodeType": "YulLiteral",
																					"src": "968:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "958:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "958:6:7"
																			},
																			"nativeSrc": "958:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "958:12:7"
																		},
																		"nativeSrc": "958:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "958:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "931:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "931:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "940:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "940:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "927:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "927:3:7"
																		},
																		"nativeSrc": "927:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "927:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "952:2:7",
																		"nodeType": "YulLiteral",
																		"src": "952:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "923:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "923:3:7"
																},
																"nativeSrc": "923:32:7",
																"nodeType": "YulFunctionCall",
																"src": "923:32:7"
															},
															"nativeSrc": "920:52:7",
															"nodeType": "YulIf",
															"src": "920:52:7"
														},
														{
															"nativeSrc": "981:39:7",
															"nodeType": "YulAssignment",
															"src": "981:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1010:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1010:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "991:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "991:18:7"
																},
																"nativeSrc": "991:29:7",
																"nodeType": "YulFunctionCall",
																"src": "991:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "981:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "981:6:7"
																}
															]
														},
														{
															"nativeSrc": "1029:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1029:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1042:1:7",
																"nodeType": "YulLiteral",
																"src": "1042:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1033:5:7",
																	"nodeType": "YulTypedName",
																	"src": "1033:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1052:41:7",
															"nodeType": "YulAssignment",
															"src": "1052:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1078:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1078:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1089:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1089:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1074:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1074:3:7"
																		},
																		"nativeSrc": "1074:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1074:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1061:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1061:12:7"
																},
																"nativeSrc": "1061:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1061:32:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1052:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1052:5:7"
																}
															]
														},
														{
															"nativeSrc": "1102:15:7",
															"nodeType": "YulAssignment",
															"src": "1102:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1112:5:7",
																"nodeType": "YulIdentifier",
																"src": "1112:5:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1102:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1102:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "823:300:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "868:9:7",
														"nodeType": "YulTypedName",
														"src": "868:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "879:7:7",
														"nodeType": "YulTypedName",
														"src": "879:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "891:6:7",
														"nodeType": "YulTypedName",
														"src": "891:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "899:6:7",
														"nodeType": "YulTypedName",
														"src": "899:6:7",
														"type": ""
													}
												],
												"src": "823:300:7"
											},
											{
												"body": {
													"nativeSrc": "1223:92:7",
													"nodeType": "YulBlock",
													"src": "1223:92:7",
													"statements": [
														{
															"nativeSrc": "1233:26:7",
															"nodeType": "YulAssignment",
															"src": "1233:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1245:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1256:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1256:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1241:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1241:3:7"
																},
																"nativeSrc": "1241:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1241:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1233:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1233:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1275:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1275:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1300:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1300:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1293:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1293:6:7"
																				},
																				"nativeSrc": "1293:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1293:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1286:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1286:6:7"
																		},
																		"nativeSrc": "1286:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1268:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1268:6:7"
																},
																"nativeSrc": "1268:41:7",
																"nodeType": "YulFunctionCall",
																"src": "1268:41:7"
															},
															"nativeSrc": "1268:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "1268:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1128:187:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1192:9:7",
														"nodeType": "YulTypedName",
														"src": "1192:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1203:6:7",
														"nodeType": "YulTypedName",
														"src": "1203:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1214:4:7",
														"nodeType": "YulTypedName",
														"src": "1214:4:7",
														"type": ""
													}
												],
												"src": "1128:187:7"
											},
											{
												"body": {
													"nativeSrc": "1421:76:7",
													"nodeType": "YulBlock",
													"src": "1421:76:7",
													"statements": [
														{
															"nativeSrc": "1431:26:7",
															"nodeType": "YulAssignment",
															"src": "1431:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1443:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1443:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1454:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1439:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1439:3:7"
																},
																"nativeSrc": "1439:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1439:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1431:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1431:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1473:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1473:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1484:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1484:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1466:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:7"
																},
																"nativeSrc": "1466:25:7",
																"nodeType": "YulFunctionCall",
																"src": "1466:25:7"
															},
															"nativeSrc": "1466:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "1466:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1320:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1390:9:7",
														"nodeType": "YulTypedName",
														"src": "1390:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1401:6:7",
														"nodeType": "YulTypedName",
														"src": "1401:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1412:4:7",
														"nodeType": "YulTypedName",
														"src": "1412:4:7",
														"type": ""
													}
												],
												"src": "1320:177:7"
											},
											{
												"body": {
													"nativeSrc": "1606:270:7",
													"nodeType": "YulBlock",
													"src": "1606:270:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1652:16:7",
																"nodeType": "YulBlock",
																"src": "1652:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1661:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1661:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1664:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1664:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1654:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1654:6:7"
																			},
																			"nativeSrc": "1654:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1654:12:7"
																		},
																		"nativeSrc": "1654:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1654:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1627:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1627:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1636:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1636:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1623:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:7"
																		},
																		"nativeSrc": "1623:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1623:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1648:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1648:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1619:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1619:3:7"
																},
																"nativeSrc": "1619:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1619:32:7"
															},
															"nativeSrc": "1616:52:7",
															"nodeType": "YulIf",
															"src": "1616:52:7"
														},
														{
															"nativeSrc": "1677:39:7",
															"nodeType": "YulAssignment",
															"src": "1677:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1706:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1706:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1687:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1687:18:7"
																},
																"nativeSrc": "1687:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1687:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1677:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1677:6:7"
																}
															]
														},
														{
															"nativeSrc": "1725:48:7",
															"nodeType": "YulAssignment",
															"src": "1725:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1758:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1758:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1769:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1769:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1754:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1754:3:7"
																		},
																		"nativeSrc": "1754:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1754:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1735:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1735:18:7"
																},
																"nativeSrc": "1735:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1735:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1725:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1725:6:7"
																}
															]
														},
														{
															"nativeSrc": "1782:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1782:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1795:1:7",
																"nodeType": "YulLiteral",
																"src": "1795:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1786:5:7",
																	"nodeType": "YulTypedName",
																	"src": "1786:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1805:41:7",
															"nodeType": "YulAssignment",
															"src": "1805:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1831:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1831:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1842:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1842:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1827:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:7"
																		},
																		"nativeSrc": "1827:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1827:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1814:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1814:12:7"
																},
																"nativeSrc": "1814:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1814:32:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1805:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1805:5:7"
																}
															]
														},
														{
															"nativeSrc": "1855:15:7",
															"nodeType": "YulAssignment",
															"src": "1855:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1865:5:7",
																"nodeType": "YulIdentifier",
																"src": "1865:5:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1855:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1855:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1502:374:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1556:9:7",
														"nodeType": "YulTypedName",
														"src": "1556:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1567:7:7",
														"nodeType": "YulTypedName",
														"src": "1567:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1579:6:7",
														"nodeType": "YulTypedName",
														"src": "1579:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1587:6:7",
														"nodeType": "YulTypedName",
														"src": "1587:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1595:6:7",
														"nodeType": "YulTypedName",
														"src": "1595:6:7",
														"type": ""
													}
												],
												"src": "1502:374:7"
											},
											{
												"body": {
													"nativeSrc": "1978:87:7",
													"nodeType": "YulBlock",
													"src": "1978:87:7",
													"statements": [
														{
															"nativeSrc": "1988:26:7",
															"nodeType": "YulAssignment",
															"src": "1988:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2000:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2000:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2011:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2011:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1996:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1996:3:7"
																},
																"nativeSrc": "1996:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1996:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1988:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1988:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2030:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2030:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2045:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2045:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2053:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2053:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2041:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2041:3:7"
																		},
																		"nativeSrc": "2041:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2041:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2023:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2023:6:7"
																},
																"nativeSrc": "2023:36:7",
																"nodeType": "YulFunctionCall",
																"src": "2023:36:7"
															},
															"nativeSrc": "2023:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "2023:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1881:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1947:9:7",
														"nodeType": "YulTypedName",
														"src": "1947:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1958:6:7",
														"nodeType": "YulTypedName",
														"src": "1958:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1969:4:7",
														"nodeType": "YulTypedName",
														"src": "1969:4:7",
														"type": ""
													}
												],
												"src": "1881:184:7"
											},
											{
												"body": {
													"nativeSrc": "2140:156:7",
													"nodeType": "YulBlock",
													"src": "2140:156:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2186:16:7",
																"nodeType": "YulBlock",
																"src": "2186:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2195:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2195:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2198:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2198:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2188:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2188:6:7"
																			},
																			"nativeSrc": "2188:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2188:12:7"
																		},
																		"nativeSrc": "2188:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2188:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2161:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2161:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2170:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2170:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2157:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2157:3:7"
																		},
																		"nativeSrc": "2157:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2157:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2182:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2182:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2153:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:7"
																},
																"nativeSrc": "2153:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2153:32:7"
															},
															"nativeSrc": "2150:52:7",
															"nodeType": "YulIf",
															"src": "2150:52:7"
														},
														{
															"nativeSrc": "2211:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2211:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2224:1:7",
																"nodeType": "YulLiteral",
																"src": "2224:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2215:5:7",
																	"nodeType": "YulTypedName",
																	"src": "2215:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2234:32:7",
															"nodeType": "YulAssignment",
															"src": "2234:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2256:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2256:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2243:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2243:12:7"
																},
																"nativeSrc": "2243:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2243:23:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2234:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2234:5:7"
																}
															]
														},
														{
															"nativeSrc": "2275:15:7",
															"nodeType": "YulAssignment",
															"src": "2275:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "2285:5:7",
																"nodeType": "YulIdentifier",
																"src": "2285:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2275:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2275:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2070:226:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2106:9:7",
														"nodeType": "YulTypedName",
														"src": "2106:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2117:7:7",
														"nodeType": "YulTypedName",
														"src": "2117:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2129:6:7",
														"nodeType": "YulTypedName",
														"src": "2129:6:7",
														"type": ""
													}
												],
												"src": "2070:226:7"
											},
											{
												"body": {
													"nativeSrc": "2371:116:7",
													"nodeType": "YulBlock",
													"src": "2371:116:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2417:16:7",
																"nodeType": "YulBlock",
																"src": "2417:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2426:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2426:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2429:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2429:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2419:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2419:6:7"
																			},
																			"nativeSrc": "2419:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2419:12:7"
																		},
																		"nativeSrc": "2419:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2419:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2392:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2392:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2401:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2401:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2388:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2388:3:7"
																		},
																		"nativeSrc": "2388:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2388:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2413:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2413:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2384:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2384:3:7"
																},
																"nativeSrc": "2384:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2384:32:7"
															},
															"nativeSrc": "2381:52:7",
															"nodeType": "YulIf",
															"src": "2381:52:7"
														},
														{
															"nativeSrc": "2442:39:7",
															"nodeType": "YulAssignment",
															"src": "2442:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2471:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2471:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2452:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2452:18:7"
																},
																"nativeSrc": "2452:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2452:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2442:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2442:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2301:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2337:9:7",
														"nodeType": "YulTypedName",
														"src": "2337:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2348:7:7",
														"nodeType": "YulTypedName",
														"src": "2348:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2360:6:7",
														"nodeType": "YulTypedName",
														"src": "2360:6:7",
														"type": ""
													}
												],
												"src": "2301:186:7"
											},
											{
												"body": {
													"nativeSrc": "2579:173:7",
													"nodeType": "YulBlock",
													"src": "2579:173:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2625:16:7",
																"nodeType": "YulBlock",
																"src": "2625:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2634:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2634:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2637:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2637:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2627:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2627:6:7"
																			},
																			"nativeSrc": "2627:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2627:12:7"
																		},
																		"nativeSrc": "2627:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2627:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2600:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2600:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2596:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2596:3:7"
																		},
																		"nativeSrc": "2596:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2596:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2621:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2621:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2592:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2592:3:7"
																},
																"nativeSrc": "2592:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2592:32:7"
															},
															"nativeSrc": "2589:52:7",
															"nodeType": "YulIf",
															"src": "2589:52:7"
														},
														{
															"nativeSrc": "2650:39:7",
															"nodeType": "YulAssignment",
															"src": "2650:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2679:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2679:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2660:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2660:18:7"
																},
																"nativeSrc": "2660:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2660:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2650:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2650:6:7"
																}
															]
														},
														{
															"nativeSrc": "2698:48:7",
															"nodeType": "YulAssignment",
															"src": "2698:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2731:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2731:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2742:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2742:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2727:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2727:3:7"
																		},
																		"nativeSrc": "2727:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2727:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2708:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2708:18:7"
																},
																"nativeSrc": "2708:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2708:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2698:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2698:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2492:260:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2537:9:7",
														"nodeType": "YulTypedName",
														"src": "2537:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2548:7:7",
														"nodeType": "YulTypedName",
														"src": "2548:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2560:6:7",
														"nodeType": "YulTypedName",
														"src": "2560:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2568:6:7",
														"nodeType": "YulTypedName",
														"src": "2568:6:7",
														"type": ""
													}
												],
												"src": "2492:260:7"
											},
											{
												"body": {
													"nativeSrc": "2812:325:7",
													"nodeType": "YulBlock",
													"src": "2812:325:7",
													"statements": [
														{
															"nativeSrc": "2822:22:7",
															"nodeType": "YulAssignment",
															"src": "2822:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2836:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2836:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2839:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2839:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2832:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2832:3:7"
																},
																"nativeSrc": "2832:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2832:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2822:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2822:6:7"
																}
															]
														},
														{
															"nativeSrc": "2853:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2853:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2883:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2883:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2889:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2889:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2879:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2879:3:7"
																},
																"nativeSrc": "2879:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2879:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2857:18:7",
																	"nodeType": "YulTypedName",
																	"src": "2857:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2930:31:7",
																"nodeType": "YulBlock",
																"src": "2930:31:7",
																"statements": [
																	{
																		"nativeSrc": "2932:27:7",
																		"nodeType": "YulAssignment",
																		"src": "2932:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2946:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2946:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2954:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2954:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2942:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2942:3:7"
																			},
																			"nativeSrc": "2942:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2942:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2932:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2910:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2910:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2903:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2903:6:7"
																},
																"nativeSrc": "2903:26:7",
																"nodeType": "YulFunctionCall",
																"src": "2903:26:7"
															},
															"nativeSrc": "2900:61:7",
															"nodeType": "YulIf",
															"src": "2900:61:7"
														},
														{
															"body": {
																"nativeSrc": "3020:111:7",
																"nodeType": "YulBlock",
																"src": "3020:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3041:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3041:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3048:3:7",
																							"nodeType": "YulLiteral",
																							"src": "3048:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3053:10:7",
																							"nodeType": "YulLiteral",
																							"src": "3053:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3044:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3044:3:7"
																					},
																					"nativeSrc": "3044:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3044:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3034:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3034:6:7"
																			},
																			"nativeSrc": "3034:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3034:31:7"
																		},
																		"nativeSrc": "3034:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3034:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3085:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3085:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3088:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3088:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3078:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3078:6:7"
																			},
																			"nativeSrc": "3078:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3078:15:7"
																		},
																		"nativeSrc": "3078:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3078:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3113:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3113:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3116:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3116:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3106:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3106:6:7"
																			},
																			"nativeSrc": "3106:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3106:15:7"
																		},
																		"nativeSrc": "3106:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3106:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2976:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2976:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2999:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2999:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3007:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3007:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2996:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2996:2:7"
																		},
																		"nativeSrc": "2996:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2996:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2973:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2973:2:7"
																},
																"nativeSrc": "2973:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2973:38:7"
															},
															"nativeSrc": "2970:161:7",
															"nodeType": "YulIf",
															"src": "2970:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2757:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2792:4:7",
														"nodeType": "YulTypedName",
														"src": "2792:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2801:6:7",
														"nodeType": "YulTypedName",
														"src": "2801:6:7",
														"type": ""
													}
												],
												"src": "2757:380:7"
											},
											{
												"body": {
													"nativeSrc": "3316:171:7",
													"nodeType": "YulBlock",
													"src": "3316:171:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3333:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3333:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3344:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3344:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3326:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:7"
																},
																"nativeSrc": "3326:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3326:21:7"
															},
															"nativeSrc": "3326:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3326:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3367:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3367:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3378:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3378:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3363:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3363:3:7"
																		},
																		"nativeSrc": "3363:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3363:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3383:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3383:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3356:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3356:6:7"
																},
																"nativeSrc": "3356:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3356:30:7"
															},
															"nativeSrc": "3356:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "3356:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3406:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3406:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3417:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3417:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3402:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3402:3:7"
																		},
																		"nativeSrc": "3402:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3402:18:7"
																	},
																	{
																		"hexValue": "4f6e6c7920666163746f72792063616e206d696e74",
																		"kind": "string",
																		"nativeSrc": "3422:23:7",
																		"nodeType": "YulLiteral",
																		"src": "3422:23:7",
																		"type": "",
																		"value": "Only factory can mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3395:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3395:6:7"
																},
																"nativeSrc": "3395:51:7",
																"nodeType": "YulFunctionCall",
																"src": "3395:51:7"
															},
															"nativeSrc": "3395:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "3395:51:7"
														},
														{
															"nativeSrc": "3455:26:7",
															"nodeType": "YulAssignment",
															"src": "3455:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3467:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3467:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3478:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3478:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3463:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3463:3:7"
																},
																"nativeSrc": "3463:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3463:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3455:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3455:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7bdadf44383341607f9d3d53191424fb5a938d032ae319ca5f468c99fd5d4a74__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3142:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3293:9:7",
														"nodeType": "YulTypedName",
														"src": "3293:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3307:4:7",
														"nodeType": "YulTypedName",
														"src": "3307:4:7",
														"type": ""
													}
												],
												"src": "3142:345:7"
											},
											{
												"body": {
													"nativeSrc": "3666:168:7",
													"nodeType": "YulBlock",
													"src": "3666:168:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3683:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3683:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3694:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3694:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3676:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3676:6:7"
																},
																"nativeSrc": "3676:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3676:21:7"
															},
															"nativeSrc": "3676:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3676:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3717:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3717:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3728:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3728:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3713:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3713:3:7"
																		},
																		"nativeSrc": "3713:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3713:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3733:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3733:2:7",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3706:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3706:6:7"
																},
																"nativeSrc": "3706:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3706:30:7"
															},
															"nativeSrc": "3706:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "3706:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3756:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3756:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3767:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3767:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3752:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3752:3:7"
																		},
																		"nativeSrc": "3752:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3752:18:7"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "3772:20:7",
																		"nodeType": "YulLiteral",
																		"src": "3772:20:7",
																		"type": "",
																		"value": "Amount must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3745:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3745:6:7"
																},
																"nativeSrc": "3745:48:7",
																"nodeType": "YulFunctionCall",
																"src": "3745:48:7"
															},
															"nativeSrc": "3745:48:7",
															"nodeType": "YulExpressionStatement",
															"src": "3745:48:7"
														},
														{
															"nativeSrc": "3802:26:7",
															"nodeType": "YulAssignment",
															"src": "3802:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3814:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3814:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3825:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3825:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3810:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3810:3:7"
																},
																"nativeSrc": "3810:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3810:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3802:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3802:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3492:342:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3643:9:7",
														"nodeType": "YulTypedName",
														"src": "3643:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3657:4:7",
														"nodeType": "YulTypedName",
														"src": "3657:4:7",
														"type": ""
													}
												],
												"src": "3492:342:7"
											},
											{
												"body": {
													"nativeSrc": "4013:170:7",
													"nodeType": "YulBlock",
													"src": "4013:170:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4030:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4030:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4041:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4041:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4023:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4023:6:7"
																},
																"nativeSrc": "4023:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4023:21:7"
															},
															"nativeSrc": "4023:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "4023:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4064:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4064:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4075:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4075:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4060:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4060:3:7"
																		},
																		"nativeSrc": "4060:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4060:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4080:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4080:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4053:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4053:6:7"
																},
																"nativeSrc": "4053:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4053:30:7"
															},
															"nativeSrc": "4053:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4053:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4103:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4103:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4114:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4114:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4099:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4099:3:7"
																		},
																		"nativeSrc": "4099:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4099:18:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "4119:22:7",
																		"nodeType": "YulLiteral",
																		"src": "4119:22:7",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4092:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4092:6:7"
																},
																"nativeSrc": "4092:50:7",
																"nodeType": "YulFunctionCall",
																"src": "4092:50:7"
															},
															"nativeSrc": "4092:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "4092:50:7"
														},
														{
															"nativeSrc": "4151:26:7",
															"nodeType": "YulAssignment",
															"src": "4151:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4163:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4163:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4174:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4174:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4159:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4159:3:7"
																},
																"nativeSrc": "4159:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4159:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4151:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4151:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3839:344:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3990:9:7",
														"nodeType": "YulTypedName",
														"src": "3990:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4004:4:7",
														"nodeType": "YulTypedName",
														"src": "4004:4:7",
														"type": ""
													}
												],
												"src": "3839:344:7"
											},
											{
												"body": {
													"nativeSrc": "4220:95:7",
													"nodeType": "YulBlock",
													"src": "4220:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4237:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4237:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4244:3:7",
																				"nodeType": "YulLiteral",
																				"src": "4244:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4249:10:7",
																				"nodeType": "YulLiteral",
																				"src": "4249:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4240:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4240:3:7"
																		},
																		"nativeSrc": "4240:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4230:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4230:6:7"
																},
																"nativeSrc": "4230:31:7",
																"nodeType": "YulFunctionCall",
																"src": "4230:31:7"
															},
															"nativeSrc": "4230:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "4230:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4277:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4277:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4280:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4280:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4270:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4270:6:7"
																},
																"nativeSrc": "4270:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4270:15:7"
															},
															"nativeSrc": "4270:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4270:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4301:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4301:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4304:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4304:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4294:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4294:6:7"
																},
																"nativeSrc": "4294:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4294:15:7"
															},
															"nativeSrc": "4294:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4294:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "4188:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4188:127:7"
											},
											{
												"body": {
													"nativeSrc": "4449:119:7",
													"nodeType": "YulBlock",
													"src": "4449:119:7",
													"statements": [
														{
															"nativeSrc": "4459:26:7",
															"nodeType": "YulAssignment",
															"src": "4459:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4471:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4471:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4482:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4482:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4467:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4467:3:7"
																},
																"nativeSrc": "4467:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4467:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4459:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4459:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4501:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4501:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4512:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4512:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4494:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4494:6:7"
																},
																"nativeSrc": "4494:25:7",
																"nodeType": "YulFunctionCall",
																"src": "4494:25:7"
															},
															"nativeSrc": "4494:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "4494:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4539:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4539:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4550:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4550:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4535:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4535:3:7"
																		},
																		"nativeSrc": "4535:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4535:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4555:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4555:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4528:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4528:6:7"
																},
																"nativeSrc": "4528:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4528:34:7"
															},
															"nativeSrc": "4528:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4528:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4320:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4410:9:7",
														"nodeType": "YulTypedName",
														"src": "4410:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4421:6:7",
														"nodeType": "YulTypedName",
														"src": "4421:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4429:6:7",
														"nodeType": "YulTypedName",
														"src": "4429:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4440:4:7",
														"nodeType": "YulTypedName",
														"src": "4440:4:7",
														"type": ""
													}
												],
												"src": "4320:248:7"
											},
											{
												"body": {
													"nativeSrc": "4702:145:7",
													"nodeType": "YulBlock",
													"src": "4702:145:7",
													"statements": [
														{
															"nativeSrc": "4712:26:7",
															"nodeType": "YulAssignment",
															"src": "4712:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4724:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4724:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4735:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4735:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4720:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4720:3:7"
																},
																"nativeSrc": "4720:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4720:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4712:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4712:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4754:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4754:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4769:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4769:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4785:3:7",
																								"nodeType": "YulLiteral",
																								"src": "4785:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4790:1:7",
																								"nodeType": "YulLiteral",
																								"src": "4790:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4781:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4781:3:7"
																						},
																						"nativeSrc": "4781:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4781:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4794:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4794:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4777:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4777:3:7"
																				},
																				"nativeSrc": "4777:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4777:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4765:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4765:3:7"
																		},
																		"nativeSrc": "4765:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4765:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4747:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4747:6:7"
																},
																"nativeSrc": "4747:51:7",
																"nodeType": "YulFunctionCall",
																"src": "4747:51:7"
															},
															"nativeSrc": "4747:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "4747:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4818:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4818:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4829:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4829:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4814:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4814:3:7"
																		},
																		"nativeSrc": "4814:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4834:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4834:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4807:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4807:6:7"
																},
																"nativeSrc": "4807:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4807:34:7"
															},
															"nativeSrc": "4807:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4807:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4573:274:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4663:9:7",
														"nodeType": "YulTypedName",
														"src": "4663:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4674:6:7",
														"nodeType": "YulTypedName",
														"src": "4674:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4682:6:7",
														"nodeType": "YulTypedName",
														"src": "4682:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4693:4:7",
														"nodeType": "YulTypedName",
														"src": "4693:4:7",
														"type": ""
													}
												],
												"src": "4573:274:7"
											},
											{
												"body": {
													"nativeSrc": "5026:179:7",
													"nodeType": "YulBlock",
													"src": "5026:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5043:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5043:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5054:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5054:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5036:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5036:6:7"
																},
																"nativeSrc": "5036:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5036:21:7"
															},
															"nativeSrc": "5036:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "5036:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5077:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5077:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5088:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5088:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5073:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5073:3:7"
																		},
																		"nativeSrc": "5073:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5073:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5093:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5093:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5066:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5066:6:7"
																},
																"nativeSrc": "5066:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5066:30:7"
															},
															"nativeSrc": "5066:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "5066:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5116:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5116:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5127:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5127:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5112:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5112:3:7"
																		},
																		"nativeSrc": "5112:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5112:18:7"
																	},
																	{
																		"hexValue": "4f6e6c7920666163746f72792063616e20666163746f7279206275726e",
																		"kind": "string",
																		"nativeSrc": "5132:31:7",
																		"nodeType": "YulLiteral",
																		"src": "5132:31:7",
																		"type": "",
																		"value": "Only factory can factory burn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5105:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5105:6:7"
																},
																"nativeSrc": "5105:59:7",
																"nodeType": "YulFunctionCall",
																"src": "5105:59:7"
															},
															"nativeSrc": "5105:59:7",
															"nodeType": "YulExpressionStatement",
															"src": "5105:59:7"
														},
														{
															"nativeSrc": "5173:26:7",
															"nodeType": "YulAssignment",
															"src": "5173:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5185:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5185:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5196:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5196:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5181:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5181:3:7"
																},
																"nativeSrc": "5181:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5181:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5173:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5173:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0df0e15285aeaeace24cf81fdd8168b646fee9f8566dd9a818a9a32d37a5aa86__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4852:353:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5003:9:7",
														"nodeType": "YulTypedName",
														"src": "5003:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5017:4:7",
														"nodeType": "YulTypedName",
														"src": "5017:4:7",
														"type": ""
													}
												],
												"src": "4852:353:7"
											},
											{
												"body": {
													"nativeSrc": "5384:223:7",
													"nodeType": "YulBlock",
													"src": "5384:223:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5401:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5401:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5412:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5412:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5394:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5394:6:7"
																},
																"nativeSrc": "5394:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5394:21:7"
															},
															"nativeSrc": "5394:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "5394:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5435:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5435:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5446:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5446:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5431:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5431:3:7"
																		},
																		"nativeSrc": "5431:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5431:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5451:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5451:2:7",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5424:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5424:6:7"
																},
																"nativeSrc": "5424:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5424:30:7"
															},
															"nativeSrc": "5424:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "5424:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5474:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5474:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5485:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5485:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5470:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5470:3:7"
																		},
																		"nativeSrc": "5470:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5470:18:7"
																	},
																	{
																		"hexValue": "4f6e6c792063726561746f722063616e20736574206275726e206d616e616765",
																		"kind": "string",
																		"nativeSrc": "5490:34:7",
																		"nodeType": "YulLiteral",
																		"src": "5490:34:7",
																		"type": "",
																		"value": "Only creator can set burn manage"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5463:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5463:6:7"
																},
																"nativeSrc": "5463:62:7",
																"nodeType": "YulFunctionCall",
																"src": "5463:62:7"
															},
															"nativeSrc": "5463:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "5463:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5545:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5556:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5556:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5541:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5541:3:7"
																		},
																		"nativeSrc": "5541:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5541:18:7"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nativeSrc": "5561:3:7",
																		"nodeType": "YulLiteral",
																		"src": "5561:3:7",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5534:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:7"
																},
																"nativeSrc": "5534:31:7",
																"nodeType": "YulFunctionCall",
																"src": "5534:31:7"
															},
															"nativeSrc": "5534:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "5534:31:7"
														},
														{
															"nativeSrc": "5574:27:7",
															"nodeType": "YulAssignment",
															"src": "5574:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5586:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5586:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5597:3:7",
																		"nodeType": "YulLiteral",
																		"src": "5597:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5582:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5582:3:7"
																},
																"nativeSrc": "5582:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5582:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5574:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5574:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6f2ad510629a16bcda656e83577356065014f95b24cec689ffb20b639afc7bae__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5210:397:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5361:9:7",
														"nodeType": "YulTypedName",
														"src": "5361:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5375:4:7",
														"nodeType": "YulTypedName",
														"src": "5375:4:7",
														"type": ""
													}
												],
												"src": "5210:397:7"
											},
											{
												"body": {
													"nativeSrc": "5786:172:7",
													"nodeType": "YulBlock",
													"src": "5786:172:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5803:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5803:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5814:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5814:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5796:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5796:6:7"
																},
																"nativeSrc": "5796:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5796:21:7"
															},
															"nativeSrc": "5796:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "5796:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5837:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5837:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5848:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5848:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5833:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5833:3:7"
																		},
																		"nativeSrc": "5833:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5833:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5853:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5853:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5826:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5826:6:7"
																},
																"nativeSrc": "5826:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5826:30:7"
															},
															"nativeSrc": "5826:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "5826:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5876:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5876:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5887:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5887:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5872:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5872:3:7"
																		},
																		"nativeSrc": "5872:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5872:18:7"
																	},
																	{
																		"hexValue": "43616e6e6f74206265207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "5892:24:7",
																		"nodeType": "YulLiteral",
																		"src": "5892:24:7",
																		"type": "",
																		"value": "Cannot be zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5865:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5865:6:7"
																},
																"nativeSrc": "5865:52:7",
																"nodeType": "YulFunctionCall",
																"src": "5865:52:7"
															},
															"nativeSrc": "5865:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "5865:52:7"
														},
														{
															"nativeSrc": "5926:26:7",
															"nodeType": "YulAssignment",
															"src": "5926:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5938:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5938:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5949:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5949:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5934:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5934:3:7"
																},
																"nativeSrc": "5934:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5934:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5926:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5926:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5612:346:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5763:9:7",
														"nodeType": "YulTypedName",
														"src": "5763:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5777:4:7",
														"nodeType": "YulTypedName",
														"src": "5777:4:7",
														"type": ""
													}
												],
												"src": "5612:346:7"
											},
											{
												"body": {
													"nativeSrc": "6041:199:7",
													"nodeType": "YulBlock",
													"src": "6041:199:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6087:16:7",
																"nodeType": "YulBlock",
																"src": "6087:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6096:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6096:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6099:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6099:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6089:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6089:6:7"
																			},
																			"nativeSrc": "6089:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6089:12:7"
																		},
																		"nativeSrc": "6089:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6089:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6062:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6062:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6071:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6071:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6058:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6058:3:7"
																		},
																		"nativeSrc": "6058:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6058:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6083:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6083:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6054:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6054:3:7"
																},
																"nativeSrc": "6054:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6054:32:7"
															},
															"nativeSrc": "6051:52:7",
															"nodeType": "YulIf",
															"src": "6051:52:7"
														},
														{
															"nativeSrc": "6112:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6112:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6131:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6131:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6125:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6125:5:7"
																},
																"nativeSrc": "6125:16:7",
																"nodeType": "YulFunctionCall",
																"src": "6125:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6116:5:7",
																	"nodeType": "YulTypedName",
																	"src": "6116:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6194:16:7",
																"nodeType": "YulBlock",
																"src": "6194:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6203:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6203:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6206:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6206:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6196:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6196:6:7"
																			},
																			"nativeSrc": "6196:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6196:12:7"
																		},
																		"nativeSrc": "6196:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6196:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6163:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6163:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "6184:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "6184:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "6177:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "6177:6:7"
																						},
																						"nativeSrc": "6177:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "6177:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6170:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6170:6:7"
																				},
																				"nativeSrc": "6170:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6170:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6160:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6160:2:7"
																		},
																		"nativeSrc": "6160:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6160:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6153:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6153:6:7"
																},
																"nativeSrc": "6153:40:7",
																"nodeType": "YulFunctionCall",
																"src": "6153:40:7"
															},
															"nativeSrc": "6150:60:7",
															"nodeType": "YulIf",
															"src": "6150:60:7"
														},
														{
															"nativeSrc": "6219:15:7",
															"nodeType": "YulAssignment",
															"src": "6219:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "6229:5:7",
																"nodeType": "YulIdentifier",
																"src": "6229:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6219:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6219:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5963:277:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6007:9:7",
														"nodeType": "YulTypedName",
														"src": "6007:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6018:7:7",
														"nodeType": "YulTypedName",
														"src": "6018:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6030:6:7",
														"nodeType": "YulTypedName",
														"src": "6030:6:7",
														"type": ""
													}
												],
												"src": "5963:277:7"
											},
											{
												"body": {
													"nativeSrc": "6419:177:7",
													"nodeType": "YulBlock",
													"src": "6419:177:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6436:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6436:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6447:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6447:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6429:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6429:6:7"
																},
																"nativeSrc": "6429:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6429:21:7"
															},
															"nativeSrc": "6429:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "6429:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6470:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6470:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6481:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6481:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6466:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6466:3:7"
																		},
																		"nativeSrc": "6466:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6466:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6486:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6486:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6459:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6459:6:7"
																},
																"nativeSrc": "6459:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6459:30:7"
															},
															"nativeSrc": "6459:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "6459:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6509:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6509:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6520:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6520:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6505:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6505:3:7"
																		},
																		"nativeSrc": "6505:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6505:18:7"
																	},
																	{
																		"hexValue": "4275726e206d616e61676572206e6f7420636f6d70617469626c65",
																		"kind": "string",
																		"nativeSrc": "6525:29:7",
																		"nodeType": "YulLiteral",
																		"src": "6525:29:7",
																		"type": "",
																		"value": "Burn manager not compatible"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6498:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6498:6:7"
																},
																"nativeSrc": "6498:57:7",
																"nodeType": "YulFunctionCall",
																"src": "6498:57:7"
															},
															"nativeSrc": "6498:57:7",
															"nodeType": "YulExpressionStatement",
															"src": "6498:57:7"
														},
														{
															"nativeSrc": "6564:26:7",
															"nodeType": "YulAssignment",
															"src": "6564:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6576:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6576:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6587:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6587:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6572:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6572:3:7"
																},
																"nativeSrc": "6572:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6572:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6564:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6564:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2235764f18311222866a46b9cb0375f82b2ee44c533dd0ec92ce180500aee66f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6245:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6396:9:7",
														"nodeType": "YulTypedName",
														"src": "6396:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6410:4:7",
														"nodeType": "YulTypedName",
														"src": "6410:4:7",
														"type": ""
													}
												],
												"src": "6245:351:7"
											},
											{
												"body": {
													"nativeSrc": "6758:188:7",
													"nodeType": "YulBlock",
													"src": "6758:188:7",
													"statements": [
														{
															"nativeSrc": "6768:26:7",
															"nodeType": "YulAssignment",
															"src": "6768:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6780:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6780:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6791:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6791:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6776:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6776:3:7"
																},
																"nativeSrc": "6776:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6776:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6768:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6768:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6810:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6810:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6825:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6825:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6841:3:7",
																								"nodeType": "YulLiteral",
																								"src": "6841:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6846:1:7",
																								"nodeType": "YulLiteral",
																								"src": "6846:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6837:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "6837:3:7"
																						},
																						"nativeSrc": "6837:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "6837:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6850:1:7",
																						"nodeType": "YulLiteral",
																						"src": "6850:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6833:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6833:3:7"
																				},
																				"nativeSrc": "6833:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6833:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6821:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6821:3:7"
																		},
																		"nativeSrc": "6821:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6821:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6803:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6803:6:7"
																},
																"nativeSrc": "6803:51:7",
																"nodeType": "YulFunctionCall",
																"src": "6803:51:7"
															},
															"nativeSrc": "6803:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "6803:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6874:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6874:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6885:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6885:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6870:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6870:3:7"
																		},
																		"nativeSrc": "6870:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6870:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6890:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6890:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6863:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6863:6:7"
																},
																"nativeSrc": "6863:34:7",
																"nodeType": "YulFunctionCall",
																"src": "6863:34:7"
															},
															"nativeSrc": "6863:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "6863:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6917:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6917:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6928:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6928:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6913:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6913:3:7"
																		},
																		"nativeSrc": "6913:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6913:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6933:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6933:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6906:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6906:6:7"
																},
																"nativeSrc": "6906:34:7",
																"nodeType": "YulFunctionCall",
																"src": "6906:34:7"
															},
															"nativeSrc": "6906:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "6906:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6601:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6711:9:7",
														"nodeType": "YulTypedName",
														"src": "6711:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6722:6:7",
														"nodeType": "YulTypedName",
														"src": "6722:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6730:6:7",
														"nodeType": "YulTypedName",
														"src": "6730:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6738:6:7",
														"nodeType": "YulTypedName",
														"src": "6738:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6749:4:7",
														"nodeType": "YulTypedName",
														"src": "6749:4:7",
														"type": ""
													}
												],
												"src": "6601:345:7"
											},
											{
												"body": {
													"nativeSrc": "6999:174:7",
													"nodeType": "YulBlock",
													"src": "6999:174:7",
													"statements": [
														{
															"nativeSrc": "7009:16:7",
															"nodeType": "YulAssignment",
															"src": "7009:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7020:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7020:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7023:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7023:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7016:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7016:3:7"
																},
																"nativeSrc": "7016:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7016:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7009:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7009:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7056:111:7",
																"nodeType": "YulBlock",
																"src": "7056:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7077:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7077:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7084:3:7",
																							"nodeType": "YulLiteral",
																							"src": "7084:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7089:10:7",
																							"nodeType": "YulLiteral",
																							"src": "7089:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "7080:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7080:3:7"
																					},
																					"nativeSrc": "7080:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7080:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7070:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7070:6:7"
																			},
																			"nativeSrc": "7070:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7070:31:7"
																		},
																		"nativeSrc": "7070:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7070:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7121:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7121:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7124:4:7",
																					"nodeType": "YulLiteral",
																					"src": "7124:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7114:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7114:6:7"
																			},
																			"nativeSrc": "7114:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7114:15:7"
																		},
																		"nativeSrc": "7114:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7114:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7149:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7149:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7152:4:7",
																					"nodeType": "YulLiteral",
																					"src": "7152:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7142:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7142:6:7"
																			},
																			"nativeSrc": "7142:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7142:15:7"
																		},
																		"nativeSrc": "7142:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7142:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7040:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7040:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7043:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7043:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7037:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7037:2:7"
																},
																"nativeSrc": "7037:10:7",
																"nodeType": "YulFunctionCall",
																"src": "7037:10:7"
															},
															"nativeSrc": "7034:133:7",
															"nodeType": "YulIf",
															"src": "7034:133:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6951:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6982:1:7",
														"nodeType": "YulTypedName",
														"src": "6982:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6985:1:7",
														"nodeType": "YulTypedName",
														"src": "6985:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6991:3:7",
														"nodeType": "YulTypedName",
														"src": "6991:3:7",
														"type": ""
													}
												],
												"src": "6951:222:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_7bdadf44383341607f9d3d53191424fb5a938d032ae319ca5f468c99fd5d4a74__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Only factory can mint\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Amount must be > 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_0df0e15285aeaeace24cf81fdd8168b646fee9f8566dd9a818a9a32d37a5aa86__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Only factory can factory burn\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6f2ad510629a16bcda656e83577356065014f95b24cec689ffb20b639afc7bae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Only creator can set burn manage\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Cannot be zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_2235764f18311222866a46b9cb0375f82b2ee44c533dd0ec92ce180500aee66f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Burn manager not compatible\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"958": [
									{
										"length": 32,
										"start": 744
									},
									{
										"length": 32,
										"start": 1020
									},
									{
										"length": 32,
										"start": 1500
									}
								],
								"960": [
									{
										"length": 32,
										"start": 315
									},
									{
										"length": 32,
										"start": 1746
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610132575f3560e01c806370a08231116100b4578063a9059cbb11610079578063a9059cbb14610290578063aba83150146102a3578063dd62ed3e146102ab578063e77772fe146102e3578063f2fde38b1461030a578063f8a8fd6d1461031d575f5ffd5b806370a0823114610234578063715018a61461025c5780638da5cb5b1461026457806395d89b411461027557806396b5059d1461027d575f5ffd5b806323b872dd116100fa57806323b872dd146101d7578063313ce567146101ea57806340c10f19146101f957806342966c681461020e5780636819cd1914610221575f5ffd5b806302d05d3f1461013657806306fdde031461017a578063095ea7b31461018f57806318160ddd146101b25780631faa49c3146101c4575b5f5ffd5b61015d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b610182610325565b6040516101719190610d43565b6101a261019d366004610d93565b6103b5565b6040519015158152602001610171565b6002545b604051908152602001610171565b60075461015d906001600160a01b031681565b6101a26101e5366004610dbb565b6103ce565b60405160128152602001610171565b61020c610207366004610d93565b6103f1565b005b61020c61021c366004610df5565b610474565b61020c61022f366004610d93565b6105d1565b6101b6610242366004610e0c565b6001600160a01b03165f9081526020819052604090205490565b61020c6106a5565b6005546001600160a01b031661015d565b6101826106b8565b61020c61028b366004610e0c565b6106c7565b6101a261029e366004610d93565b61089a565b6101826108a7565b6101b66102b9366004610e2c565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61015d7f000000000000000000000000000000000000000000000000000000000000000081565b61020c610318366004610e0c565b610933565b61018261096d565b60606003805461033490610e5d565b80601f016020809104026020016040519081016040528092919081815260200182805461036090610e5d565b80156103ab5780601f10610382576101008083540402835291602001916103ab565b820191905f5260205f20905b81548152906001019060200180831161038e57829003601f168201915b5050505050905090565b5f336103c281858561097a565b60019150505b92915050565b5f336103db85828561098c565b6103e6858585610a08565b506001949350505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104665760405162461bcd60e51b815260206004820152601560248201527413db9b1e48199858dd1bdc9e4818d85b881b5a5b9d605a1b60448201526064015b60405180910390fd5b6104708282610a65565b5050565b5f81116104b85760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b604482015260640161045d565b335f9081526020819052604090205481111561050d5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b604482015260640161045d565b6105173382610a99565b6001337f14c08ae9f74e8b735a667822feb792c4e1324d0dd5887af1528665f8c2357f868361054560025490565b6040805192835260208301919091520160405180910390a36007546001600160a01b0316156105ce57600754604051631ed1028b60e01b8152336004820152602481018390526001600160a01b0390911690631ed1028b906044015f604051808303815f87803b1580156105b7575f5ffd5b505af11580156105c9573d5f5f3e3d5ffd5b505050505b50565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106495760405162461bcd60e51b815260206004820152601d60248201527f4f6e6c7920666163746f72792063616e20666163746f7279206275726e000000604482015260640161045d565b6106538282610a99565b5f826001600160a01b03167f14c08ae9f74e8b735a667822feb792c4e1324d0dd5887af1528665f8c2357f868361068960025490565b6040805192835260208301919091520160405180910390a35050565b6106ad610acd565b6106b65f610afa565b565b60606004805461033490610e5d565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107495760405162461bcd60e51b815260206004820152602160248201527f4f6e6c792063726561746f722063616e20736574206275726e206d616e6167656044820152603960f91b606482015260840161045d565b6001600160a01b0381166107985760405162461bcd60e51b815260206004820152601660248201527543616e6e6f74206265207a65726f206164647265737360501b604482015260640161045d565b6040516261f76560e41b81523060048201526001600160a01b0382169063061f765090602401602060405180830381865afa1580156107d9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107fd9190610e95565b6108495760405162461bcd60e51b815260206004820152601b60248201527f4275726e206d616e61676572206e6f7420636f6d70617469626c650000000000604482015260640161045d565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f0a216b4ae65e96da40adb74d7d42ec050b88e0da645103a084647ed55eb3e0d9905f90a35050565b5f336103c2818585610a08565b600680546108b490610e5d565b80601f01602080910402602001604051908101604052809291908181526020018280546108e090610e5d565b801561092b5780601f106109025761010080835404028352916020019161092b565b820191905f5260205f20905b81548152906001019060200180831161090e57829003601f168201915b505050505081565b61093b610acd565b6001600160a01b03811661096457604051631e4fbdf760e01b81525f600482015260240161045d565b6105ce81610afa565b600880546108b490610e5d565b6109878383836001610b4b565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610a0257818110156109f457604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161045d565b610a0284848484035f610b4b565b50505050565b6001600160a01b038316610a3157604051634b637e8f60e11b81525f600482015260240161045d565b6001600160a01b038216610a5a5760405163ec442f0560e01b81525f600482015260240161045d565b610987838383610c1d565b6001600160a01b038216610a8e5760405163ec442f0560e01b81525f600482015260240161045d565b6104705f8383610c1d565b6001600160a01b038216610ac257604051634b637e8f60e11b81525f600482015260240161045d565b610470825f83610c1d565b6005546001600160a01b031633146106b65760405163118cdaa760e01b815233600482015260240161045d565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038416610b745760405163e602df0560e01b81525f600482015260240161045d565b6001600160a01b038316610b9d57604051634a1406b160e11b81525f600482015260240161045d565b6001600160a01b038085165f9081526001602090815260408083209387168352929052208290558015610a0257826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610c0f91815260200190565b60405180910390a350505050565b6001600160a01b038316610c47578060025f828254610c3c9190610eb4565b90915550610cb79050565b6001600160a01b0383165f9081526020819052604090205481811015610c995760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161045d565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610cd357600280548290039055610cf1565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d3691815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610d8e575f5ffd5b919050565b5f5f60408385031215610da4575f5ffd5b610dad83610d78565b946020939093013593505050565b5f5f5f60608486031215610dcd575f5ffd5b610dd684610d78565b9250610de460208501610d78565b929592945050506040919091013590565b5f60208284031215610e05575f5ffd5b5035919050565b5f60208284031215610e1c575f5ffd5b610e2582610d78565b9392505050565b5f5f60408385031215610e3d575f5ffd5b610e4683610d78565b9150610e5460208401610d78565b90509250929050565b600181811c90821680610e7157607f821691505b602082108103610e8f57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f60208284031215610ea5575f5ffd5b81518015158114610e25575f5ffd5b808201808211156103c857634e487b7160e01b5f52601160045260245ffdfea2646970667358221220892de6aa65a75e2ca4ff6d7ed0e0e0910822f908e2c58b460a4f9166a4ef3be164736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x132 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xABA83150 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xE77772FE EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x31D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x96B5059D EQ PUSH2 0x27D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xFA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x6819CD19 EQ PUSH2 0x221 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x2D05D3F EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x1FAA49C3 EQ PUSH2 0x1C4 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x15D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0xD43 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0xD93 JUMP JUMPDEST PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x15D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x171 JUMP JUMPDEST PUSH2 0x20C PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0xD93 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH2 0x21C CALLDATASIZE PUSH1 0x4 PUSH2 0xDF5 JUMP JUMPDEST PUSH2 0x474 JUMP JUMPDEST PUSH2 0x20C PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0xD93 JUMP JUMPDEST PUSH2 0x5D1 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x20C PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15D JUMP JUMPDEST PUSH2 0x182 PUSH2 0x6B8 JUMP JUMPDEST PUSH2 0x20C PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0xE0C JUMP JUMPDEST PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0xD93 JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST PUSH2 0x182 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x15D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x20C PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0C JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST PUSH2 0x182 PUSH2 0x96D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x334 SWAP1 PUSH2 0xE5D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x360 SWAP1 PUSH2 0xE5D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3AB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x382 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3AB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x38E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3C2 DUP2 DUP6 DUP6 PUSH2 0x97A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3DB DUP6 DUP3 DUP6 PUSH2 0x98C JUMP JUMPDEST PUSH2 0x3E6 DUP6 DUP6 DUP6 PUSH2 0xA08 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13DB9B1E48199858DD1BDC9E4818D85B881B5A5B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x470 DUP3 DUP3 PUSH2 0xA65 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x4B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x416D6F756E74206D757374206265203E203 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45D JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45D JUMP JUMPDEST PUSH2 0x517 CALLER DUP3 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x1 CALLER PUSH32 0x14C08AE9F74E8B735A667822FEB792C4E1324D0DD5887AF1528665F8C2357F86 DUP4 PUSH2 0x545 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x5CE JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1ED1028B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x1ED1028B SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5B7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5C9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920666163746F72792063616E20666163746F7279206275726E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45D JUMP JUMPDEST PUSH2 0x653 DUP3 DUP3 PUSH2 0xA99 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x14C08AE9F74E8B735A667822FEB792C4E1324D0DD5887AF1528665F8C2357F86 DUP4 PUSH2 0x689 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6AD PUSH2 0xACD JUMP JUMPDEST PUSH2 0x6B6 PUSH0 PUSH2 0xAFA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x334 SWAP1 PUSH2 0xE5D JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x749 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063726561746F722063616E20736574206275726E206D616E616765 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x45D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x43616E6E6F74206265207A65726F2061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x61F765 PUSH1 0xE4 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x61F7650 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7D9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7FD SWAP2 SWAP1 PUSH2 0xE95 JUMP JUMPDEST PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E206D616E61676572206E6F7420636F6D70617469626C650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x45D JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0xA216B4AE65E96DA40ADB74D7D42EC050B88E0DA645103A084647ED55EB3E0D9 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x3C2 DUP2 DUP6 DUP6 PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x8B4 SWAP1 PUSH2 0xE5D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8E0 SWAP1 PUSH2 0xE5D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x92B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x902 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x92B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x90E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x93B PUSH2 0xACD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x964 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x45D JUMP JUMPDEST PUSH2 0x5CE DUP2 PUSH2 0xAFA JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x8B4 SWAP1 PUSH2 0xE5D JUMP JUMPDEST PUSH2 0x987 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB4B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0xA02 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9F4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x45D JUMP JUMPDEST PUSH2 0xA02 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xB4B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA31 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x45D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA5A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x45D JUMP JUMPDEST PUSH2 0x987 DUP4 DUP4 DUP4 PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA8E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x45D JUMP JUMPDEST PUSH2 0x470 PUSH0 DUP4 DUP4 PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAC2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x45D JUMP JUMPDEST PUSH2 0x470 DUP3 PUSH0 DUP4 PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x45D JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB74 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x45D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB9D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x45D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xA02 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC0F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC47 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC3C SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xCB7 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xC99 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x45D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCD3 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD36 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD8E JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDA4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xDAD DUP4 PUSH2 0xD78 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDCD JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xDD6 DUP5 PUSH2 0xD78 JUMP JUMPDEST SWAP3 POP PUSH2 0xDE4 PUSH1 0x20 DUP6 ADD PUSH2 0xD78 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE05 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE1C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xE25 DUP3 PUSH2 0xD78 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE3D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xE46 DUP4 PUSH2 0xD78 JUMP JUMPDEST SWAP2 POP PUSH2 0xE54 PUSH1 0x20 DUP5 ADD PUSH2 0xD78 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xE71 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xE8F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE25 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3C8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0x2D DUPN 0xAA PUSH6 0xA75E2CA4FF6D PUSH31 0xD0E0E0910822F908E2C58B460A4F9166A4EF3BE164736F6C634300081E0033 ",
							"sourceMap": "345:2886:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;429:32;;;;;;;;-1:-1:-1;;;;;178:32:7;;;160:51;;148:2;133:18;429:32:6;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;3979:186::-;;;;;;:::i;:::-;;:::i;:::-;;;1293:14:7;;1286:22;1268:41;;1256:2;1241:18;3979:186:2;1128:187:7;2830:97:2;2908:12;;2830:97;;;1466:25:7;;;1454:2;1439:18;2830:97:2;1320:177:7;497:26:6;;;;;-1:-1:-1;;;;;497:26:6;;;4757:244:2;;;;;;:::i;:::-;;:::i;2688:82::-;;;2761:2;2023:36:7;;2011:2;1996:18;2688:82:2;1881:184:7;1742:158:6;;;;;;:::i;:::-;;:::i;:::-;;2259:422;;;;;;:::i;:::-;;:::i;1953:252::-;;;;;;:::i;:::-;;:::i;2985:116:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3076:18:2;3050:7;3076:18;;;;;;;;;;;;2985:116;2293:101:0;;;:::i;1638:85::-;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;1962:93:2;;;:::i;2744:484:6:-;;;;;;:::i;:::-;;:::i;3296:178:2:-;;;;;;:::i;:::-;;:::i;468:22:6:-;;;:::i;3532:140:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:2;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;385:37:6;;;;;2543:215:0;;;;;;:::i;:::-;;:::i;530:18:6:-;;;:::i;1760:89:2:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:5;4106:31:2;735:10:5;4122:7:2;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;;:::o;4757:244::-;4844:4;735:10:5;4900:37:2;4916:4;735:10:5;4931:5:2;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:2;;4757:244;-1:-1:-1;;;;4757:244:2:o;1742:158:6:-;1812:10;-1:-1:-1;;;;;1826:12:6;1812:26;;1804:60;;;;-1:-1:-1;;;1804:60:6;;3344:2:7;1804:60:6;;;3326:21:7;3383:2;3363:18;;;3356:30;-1:-1:-1;;;3402:18:7;;;3395:51;3463:18;;1804:60:6;;;;;;;;;1875:17;1881:2;1885:6;1875:5;:17::i;:::-;1742:158;;:::o;2259:422::-;2332:1;2323:6;:10;2315:41;;;;-1:-1:-1;;;2315:41:6;;3694:2:7;2315:41:6;;;3676:21:7;3733:2;3713:18;;;3706:30;-1:-1:-1;;;3752:18:7;;;3745:48;3810:18;;2315:41:6;3492:342:7;2315:41:6;2385:10;3050:7:2;3076:18;;;;;;;;;;;2400:6:6;-1:-1:-1;2375:31:6;2367:64;;;;-1:-1:-1;;;2367:64:6;;4041:2:7;2367:64:6;;;4023:21:7;4080:2;4060:18;;;4053:30;-1:-1:-1;;;4099:18:7;;;4092:50;4159:18;;2367:64:6;3839:344:7;2367:64:6;2444:25;2450:10;2462:6;2444:5;:25::i;:::-;2518:13;2498:10;2485:62;2510:6;2533:13;2908:12:2;;;2830:97;2533:13:6;2485:62;;;4494:25:7;;;4550:2;4535:18;;4528:34;;;;4467:18;2485:62:6;;;;;;;2564:11;;-1:-1:-1;;;;;2564:11:6;:25;2560:114;;2619:11;;2606:56;;-1:-1:-1;;;2606:56:6;;2643:10;2606:56;;;4747:51:7;4814:18;;;4807:34;;;-1:-1:-1;;;;;2619:11:6;;;;2606:36;;4720:18:7;;2606:56:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2560:114;2259:422;:::o;1953:252::-;2032:10;-1:-1:-1;;;;;2046:12:6;2032:26;;2024:68;;;;-1:-1:-1;;;2024:68:6;;5054:2:7;2024:68:6;;;5036:21:7;5093:2;5073:18;;;5066:30;5132:31;5112:18;;;5105:59;5181:18;;2024:68:6;4852:353:7;2024:68:6;2103:19;2109:4;2115:6;2103:5;:19::i;:::-;2165:16;2151:4;-1:-1:-1;;;;;2138:59:6;;2157:6;2183:13;2908:12:2;;;2830:97;2183:13:6;2138:59;;;4494:25:7;;;4550:2;4535:18;;4528:34;;;;4467:18;2138:59:6;;;;;;;1953:252;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;2744:484:6:-;2816:10;-1:-1:-1;;;;;2830:7:6;2816:21;;2808:67;;;;-1:-1:-1;;;2808:67:6;;5412:2:7;2808:67:6;;;5394:21:7;5451:2;5431:18;;;5424:30;5490:34;5470:18;;;5463:62;-1:-1:-1;;;5541:18:7;;;5534:31;5582:19;;2808:67:6;5210:397:7;2808:67:6;-1:-1:-1;;;;;2894:24:6;;2886:59;;;;-1:-1:-1;;;2886:59:6;;5814:2:7;2886:59:6;;;5796:21:7;5853:2;5833:18;;;5826:30;-1:-1:-1;;;5872:18:7;;;5865:52;5934:18;;2886:59:6;5612:346:7;2886:59:6;2978:53;;-1:-1:-1;;;2978:53:6;;3025:4;2978:53;;;160:51:7;-1:-1:-1;;;;;2978:38:6;;;;;133:18:7;;2978:53:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2956:130;;;;-1:-1:-1;;;2956:130:6;;6447:2:7;2956:130:6;;;6429:21:7;6486:2;6466:18;;;6459:30;6525:29;6505:18;;;6498:57;6572:18;;2956:130:6;6245:351:7;2956:130:6;3120:11;;;-1:-1:-1;;;;;3142:24:6;;;-1:-1:-1;;;;;;3142:24:6;;;;;;;3182:38;;3120:11;;;3142:24;3120:11;;3182:38;;3099:18;;3182:38;2797:431;2744:484;:::o;3296:178:2:-;3365:4;735:10:5;3419:27:2;735:10:5;3436:2:2;3440:5;3419:9;:27::i;468:22:6:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;160:51:7::0;133:18;;2672:31:0::1;14:203:7::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;530:18:6:-:0;;;;;;;:::i;8707:128:2:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;-1:-1:-1;;;;;3638:18:2;;;10495:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10561:36:2;;10557:309;;;10636:5;10617:16;:24;10613:130;;;10668:60;;-1:-1:-1;;;10668:60:2;;-1:-1:-1;;;;;6821:32:7;;10668:60:2;;;6803:51:7;6870:18;;;6863:34;;;6913:18;;;6906:34;;;6776:18;;10668:60:2;6601:345:7;10613:130:2;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10485:387;10396:476;;;:::o;5374:300::-;-1:-1:-1;;;;;5457:18:2;;5453:86;;5498:30;;-1:-1:-1;;;5498:30:2;;5525:1;5498:30;;;160:51:7;133:18;;5498:30:2;14:203:7;5453:86:2;-1:-1:-1;;;;;5552:16:2;;5548:86;;5591:32;;-1:-1:-1;;;5591:32:2;;5620:1;5591:32;;;160:51:7;133:18;;5591:32:2;14:203:7;5548:86:2;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;7439:208::-;-1:-1:-1;;;;;7509:21:2;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:2;;7582:1;7553:32;;;160:51:7;133:18;;7553:32:2;14:203:7;7505:91:2;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;7965:206::-;-1:-1:-1;;;;;8035:21:2;;8031:89;;8079:30;;-1:-1:-1;;;8079:30:2;;8106:1;8079:30;;;160:51:7;133:18;;8079:30:2;14:203:7;8031:89:2;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;160:51:7;133:18;;1901:40:0;14:203:7;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;9682:432:2:-;-1:-1:-1;;;;;9794:19:2;;9790:89;;9836:32;;-1:-1:-1;;;9836:32:2;;9865:1;9836:32;;;160:51:7;133:18;;9836:32:2;14:203:7;9790:89:2;-1:-1:-1;;;;;9892:21:2;;9888:90;;9936:31;;-1:-1:-1;;;9936:31:2;;9964:1;9936:31;;;160:51:7;133:18;;9936:31:2;14:203:7;9888:90:2;-1:-1:-1;;;;;9987:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10032:76;;;;10082:7;-1:-1:-1;;;;;10066:31:2;10075:5;-1:-1:-1;;;;;10066:31:2;;10091:5;10066:31;;;;1466:25:7;;1454:2;1439:18;;1320:177;10066:31:2;;;;;;;;9682:432;;;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:2;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:2;;-1:-1:-1;6074:540:2;;-1:-1:-1;;;;;6288:15:2;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:2;;-1:-1:-1;;;;;6821:32:7;;6367:50:2;;;6803:51:7;6870:18;;;6863:34;;;6913:18;;;6906:34;;;6776:18;;6367:50:2;6601:345:7;6317:115:2;-1:-1:-1;;;;;6552:15:2;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:2;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:2;7073:4;-1:-1:-1;;;;;7064:25:2;;7083:5;7064:25;;;;1466::7;;1454:2;1439:18;;1320:177;7064:25:2;;;;;;;;5989:1107;;;:::o;222:418:7:-;371:2;360:9;353:21;334:4;403:6;397:13;446:6;441:2;430:9;426:18;419:34;505:6;500:2;492:6;488:15;483:2;472:9;468:18;462:50;561:1;556:2;547:6;536:9;532:22;528:31;521:42;631:2;624;620:7;615:2;607:6;603:15;599:29;588:9;584:45;580:54;572:62;;;222:418;;;;:::o;645:173::-;713:20;;-1:-1:-1;;;;;762:31:7;;752:42;;742:70;;808:1;805;798:12;742:70;645:173;;;:::o;823:300::-;891:6;899;952:2;940:9;931:7;927:23;923:32;920:52;;;968:1;965;958:12;920:52;991:29;1010:9;991:29;:::i;:::-;981:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;823:300:7:o;1502:374::-;1579:6;1587;1595;1648:2;1636:9;1627:7;1623:23;1619:32;1616:52;;;1664:1;1661;1654:12;1616:52;1687:29;1706:9;1687:29;:::i;:::-;1677:39;;1735:38;1769:2;1758:9;1754:18;1735:38;:::i;:::-;1502:374;;1725:48;;-1:-1:-1;;;1842:2:7;1827:18;;;;1814:32;;1502:374::o;2070:226::-;2129:6;2182:2;2170:9;2161:7;2157:23;2153:32;2150:52;;;2198:1;2195;2188:12;2150:52;-1:-1:-1;2243:23:7;;2070:226;-1:-1:-1;2070:226:7:o;2301:186::-;2360:6;2413:2;2401:9;2392:7;2388:23;2384:32;2381:52;;;2429:1;2426;2419:12;2381:52;2452:29;2471:9;2452:29;:::i;:::-;2442:39;2301:186;-1:-1:-1;;;2301:186:7:o;2492:260::-;2560:6;2568;2621:2;2609:9;2600:7;2596:23;2592:32;2589:52;;;2637:1;2634;2627:12;2589:52;2660:29;2679:9;2660:29;:::i;:::-;2650:39;;2708:38;2742:2;2731:9;2727:18;2708:38;:::i;:::-;2698:48;;2492:260;;;;;:::o;2757:380::-;2836:1;2832:12;;;;2879;;;2900:61;;2954:4;2946:6;2942:17;2932:27;;2900:61;3007:2;2999:6;2996:14;2976:18;2973:38;2970:161;;3053:10;3048:3;3044:20;3041:1;3034:31;3088:4;3085:1;3078:15;3116:4;3113:1;3106:15;2970:161;;2757:380;;;:::o;5963:277::-;6030:6;6083:2;6071:9;6062:7;6058:23;6054:32;6051:52;;;6099:1;6096;6089:12;6051:52;6131:9;6125:16;6184:5;6177:13;6170:21;6163:5;6160:32;6150:60;;6206:1;6203;6196:12;6951:222;7016:9;;;7037:10;;;7034:133;;;7089:10;7084:3;7080:20;7077:1;7070:31;7124:4;7121:1;7114:15;7152:4;7149:1;7142:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "769800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24779",
								"balanceOf(address)": "2560",
								"burn(uint256)": "infinite",
								"burnManager()": "2437",
								"creator()": "infinite",
								"decimals()": "221",
								"factoryBurn(address,uint256)": "infinite",
								"imageUrl()": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2386",
								"renounceOwnership()": "infinite",
								"setBurnManager(address)": "infinite",
								"symbol()": "infinite",
								"test()": "infinite",
								"tokenFactory()": "infinite",
								"totalSupply()": "2370",
								"transfer(address,uint256)": "51237",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28443"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 345,
									"end": 3231,
									"name": "PUSH",
									"source": 6,
									"value": "C0"
								},
								{
									"begin": 345,
									"end": 3231,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 345,
									"end": 3231,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 892,
									"end": 1704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1184,
									"end": 1196,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1162,
									"end": 1166,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1174,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1162,
									"end": 1166,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4751,
									"end": 4802,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4724,
									"end": 4742,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4724,
									"end": 4742,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1217,
									"end": 1243,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1217,
									"end": 1243,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1209,
									"end": 1271,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1209,
									"end": 1271,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1209,
									"end": 1271,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1209,
									"end": 1271,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1209,
									"end": 1271,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1209,
									"end": 1271,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5015,
									"end": 5017,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1209,
									"end": 1271,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1209,
									"end": 1271,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1209,
									"end": 1271,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4997,
									"end": 5018,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5054,
									"end": 5056,
									"name": "PUSH",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 5034,
									"end": 5052,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 5034,
									"end": 5052,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5034,
									"end": 5052,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5027,
									"end": 5057,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5093,
									"end": 5118,
									"name": "PUSH",
									"source": 7,
									"value": "496E76616C696420666163746F72792061646472657373000000000000000000"
								},
								{
									"begin": 5073,
									"end": 5091,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 5073,
									"end": 5091,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5073,
									"end": 5091,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5066,
									"end": 5119,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5136,
									"end": 5154,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5136,
									"end": 5154,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1209,
									"end": 1271,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 4813,
									"end": 5160,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1209,
									"end": 1271,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1209,
									"end": 1271,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1290,
									"end": 1312,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1290,
									"end": 1312,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1282,
									"end": 1340,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1282,
									"end": 1340,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1282,
									"end": 1340,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1282,
									"end": 1340,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1282,
									"end": 1340,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1282,
									"end": 1340,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 5367,
									"end": 5369,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1282,
									"end": 1340,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1282,
									"end": 1340,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1282,
									"end": 1340,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5349,
									"end": 5370,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5406,
									"end": 5408,
									"name": "PUSH",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 5386,
									"end": 5404,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 5386,
									"end": 5404,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5386,
									"end": 5404,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5379,
									"end": 5409,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5445,
									"end": 5470,
									"name": "PUSH",
									"source": 7,
									"value": "496E76616C69642063726561746F722061646472657373000000000000000000"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5418,
									"end": 5471,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5488,
									"end": 5506,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5488,
									"end": 5506,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1282,
									"end": 1340,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 5165,
									"end": 5512,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1282,
									"end": 1340,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1282,
									"end": 1340,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1353,
									"end": 1380,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1353,
									"end": 1380,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1353,
									"end": 1380,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1353,
									"end": 1380,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1353,
									"end": 1380,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1409,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1409,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1409,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 1391,
									"end": 1409,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1420,
									"end": 1428,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1420,
									"end": 1440,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1431,
									"end": 1440,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1420,
									"end": 1428,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1420,
									"end": 1440,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1420,
									"end": 1440,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1420,
									"end": 1440,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1420,
									"end": 1440,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1457,
									"end": 1483,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1457,
									"end": 1483,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1457,
									"end": 1483,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1453,
									"end": 1697,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1453,
									"end": 1697,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1526,
									"end": 1581,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "61F765"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1526,
									"end": 1581,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1579,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1526,
									"end": 1581,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4751,
									"end": 4802,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1526,
									"end": 1566,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1566,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1566,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1566,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "61F7650"
								},
								{
									"begin": 1526,
									"end": 1566,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4724,
									"end": 4742,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4724,
									"end": 4742,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "GAS",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "STATICCALL",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "RETURNDATACOPY",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "RETURNDATASIZE",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1526,
									"end": 1581,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1526,
									"end": 1581,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1644,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1500,
									"end": 1644,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1644,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1500,
									"end": 1644,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1500,
									"end": 1644,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1644,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6001,
									"end": 6003,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1500,
									"end": 1644,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1500,
									"end": 1644,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1644,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5983,
									"end": 6004,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6040,
									"end": 6042,
									"name": "PUSH",
									"source": 7,
									"value": "1B"
								},
								{
									"begin": 6020,
									"end": 6038,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 6020,
									"end": 6038,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6020,
									"end": 6038,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6013,
									"end": 6043,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6079,
									"end": 6108,
									"name": "PUSH",
									"source": 7,
									"value": "4275726E206D616E61676572206E6F7420636F6D70617469626C650000000000"
								},
								{
									"begin": 6059,
									"end": 6077,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 6059,
									"end": 6077,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6059,
									"end": 6077,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6052,
									"end": 6109,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6126,
									"end": 6144,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 6126,
									"end": 6144,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1644,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 5799,
									"end": 6150,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1500,
									"end": 1644,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1500,
									"end": 1644,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1659,
									"end": 1670,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1659,
									"end": 1685,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1659,
									"end": 1685,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1659,
									"end": 1685,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1659,
									"end": 1685,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1659,
									"end": 1685,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1659,
									"end": 1685,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1659,
									"end": 1685,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1659,
									"end": 1685,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1453,
									"end": 1697,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1453,
									"end": 1697,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 892,
									"end": 1704,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 345,
									"end": 3231,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 345,
									"end": 3231,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 196,
									"end": 323,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 196,
									"end": 323,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 257,
									"end": 267,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 252,
									"end": 255,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 248,
									"end": 268,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 245,
									"end": 246,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 269,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 288,
									"end": 292,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 285,
									"end": 286,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 278,
									"end": 293,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 312,
									"end": 316,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 309,
									"end": 310,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 302,
									"end": 317,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 328,
									"end": 1051,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 328,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 382,
									"end": 387,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 438,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 428,
									"end": 432,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 420,
									"end": 426,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 416,
									"end": 433,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 412,
									"end": 439,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 402,
									"end": 457,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 402,
									"end": 457,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 453,
									"end": 454,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 450,
									"end": 451,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 455,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 402,
									"end": 457,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 402,
									"end": 457,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 480,
									"end": 493,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 480,
									"end": 493,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 505,
									"end": 535,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 505,
									"end": 535,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 502,
									"end": 558,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 502,
									"end": 558,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 502,
									"end": 558,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 538,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 538,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 538,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 538,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 538,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 587,
									"end": 589,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 581,
									"end": 590,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 679,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 641,
									"end": 658,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 641,
									"end": 658,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 637,
									"end": 668,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 637,
									"end": 668,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 637,
									"end": 668,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 670,
									"end": 672,
									"name": "PUSH",
									"source": 7,
									"value": "3F"
								},
								{
									"begin": 633,
									"end": 673,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 629,
									"end": 683,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 617,
									"end": 684,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 617,
									"end": 684,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 699,
									"end": 733,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 699,
									"end": 733,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 735,
									"end": 757,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 735,
									"end": 757,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 735,
									"end": 757,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 696,
									"end": 758,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 693,
									"end": 781,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 693,
									"end": 781,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 693,
									"end": 781,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 761,
									"end": 779,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 761,
									"end": 779,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 761,
									"end": 779,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 761,
									"end": 779,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 761,
									"end": 779,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 797,
									"end": 799,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 790,
									"end": 812,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 821,
									"end": 843,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 821,
									"end": 843,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 821,
									"end": 843,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 862,
									"end": 881,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 862,
									"end": 881,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 862,
									"end": 881,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 883,
									"end": 887,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 858,
									"end": 888,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 855,
									"end": 894,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 852,
									"end": 911,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 852,
									"end": 911,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 852,
									"end": 911,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 907,
									"end": 908,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 904,
									"end": 905,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 897,
									"end": 909,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 852,
									"end": 911,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 852,
									"end": 911,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 964,
									"end": 970,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 957,
									"end": 961,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 945,
									"end": 962,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 938,
									"end": 942,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 930,
									"end": 936,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 926,
									"end": 943,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 920,
									"end": 971,
									"name": "MCOPY",
									"source": 7
								},
								{
									"begin": 1019,
									"end": 1020,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 991,
									"end": 1010,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1010,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1010,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1012,
									"end": 1016,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 987,
									"end": 1017,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 980,
									"end": 1021,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 980,
									"end": 1021,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 980,
									"end": 1021,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 980,
									"end": 1021,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 995,
									"end": 1001,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 328,
									"end": 1051,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 328,
									"end": 1051,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 2091,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1056,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1201,
									"end": 1207,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1215,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1217,
									"end": 1223,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1225,
									"end": 1231,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1233,
									"end": 1239,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 1247,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1294,
									"end": 1297,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 1282,
									"end": 1291,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1280,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1269,
									"end": 1292,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 1298,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1262,
									"end": 1315,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1262,
									"end": 1315,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1262,
									"end": 1315,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1312,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1313,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1262,
									"end": 1315,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1262,
									"end": 1315,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1334,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1364,
									"end": 1373,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1334,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1334,
									"end": 1374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1334,
									"end": 1374,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1334,
									"end": 1374,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1324,
									"end": 1374,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1324,
									"end": 1374,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1393,
									"end": 1442,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1438,
									"end": 1440,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1427,
									"end": 1436,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1423,
									"end": 1441,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1393,
									"end": 1442,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1393,
									"end": 1442,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1393,
									"end": 1442,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1393,
									"end": 1442,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1486,
									"end": 1488,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1471,
									"end": 1489,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1471,
									"end": 1489,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1490,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1383,
									"end": 1442,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1383,
									"end": 1442,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1502,
									"end": 1532,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1502,
									"end": 1532,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1499,
									"end": 1549,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1499,
									"end": 1549,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1499,
									"end": 1549,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1545,
									"end": 1546,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1542,
									"end": 1543,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1535,
									"end": 1547,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1499,
									"end": 1549,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 1499,
									"end": 1549,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1621,
									"end": 1628,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1612,
									"end": 1618,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1601,
									"end": 1610,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1597,
									"end": 1619,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1568,
									"end": 1629,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1629,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 1568,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1675,
									"end": 1677,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1660,
									"end": 1678,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1660,
									"end": 1678,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1654,
									"end": 1679,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1629,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1629,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1654,
									"end": 1679,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1691,
									"end": 1723,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1691,
									"end": 1723,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1688,
									"end": 1740,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1688,
									"end": 1740,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1688,
									"end": 1740,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1736,
									"end": 1737,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1733,
									"end": 1734,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1726,
									"end": 1738,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1688,
									"end": 1740,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1688,
									"end": 1740,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1759,
									"end": 1822,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 1814,
									"end": 1821,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1803,
									"end": 1811,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1792,
									"end": 1801,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1788,
									"end": 1812,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1759,
									"end": 1822,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1759,
									"end": 1822,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1759,
									"end": 1822,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 1759,
									"end": 1822,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1868,
									"end": 1871,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1847,
									"end": 1873,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1749,
									"end": 1822,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1749,
									"end": 1822,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1847,
									"end": 1873,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1885,
									"end": 1917,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1885,
									"end": 1917,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1882,
									"end": 1934,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1882,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1882,
									"end": 1934,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1930,
									"end": 1931,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1927,
									"end": 1928,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1920,
									"end": 1932,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1882,
									"end": 1934,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 1882,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1953,
									"end": 2016,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2008,
									"end": 2015,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1997,
									"end": 2005,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1986,
									"end": 1995,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1982,
									"end": 2006,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1953,
									"end": 2016,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1953,
									"end": 2016,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1953,
									"end": 2016,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 1953,
									"end": 2016,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1943,
									"end": 2016,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1943,
									"end": 2016,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1943,
									"end": 2016,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2035,
									"end": 2085,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2080,
									"end": 2083,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 2069,
									"end": 2078,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 2065,
									"end": 2084,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2035,
									"end": 2085,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 2035,
									"end": 2085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2035,
									"end": 2085,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2035,
									"end": 2085,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2025,
									"end": 2085,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2025,
									"end": 2085,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 2091,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 2091,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 2091,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 2091,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 2091,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 2091,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 2091,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 2091,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 2091,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2096,
									"end": 2476,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 2096,
									"end": 2476,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2175,
									"end": 2176,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2171,
									"end": 2183,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2171,
									"end": 2183,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2171,
									"end": 2183,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2171,
									"end": 2183,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2218,
									"end": 2230,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2218,
									"end": 2230,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2218,
									"end": 2230,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2239,
									"end": 2300,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2239,
									"end": 2300,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2293,
									"end": 2297,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 2285,
									"end": 2291,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2281,
									"end": 2298,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2271,
									"end": 2298,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2271,
									"end": 2298,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2239,
									"end": 2300,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2239,
									"end": 2300,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2346,
									"end": 2348,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2338,
									"end": 2344,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2335,
									"end": 2349,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2315,
									"end": 2333,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2312,
									"end": 2350,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2309,
									"end": 2470,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 2309,
									"end": 2470,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2392,
									"end": 2402,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 2387,
									"end": 2390,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 2383,
									"end": 2403,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2380,
									"end": 2381,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2373,
									"end": 2404,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2427,
									"end": 2431,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2424,
									"end": 2425,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2417,
									"end": 2432,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2455,
									"end": 2459,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2452,
									"end": 2453,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2445,
									"end": 2460,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2309,
									"end": 2470,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 2309,
									"end": 2470,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2309,
									"end": 2470,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2096,
									"end": 2476,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2096,
									"end": 2476,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2096,
									"end": 2476,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2096,
									"end": 2476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2607,
									"end": 3125,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 2607,
									"end": 3125,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2709,
									"end": 2711,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2704,
									"end": 2707,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2701,
									"end": 2712,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2698,
									"end": 3119,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2698,
									"end": 3119,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2698,
									"end": 3119,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2745,
									"end": 2750,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2742,
									"end": 2743,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2735,
									"end": 2751,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2789,
									"end": 2793,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2786,
									"end": 2787,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2776,
									"end": 2794,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2859,
									"end": 2861,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2847,
									"end": 2857,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2843,
									"end": 2862,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2840,
									"end": 2841,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2836,
									"end": 2863,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2830,
									"end": 2834,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2826,
									"end": 2864,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2895,
									"end": 2899,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2883,
									"end": 2893,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2880,
									"end": 2900,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2877,
									"end": 2924,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2877,
									"end": 2924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2877,
									"end": 2924,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2918,
									"end": 2922,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2877,
									"end": 2924,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 2877,
									"end": 2924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2973,
									"end": 2975,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2968,
									"end": 2971,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2964,
									"end": 2976,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2961,
									"end": 2962,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2957,
									"end": 2977,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2951,
									"end": 2955,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2947,
									"end": 2978,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 2978,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 2978,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3046,
									"end": 3048,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3039,
									"end": 3044,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3036,
									"end": 3049,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3105,
									"end": 3106,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3091,
									"end": 3107,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3091,
									"end": 3107,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3072,
									"end": 3073,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3061,
									"end": 3074,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 3028,
									"end": 3109,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3032,
									"end": 3035,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3032,
									"end": 3035,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2698,
									"end": 3119,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2698,
									"end": 3119,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2607,
									"end": 3125,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2607,
									"end": 3125,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2607,
									"end": 3125,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2607,
									"end": 3125,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3301,
									"end": 4600,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 3301,
									"end": 4600,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3421,
									"end": 3431,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3421,
									"end": 3431,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3443,
									"end": 3473,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3443,
									"end": 3473,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3440,
									"end": 3496,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3440,
									"end": 3496,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 3440,
									"end": 3496,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3476,
									"end": 3494,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 3476,
									"end": 3494,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 3476,
									"end": 3494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3476,
									"end": 3494,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 3476,
									"end": 3494,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3505,
									"end": 3602,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 3595,
									"end": 3601,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3555,
									"end": 3593,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3587,
									"end": 3591,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3581,
									"end": 3592,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3555,
									"end": 3593,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 3555,
									"end": 3593,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3555,
									"end": 3593,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3555,
									"end": 3593,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3549,
									"end": 3553,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3505,
									"end": 3602,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 3505,
									"end": 3602,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3505,
									"end": 3602,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 3505,
									"end": 3602,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3651,
									"end": 3655,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3682,
									"end": 3684,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3671,
									"end": 3685,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3671,
									"end": 3685,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3699,
									"end": 3700,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3694,
									"end": 4343,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3694,
									"end": 4343,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3694,
									"end": 4343,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 3694,
									"end": 4343,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4387,
									"end": 4388,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4404,
									"end": 4410,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4401,
									"end": 4490,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4401,
									"end": 4490,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 4401,
									"end": 4490,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4456,
									"end": 4475,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4456,
									"end": 4475,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4456,
									"end": 4475,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4450,
									"end": 4476,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4401,
									"end": 4490,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 4401,
									"end": 4490,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3259,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3254,
									"end": 3265,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3254,
									"end": 3265,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3254,
									"end": 3265,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3250,
									"end": 3274,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3246,
									"end": 3275,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3276,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3282,
									"end": 3283,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3278,
									"end": 3289,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3278,
									"end": 3289,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3278,
									"end": 3289,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3233,
									"end": 3290,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4503,
									"end": 4584,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4503,
									"end": 4584,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3664,
									"end": 4594,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 3664,
									"end": 4594,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3694,
									"end": 4343,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 3694,
									"end": 4343,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2554,
									"end": 2555,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2547,
									"end": 2561,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2547,
									"end": 2561,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2547,
									"end": 2561,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2591,
									"end": 2595,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2578,
									"end": 2596,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2578,
									"end": 2596,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3730,
									"end": 3750,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3730,
									"end": 3750,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3730,
									"end": 3750,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3848,
									"end": 4070,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3848,
									"end": 4070,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3862,
									"end": 3869,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3859,
									"end": 3860,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3848,
									"end": 4070,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3848,
									"end": 4070,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3848,
									"end": 4070,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3944,
									"end": 3963,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3944,
									"end": 3963,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3944,
									"end": 3963,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3938,
									"end": 3964,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3923,
									"end": 3965,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3923,
									"end": 3965,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4051,
									"end": 4055,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4036,
									"end": 4056,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4036,
									"end": 4056,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4036,
									"end": 4056,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4036,
									"end": 4056,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4004,
									"end": 4005,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3992,
									"end": 4006,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3992,
									"end": 4006,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3992,
									"end": 4006,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3992,
									"end": 4006,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3878,
									"end": 3890,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3848,
									"end": 4070,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3848,
									"end": 4070,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3848,
									"end": 4070,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3848,
									"end": 4070,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3852,
									"end": 3855,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4098,
									"end": 4104,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4089,
									"end": 4096,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4086,
									"end": 4105,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4083,
									"end": 4284,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4083,
									"end": 4284,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 4083,
									"end": 4284,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4159,
									"end": 4178,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4159,
									"end": 4178,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4159,
									"end": 4178,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4153,
									"end": 4179,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4242,
									"end": 4243,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 4254,
									"end": 4257,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 4234,
									"end": 4258,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4230,
									"end": 4267,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 4226,
									"end": 4268,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4211,
									"end": 4269,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4196,
									"end": 4270,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4196,
									"end": 4270,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4083,
									"end": 4284,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 4083,
									"end": 4284,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4330,
									"end": 4331,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4314,
									"end": 4328,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4314,
									"end": 4328,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4314,
									"end": 4328,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 4310,
									"end": 4332,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4333,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4333,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3301,
									"end": 4600,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5517,
									"end": 5794,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 5517,
									"end": 5794,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5584,
									"end": 5590,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5637,
									"end": 5639,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5625,
									"end": 5634,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5616,
									"end": 5623,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5612,
									"end": 5635,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 5608,
									"end": 5640,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 5605,
									"end": 5657,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5605,
									"end": 5657,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 5605,
									"end": 5657,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5653,
									"end": 5654,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5650,
									"end": 5651,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5643,
									"end": 5655,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5605,
									"end": 5657,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 5605,
									"end": 5657,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5685,
									"end": 5694,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5679,
									"end": 5695,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5738,
									"end": 5743,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5731,
									"end": 5744,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5724,
									"end": 5745,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5717,
									"end": 5722,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5714,
									"end": 5746,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 5704,
									"end": 5764,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 5704,
									"end": 5764,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5760,
									"end": 5761,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5757,
									"end": 5758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5750,
									"end": 5762,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5704,
									"end": 5764,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 5704,
									"end": 5764,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5783,
									"end": 5788,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5517,
									"end": 5794,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5517,
									"end": 5794,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5799,
									"end": 6150,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 5799,
									"end": 6150,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 345,
									"end": 3231,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 345,
									"end": 3231,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 345,
									"end": 3231,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 345,
									"end": 3231,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 345,
									"end": 3231,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 345,
									"end": 3231,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 345,
									"end": 3231,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 345,
									"end": 3231,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 345,
									"end": 3231,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 345,
									"end": 3231,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "960"
								},
								{
									"begin": 345,
									"end": 3231,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 345,
									"end": 3231,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "958"
								},
								{
									"begin": 345,
									"end": 3231,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 345,
									"end": 3231,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 345,
									"end": 3231,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220892de6aa65a75e2ca4ff6d7ed0e0e0910822f908e2c58b460a4f9166a4ef3be164736f6c634300081e0033",
									".code": [
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "ABA83150"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "E77772FE"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "F8A8FD6D"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "96B5059D"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "42966C68"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "6819CD19"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "2D05D3F"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "1FAA49C3"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 3231,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 429,
											"end": 461,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 429,
											"end": 461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 429,
											"end": 461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 429,
											"end": 461,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "960"
										},
										{
											"begin": 429,
											"end": 461,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 429,
											"end": 461,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 429,
											"end": 461,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 429,
											"end": 461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 429,
											"end": 461,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 461,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 429,
											"end": 461,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 429,
											"end": 461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 429,
											"end": 461,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 461,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 429,
											"end": 461,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 429,
											"end": 461,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 429,
											"end": 461,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 429,
											"end": 461,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 429,
											"end": 461,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1307,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1293,
											"end": 1307,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1286,
											"end": 1308,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1309,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1309,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1128,
											"end": 1315,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1456,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1320,
											"end": 1497,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 497,
											"end": 523,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 497,
											"end": 523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 497,
											"end": 523,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 497,
											"end": 523,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 497,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 497,
											"end": 523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 497,
											"end": 523,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 497,
											"end": 523,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 497,
											"end": 523,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2023,
											"end": 2059,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2059,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2011,
											"end": 2013,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1996,
											"end": 2014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1881,
											"end": 2065,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1900,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1742,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1742,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1742,
											"end": 1900,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1900,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1742,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1742,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1900,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1742,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1742,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1900,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1742,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1900,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2681,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2259,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2259,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2259,
											"end": 2681,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2681,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2259,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2259,
											"end": 2681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2681,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2259,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2259,
											"end": 2681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2205,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1953,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1953,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1953,
											"end": 2205,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2205,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1953,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1953,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2205,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1953,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1953,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 3228,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2744,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2744,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2744,
											"end": 3228,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 3228,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2744,
											"end": 3228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 3228,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2744,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2744,
											"end": 3228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 468,
											"end": 490,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 468,
											"end": 490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 385,
											"end": 422,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 385,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "958"
										},
										{
											"begin": 385,
											"end": 422,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 385,
											"end": 422,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 530,
											"end": 548,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 530,
											"end": 548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 530,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 530,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 530,
											"end": 548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1742,
											"end": 1900,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1742,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1826,
											"end": 1838,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "958"
										},
										{
											"begin": 1812,
											"end": 1838,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1812,
											"end": 1838,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1804,
											"end": 1864,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1864,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1804,
											"end": 1864,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1804,
											"end": 1864,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1864,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3346,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1804,
											"end": 1864,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1804,
											"end": 1864,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1864,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3347,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3383,
											"end": 3385,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3356,
											"end": 3386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13DB9B1E48199858DD1BDC9E4818D85B881B5A5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3402,
											"end": 3420,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3402,
											"end": 3420,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3402,
											"end": 3420,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3446,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3481,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3463,
											"end": 3481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1804,
											"end": 1864,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1804,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1864,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1804,
											"end": 1864,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1864,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1864,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1864,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1864,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1864,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1804,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1875,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1881,
											"end": 1883,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1885,
											"end": 1891,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1875,
											"end": 1892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1875,
											"end": 1892,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1875,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1900,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1900,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2681,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2259,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2333,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2323,
											"end": 2329,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2333,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2315,
											"end": 2356,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2356,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2315,
											"end": 2356,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2315,
											"end": 2356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2356,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3696,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2315,
											"end": 2356,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2315,
											"end": 2356,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3676,
											"end": 3697,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3735,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 3713,
											"end": 3731,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3713,
											"end": 3731,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3713,
											"end": 3731,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3736,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "416D6F756E74206D757374206265203E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "74"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3745,
											"end": 3793,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3828,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3810,
											"end": 3828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2315,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3492,
											"end": 3834,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2315,
											"end": 2356,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2315,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2395,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2406,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 2375,
											"end": 2406,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 2367,
											"end": 2431,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2431,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2431,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2367,
											"end": 2431,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2431,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4041,
											"end": 4043,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2431,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2367,
											"end": 2431,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2431,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4044,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4080,
											"end": 4082,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 4060,
											"end": 4078,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4060,
											"end": 4078,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4060,
											"end": 4078,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4053,
											"end": 4083,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4099,
											"end": 4117,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4099,
											"end": 4117,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4099,
											"end": 4117,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4092,
											"end": 4142,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4159,
											"end": 4177,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4159,
											"end": 4177,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2367,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3839,
											"end": 4183,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2367,
											"end": 2431,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 2367,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2450,
											"end": 2460,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2462,
											"end": 2468,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2444,
											"end": 2469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2444,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2531,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2498,
											"end": 2508,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "PUSH",
											"source": 6,
											"value": "14C08AE9F74E8B735A667822FEB792C4E1324D0DD5887AF1528665F8C2357F86"
										},
										{
											"begin": 2510,
											"end": 2516,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2533,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2546,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2533,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4494,
											"end": 4519,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4519,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4519,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4550,
											"end": 4552,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4535,
											"end": 4553,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4535,
											"end": 4553,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4528,
											"end": 4562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4528,
											"end": 4562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4528,
											"end": 4562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4528,
											"end": 4562,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4467,
											"end": 4485,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2564,
											"end": 2575,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2564,
											"end": 2575,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2564,
											"end": 2575,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2564,
											"end": 2589,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2560,
											"end": 2674,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2630,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2619,
											"end": 2630,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED1028B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2653,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4814,
											"end": 4832,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4814,
											"end": 4832,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4814,
											"end": 4832,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4807,
											"end": 4841,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4807,
											"end": 4841,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4807,
											"end": 4841,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2619,
											"end": 2630,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2630,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2630,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2630,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "PUSH",
											"source": 6,
											"value": "1ED1028B"
										},
										{
											"begin": 2606,
											"end": 2642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4720,
											"end": 4738,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4720,
											"end": 4738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2606,
											"end": 2662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2560,
											"end": 2674,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2560,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2681,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2205,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1953,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2032,
											"end": 2042,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2046,
											"end": 2058,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "958"
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2024,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2024,
											"end": 2092,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2024,
											"end": 2092,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2024,
											"end": 2092,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2024,
											"end": 2092,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2024,
											"end": 2092,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5056,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2024,
											"end": 2092,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2024,
											"end": 2092,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2024,
											"end": 2092,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5036,
											"end": 5057,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5093,
											"end": 5095,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5091,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5066,
											"end": 5096,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5163,
											"name": "PUSH",
											"source": 7,
											"value": "4F6E6C7920666163746F72792063616E20666163746F7279206275726E000000"
										},
										{
											"begin": 5112,
											"end": 5130,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5112,
											"end": 5130,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5112,
											"end": 5130,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5105,
											"end": 5164,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5199,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5181,
											"end": 5199,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2024,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4852,
											"end": 5205,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2024,
											"end": 2092,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2024,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2103,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2109,
											"end": 2113,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2103,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2103,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2103,
											"end": 2122,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2103,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2181,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2151,
											"end": 2155,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2138,
											"end": 2197,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2197,
											"name": "PUSH",
											"source": 6,
											"value": "14C08AE9F74E8B735A667822FEB792C4E1324D0DD5887AF1528665F8C2357F86"
										},
										{
											"begin": 2157,
											"end": 2163,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2183,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2197,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2138,
											"end": 2197,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2197,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4494,
											"end": 4519,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4519,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4519,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4550,
											"end": 4552,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4535,
											"end": 4553,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4535,
											"end": 4553,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4528,
											"end": 4562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4528,
											"end": 4562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4528,
											"end": 4562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4528,
											"end": 4562,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4467,
											"end": 4485,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2138,
											"end": 2197,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2138,
											"end": 2197,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2197,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2197,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2197,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2197,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2197,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2205,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2205,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 2205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 3228,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2744,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2816,
											"end": 2826,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2830,
											"end": 2837,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "960"
										},
										{
											"begin": 2816,
											"end": 2837,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2816,
											"end": 2837,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2808,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2808,
											"end": 2875,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2808,
											"end": 2875,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2808,
											"end": 2875,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2808,
											"end": 2875,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2808,
											"end": 2875,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5412,
											"end": 5414,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2808,
											"end": 2875,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2808,
											"end": 2875,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2808,
											"end": 2875,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5394,
											"end": 5415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5451,
											"end": 5453,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 5431,
											"end": 5449,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5431,
											"end": 5449,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5431,
											"end": 5449,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5454,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5524,
											"name": "PUSH",
											"source": 7,
											"value": "4F6E6C792063726561746F722063616E20736574206275726E206D616E616765"
										},
										{
											"begin": 5470,
											"end": 5488,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5470,
											"end": 5488,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5470,
											"end": 5488,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5463,
											"end": 5525,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5541,
											"end": 5559,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5541,
											"end": 5559,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5541,
											"end": 5559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5565,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2808,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5210,
											"end": 5607,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2808,
											"end": 2875,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2808,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2894,
											"end": 2918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2918,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2886,
											"end": 2945,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 2945,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2886,
											"end": 2945,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2886,
											"end": 2945,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 2945,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5816,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2886,
											"end": 2945,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2886,
											"end": 2945,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 2945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5796,
											"end": 5817,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5853,
											"end": 5855,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 5833,
											"end": 5851,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5833,
											"end": 5851,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5833,
											"end": 5851,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5826,
											"end": 5856,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "43616E6E6F74206265207A65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5872,
											"end": 5890,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5872,
											"end": 5890,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 5890,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5917,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5952,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5934,
											"end": 5952,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2886,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5612,
											"end": 5958,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2886,
											"end": 2945,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2886,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61F765"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3025,
											"end": 3029,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2978,
											"end": 3016,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3016,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3016,
											"name": "PUSH",
											"source": 6,
											"value": "61F7650"
										},
										{
											"begin": 2978,
											"end": 3016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2978,
											"end": 3031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2956,
											"end": 3086,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3086,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2956,
											"end": 3086,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2956,
											"end": 3086,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3086,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6447,
											"end": 6449,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2956,
											"end": 3086,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2956,
											"end": 3086,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3086,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6429,
											"end": 6450,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6488,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 6466,
											"end": 6484,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6466,
											"end": 6484,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6466,
											"end": 6484,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6459,
											"end": 6489,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6525,
											"end": 6554,
											"name": "PUSH",
											"source": 7,
											"value": "4275726E206D616E61676572206E6F7420636F6D70617469626C650000000000"
										},
										{
											"begin": 6505,
											"end": 6523,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6505,
											"end": 6523,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6505,
											"end": 6523,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6498,
											"end": 6555,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6572,
											"end": 6590,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6572,
											"end": 6590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2956,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 6245,
											"end": 6596,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2956,
											"end": 3086,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2956,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3120,
											"end": 3131,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3120,
											"end": 3131,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3120,
											"end": 3131,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3142,
											"end": 3166,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3166,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3166,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3142,
											"end": 3166,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3166,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3166,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3166,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3166,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3166,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3220,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3182,
											"end": 3220,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3120,
											"end": 3131,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3120,
											"end": 3131,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3120,
											"end": 3131,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3120,
											"end": 3131,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3120,
											"end": 3131,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3220,
											"name": "PUSH",
											"source": 6,
											"value": "A216B4AE65E96DA40ADB74D7D42EC050B88E0DA645103A084647ED55EB3E0D9"
										},
										{
											"begin": 3182,
											"end": 3220,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3220,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2797,
											"end": 3228,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 3228,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 3228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 468,
											"end": 490,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 468,
											"end": 490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 468,
											"end": 490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 468,
											"end": 490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 468,
											"end": 490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 530,
											"end": 548,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 530,
											"end": 548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 530,
											"end": 548,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 530,
											"end": 548,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 530,
											"end": 548,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 530,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 530,
											"end": 548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 530,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 530,
											"end": 548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6821,
											"end": 6853,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6821,
											"end": 6853,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6803,
											"end": 6854,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6870,
											"end": 6888,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6870,
											"end": 6888,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6870,
											"end": 6888,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6863,
											"end": 6897,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6863,
											"end": 6897,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6863,
											"end": 6897,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6913,
											"end": 6931,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6913,
											"end": 6931,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6913,
											"end": 6931,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6906,
											"end": 6940,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6906,
											"end": 6940,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6906,
											"end": 6940,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6776,
											"end": 6794,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6776,
											"end": 6794,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6601,
											"end": 6946,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 8137,
											"end": 8144,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8163,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 8129,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1456,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1320,
											"end": 1497,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6821,
											"end": 6853,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6821,
											"end": 6853,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6803,
											"end": 6854,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6870,
											"end": 6888,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6870,
											"end": 6888,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6870,
											"end": 6888,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6863,
											"end": 6897,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6863,
											"end": 6897,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6863,
											"end": 6897,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6913,
											"end": 6931,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6913,
											"end": 6931,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6913,
											"end": 6931,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6906,
											"end": 6940,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6906,
											"end": 6940,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6906,
											"end": 6940,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6776,
											"end": 6794,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6776,
											"end": 6794,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6601,
											"end": 6946,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1491,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1456,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1320,
											"end": 1497,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 222,
											"end": 640,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 222,
											"end": 640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 373,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 360,
											"end": 369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 353,
											"end": 374,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 334,
											"end": 338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 397,
											"end": 410,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 446,
											"end": 452,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 441,
											"end": 443,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 430,
											"end": 439,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 426,
											"end": 444,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 419,
											"end": 453,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 505,
											"end": 511,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 500,
											"end": 502,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 492,
											"end": 498,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 488,
											"end": 503,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 483,
											"end": 485,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 481,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 468,
											"end": 486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 462,
											"end": 512,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 561,
											"end": 562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 558,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 553,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 536,
											"end": 545,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 532,
											"end": 554,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 528,
											"end": 559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 563,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 620,
											"end": 627,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 615,
											"end": 617,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 607,
											"end": 613,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 603,
											"end": 618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 599,
											"end": 628,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 588,
											"end": 597,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 584,
											"end": 629,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 580,
											"end": 634,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 572,
											"end": 634,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 572,
											"end": 634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 572,
											"end": 634,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 222,
											"end": 640,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 222,
											"end": 640,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 222,
											"end": 640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 222,
											"end": 640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 222,
											"end": 640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 818,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 645,
											"end": 818,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 713,
											"end": 733,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 713,
											"end": 733,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 762,
											"end": 793,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 762,
											"end": 793,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 752,
											"end": 794,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 752,
											"end": 794,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 742,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 742,
											"end": 812,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 808,
											"end": 809,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 806,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 810,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 742,
											"end": 812,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 742,
											"end": 812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 645,
											"end": 818,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 645,
											"end": 818,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 645,
											"end": 818,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 645,
											"end": 818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 823,
											"end": 1123,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 823,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 891,
											"end": 897,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 905,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 954,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 940,
											"end": 949,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 931,
											"end": 938,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 927,
											"end": 950,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 923,
											"end": 955,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 920,
											"end": 972,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 920,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 920,
											"end": 972,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 968,
											"end": 969,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 966,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 958,
											"end": 970,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 920,
											"end": 972,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 920,
											"end": 972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 991,
											"end": 1020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 991,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 981,
											"end": 1020,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1089,
											"end": 1091,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 823,
											"end": 1123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1585,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 1593,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1601,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1650,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1636,
											"end": 1645,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1627,
											"end": 1634,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1646,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1651,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1665,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1662,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1654,
											"end": 1666,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1616,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 1706,
											"end": 1715,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 1687,
											"end": 1716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 1687,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 1769,
											"end": 1771,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1758,
											"end": 1767,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 1735,
											"end": 1773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 1735,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1502,
											"end": 1876,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1725,
											"end": 1773,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1725,
											"end": 1773,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1842,
											"end": 1844,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1845,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1814,
											"end": 1846,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1814,
											"end": 1846,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1502,
											"end": 1876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2296,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 2070,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2184,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2170,
											"end": 2179,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2157,
											"end": 2180,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2196,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2200,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2243,
											"end": 2266,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2243,
											"end": 2266,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2296,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2070,
											"end": 2296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2301,
											"end": 2487,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 2301,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2413,
											"end": 2415,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2410,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2392,
											"end": 2399,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2388,
											"end": 2411,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2384,
											"end": 2416,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2429,
											"end": 2430,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2431,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 2381,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2452,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2471,
											"end": 2480,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2452,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 2452,
											"end": 2481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2452,
											"end": 2481,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2452,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2301,
											"end": 2487,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2301,
											"end": 2487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2568,
											"end": 2574,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2621,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2607,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2619,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2592,
											"end": 2624,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2637,
											"end": 2638,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2635,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2639,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2679,
											"end": 2688,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 2660,
											"end": 2689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 2742,
											"end": 2744,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2731,
											"end": 2740,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 2708,
											"end": 2746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2746,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 2708,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2837,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2879,
											"end": 2891,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2879,
											"end": 2891,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2879,
											"end": 2891,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 2900,
											"end": 2961,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2954,
											"end": 2958,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 2946,
											"end": 2952,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 2959,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2932,
											"end": 2959,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2932,
											"end": 2959,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2961,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 2900,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3009,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2999,
											"end": 3005,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2996,
											"end": 3010,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2973,
											"end": 3011,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3048,
											"end": 3051,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3044,
											"end": 3064,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3041,
											"end": 3042,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3065,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3092,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3085,
											"end": 3086,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3078,
											"end": 3093,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3116,
											"end": 3120,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3113,
											"end": 3114,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3121,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 3137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5963,
											"end": 6240,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 5963,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6030,
											"end": 6036,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6083,
											"end": 6085,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6071,
											"end": 6080,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6062,
											"end": 6069,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6058,
											"end": 6081,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6054,
											"end": 6086,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6103,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 6051,
											"end": 6103,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6100,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6096,
											"end": 6097,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6089,
											"end": 6101,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6103,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 6051,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6131,
											"end": 6140,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6125,
											"end": 6141,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6184,
											"end": 6189,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6177,
											"end": 6190,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6191,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6163,
											"end": 6168,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6192,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6150,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 6150,
											"end": 6210,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6206,
											"end": 6207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6203,
											"end": 6204,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6208,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 7173,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 6951,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7025,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7025,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7025,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7037,
											"end": 7047,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7037,
											"end": 7047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7037,
											"end": 7047,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7034,
											"end": 7167,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7034,
											"end": 7167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 7034,
											"end": 7167,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7089,
											"end": 7099,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 7084,
											"end": 7087,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 7080,
											"end": 7100,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 7077,
											"end": 7078,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7070,
											"end": 7101,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7124,
											"end": 7128,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7121,
											"end": 7122,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7114,
											"end": 7129,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7152,
											"end": 7156,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7149,
											"end": 7150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7142,
											"end": 7157,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"VettedToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnManager()": "1faa49c3",
							"creator()": "02d05d3f",
							"decimals()": "313ce567",
							"factoryBurn(address,uint256)": "6819cd19",
							"imageUrl()": "aba83150",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setBurnManager(address)": "96b5059d",
							"symbol()": "95d89b41",
							"test()": "f8a8fd6d",
							"tokenFactory()": "e77772fe",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_imageUrl\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_burnManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"BurnManagerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"enum Token.BurnType\",\"name\":\"burnType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalSupply\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"factoryBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"imageUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"setBurnManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"VettedToken.sol\":\"Token\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"VettedToken.sol\":{\"keccak256\":\"0xc042fef1a0e9028ce63070387fb3b39d813fa3ca0c7964033441bf47a4f24819\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8660a9c7cfafbe04e4313b3a6e424f62422d568e24608cd830488b85f96fde4b\",\"dweb:/ipfs/QmPFV5RCKnTfGD9k9rm2xoi3CAKw6GeE2tq3A7CtBrXM3i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "VettedToken.sol:Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "VettedToken.sol:Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "VettedToken.sol:Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "VettedToken.sol:Token",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "VettedToken.sol:Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "VettedToken.sol:Token",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 962,
								"contract": "VettedToken.sol:Token",
								"label": "imageUrl",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 964,
								"contract": "VettedToken.sol:Token",
								"label": "burnManager",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 966,
								"contract": "VettedToken.sol:Token",
								"label": "test",
								"offset": 0,
								"slot": "8",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 799,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 799,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 799,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 799,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 799,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 799,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 799,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 799,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 799,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 799,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 799,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 799,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 799,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9768:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"VettedToken.sol": {
				"ast": {
					"absolutePath": "VettedToken.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IBurnManager": [
							952
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"Token": [
							1224
						]
					},
					"id": 1225,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1225,
							"sourceUnit": 800,
							"src": "61:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1225,
							"sourceUnit": 148,
							"src": "118:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBurnManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 952,
							"linearizedBaseContracts": [
								952
							],
							"name": "IBurnManager",
							"nameLocation": "184:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "1ed1028b",
									"id": 944,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "notifyBurn",
									"nameLocation": "213:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "burner",
												"nameLocation": "232:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "224:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "224:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "248:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "240:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "240:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "223:32:6"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "264:0:6"
									},
									"scope": 952,
									"src": "204:61:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "061f7650",
									"id": 951,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsToken",
									"nameLocation": "280:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "302:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "294:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "293:15:6"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "332:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 948,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "332:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:6:6"
									},
									"scope": 952,
									"src": "271:67:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1225,
							"src": "174:167:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 953,
										"name": "ERC20",
										"nameLocations": [
											"363:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "363:5:6"
									},
									"id": 954,
									"nodeType": "InheritanceSpecifier",
									"src": "363:5:6"
								},
								{
									"baseName": {
										"id": 955,
										"name": "Ownable",
										"nameLocations": [
											"370:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "370:7:6"
									},
									"id": 956,
									"nodeType": "InheritanceSpecifier",
									"src": "370:7:6"
								}
							],
							"canonicalName": "Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1224,
							"linearizedBaseContracts": [
								1224,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "Token",
							"nameLocation": "354:5:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e77772fe",
									"id": 958,
									"mutability": "immutable",
									"name": "tokenFactory",
									"nameLocation": "410:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1224,
									"src": "385:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 957,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "385:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "02d05d3f",
									"id": 960,
									"mutability": "immutable",
									"name": "creator",
									"nameLocation": "454:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1224,
									"src": "429:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 959,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "429:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aba83150",
									"id": 962,
									"mutability": "mutable",
									"name": "imageUrl",
									"nameLocation": "482:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1224,
									"src": "468:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 961,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "468:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1faa49c3",
									"id": 964,
									"mutability": "mutable",
									"name": "burnManager",
									"nameLocation": "512:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1224,
									"src": "497:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 963,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "497:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f8a8fd6d",
									"id": 966,
									"mutability": "mutable",
									"name": "test",
									"nameLocation": "544:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1224,
									"src": "530:18:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 965,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "530:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "0a216b4ae65e96da40adb74d7d42ec050b88e0da645103a084647ed55eb3e0d9",
									"id": 972,
									"name": "BurnManagerSet",
									"nameLocation": "567:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldManager",
												"nameLocation": "608:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "592:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"indexed": true,
												"mutability": "mutable",
												"name": "newManager",
												"nameLocation": "645:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "629:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "581:81:6"
									},
									"src": "561:102:6"
								},
								{
									"anonymous": false,
									"eventSelector": "14c08ae9f74e8b735a667822feb792c4e1324d0dd5887af1528665f8c2357f86",
									"id": 983,
									"name": "TokensBurned",
									"nameLocation": "675:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"indexed": true,
												"mutability": "mutable",
												"name": "burner",
												"nameLocation": "714:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "698:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "739:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "731:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"indexed": true,
												"mutability": "mutable",
												"name": "burnType",
												"nameLocation": "773:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "756:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_BurnType_$986",
													"typeString": "enum Token.BurnType"
												},
												"typeName": {
													"id": 978,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 977,
														"name": "BurnType",
														"nameLocations": [
															"756:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 986,
														"src": "756:8:6"
													},
													"referencedDeclaration": 986,
													"src": "756:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_BurnType_$986",
														"typeString": "enum Token.BurnType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"indexed": false,
												"mutability": "mutable",
												"name": "newTotalSupply",
												"nameLocation": "800:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "792:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "687:134:6"
									},
									"src": "669:153:6"
								},
								{
									"canonicalName": "Token.BurnType",
									"id": 986,
									"members": [
										{
											"id": 984,
											"name": "FACTORY",
											"nameLocation": "855:7:6",
											"nodeType": "EnumValue",
											"src": "855:7:6"
										},
										{
											"id": 985,
											"name": "SELF",
											"nameLocation": "873:4:6",
											"nodeType": "EnumValue",
											"src": "873:4:6"
										}
									],
									"name": "BurnType",
									"nameLocation": "835:8:6",
									"nodeType": "EnumDefinition",
									"src": "830:54:6"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "1198:506:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1009,
																"name": "initialOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "1217:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1241:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1233:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1010,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1233:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1233:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1217:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420666163746f72792061646472657373",
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1245:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_16cfceb364b99915d337c26d8ba3bdcbce06c3595a535f586d679980d6a44d7d",
																"typeString": "literal_string \"Invalid factory address\""
															},
															"value": "Invalid factory address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_16cfceb364b99915d337c26d8ba3bdcbce06c3595a535f586d679980d6a44d7d",
																"typeString": "literal_string \"Invalid factory address\""
															}
														],
														"id": 1008,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1209:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1209:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "1209:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1019,
																"name": "_creator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "1290:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1310:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1302:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1020,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1302:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1302:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1290:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642063726561746f722061646472657373",
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1314:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4259564b459b7f2329d6dfde1735bd513320c28bd67c2fe25b44aa76ee2a6087",
																"typeString": "literal_string \"Invalid creator address\""
															},
															"value": "Invalid creator address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4259564b459b7f2329d6dfde1735bd513320c28bd67c2fe25b44aa76ee2a6087",
																"typeString": "literal_string \"Invalid creator address\""
															}
														],
														"id": 1018,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1282:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1282:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "1282:58:6"
											},
											{
												"expression": {
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1028,
														"name": "tokenFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "1353:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1029,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "1368:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1353:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "1353:27:6"
											},
											{
												"expression": {
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1032,
														"name": "creator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "1391:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1033,
														"name": "_creator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "1401:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1391:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "1391:18:6"
											},
											{
												"expression": {
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1036,
														"name": "imageUrl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "1420:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1037,
														"name": "_imageUrl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "1431:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1420:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "1420:20:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1040,
														"name": "_burnManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "1457:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1481:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1473:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1041,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1473:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1473:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1457:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1064,
												"nodeType": "IfStatement",
												"src": "1453:244:6",
												"trueBody": {
													"id": 1063,
													"nodeType": "Block",
													"src": "1485:212:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1053,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "1575:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_Token_$1224",
																							"typeString": "contract Token"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_Token_$1224",
																							"typeString": "contract Token"
																						}
																					],
																					"id": 1052,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1567:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1051,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "1567:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1567:13:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1048,
																						"name": "_burnManager",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 998,
																						"src": "1539:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1047,
																					"name": "IBurnManager",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 952,
																					"src": "1526:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBurnManager_$952_$",
																						"typeString": "type(contract IBurnManager)"
																					}
																				},
																				"id": 1049,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1526:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBurnManager_$952",
																					"typeString": "contract IBurnManager"
																				}
																			},
																			"id": 1050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1553:13:6",
																			"memberName": "supportsToken",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 951,
																			"src": "1526:40:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address) view external returns (bool)"
																			}
																		},
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1526:55:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4275726e206d616e61676572206e6f7420636f6d70617469626c65",
																		"id": 1056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1600:29:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2235764f18311222866a46b9cb0375f82b2ee44c533dd0ec92ce180500aee66f",
																			"typeString": "literal_string \"Burn manager not compatible\""
																		},
																		"value": "Burn manager not compatible"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_2235764f18311222866a46b9cb0375f82b2ee44c533dd0ec92ce180500aee66f",
																			"typeString": "literal_string \"Burn manager not compatible\""
																		}
																	],
																	"id": 1046,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1500:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1500:144:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1058,
															"nodeType": "ExpressionStatement",
															"src": "1500:144:6"
														},
														{
															"expression": {
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1059,
																	"name": "burnManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "1659:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1060,
																	"name": "_burnManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "1673:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1659:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1062,
															"nodeType": "ExpressionStatement",
															"src": "1659:26:6"
														}
													]
												}
											}
										]
									},
									"id": 1066,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1001,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 992,
													"src": "1162:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1002,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 994,
													"src": "1168:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1003,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1000,
												"name": "ERC20",
												"nameLocations": [
													"1156:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1156:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1156:19:6"
										},
										{
											"arguments": [
												{
													"id": 1005,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 988,
													"src": "1184:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1006,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1004,
												"name": "Ownable",
												"nameLocations": [
													"1176:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1176:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1176:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "922:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "914:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "_creator",
												"nameLocation": "953:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "945:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "945:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "986:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "972:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 991,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "972:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1015:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1001:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 993,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1001:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "_imageUrl",
												"nameLocation": "1046:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1032:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 995,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1032:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "_burnManager",
												"nameLocation": "1074:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1066:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1066:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "903:252:6"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1198:0:6"
									},
									"scope": 1224,
									"src": "892:812:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "1793:107:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1074,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1812:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1816:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1812:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1076,
																"name": "tokenFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "1826:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1812:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920666163746f72792063616e206d696e74",
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1840:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7bdadf44383341607f9d3d53191424fb5a938d032ae319ca5f468c99fd5d4a74",
																"typeString": "literal_string \"Only factory can mint\""
															},
															"value": "Only factory can mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7bdadf44383341607f9d3d53191424fb5a938d032ae319ca5f468c99fd5d4a74",
																"typeString": "literal_string \"Only factory can mint\""
															}
														],
														"id": 1073,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1804:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1804:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "1804:60:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1082,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "1881:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1083,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "1885:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1081,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1875:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1875:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "1875:17:6"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1751:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "1756:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1776:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "1768:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1755:28:6"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:0:6"
									},
									"scope": 1224,
									"src": "1742:158:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1116,
										"nodeType": "Block",
										"src": "2013:192:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1095,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2032:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2036:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2032:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1097,
																"name": "tokenFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "2046:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2032:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920666163746f72792063616e20666163746f7279206275726e",
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2060:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0df0e15285aeaeace24cf81fdd8168b646fee9f8566dd9a818a9a32d37a5aa86",
																"typeString": "literal_string \"Only factory can factory burn\""
															},
															"value": "Only factory can factory burn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0df0e15285aeaeace24cf81fdd8168b646fee9f8566dd9a818a9a32d37a5aa86",
																"typeString": "literal_string \"Only factory can factory burn\""
															}
														],
														"id": 1094,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2024:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2024:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "2024:68:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1103,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "2109:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "2115:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1102,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "2103:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2103:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "2103:19:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1108,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "2151:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1109,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "2157:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1110,
																"name": "BurnType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "2165:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_BurnType_$986_$",
																	"typeString": "type(enum Token.BurnType)"
																}
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2174:7:6",
															"memberName": "FACTORY",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 984,
															"src": "2165:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_BurnType_$986",
																"typeString": "enum Token.BurnType"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1112,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "2183:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2183:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_BurnType_$986",
																"typeString": "enum Token.BurnType"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1107,
														"name": "TokensBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "2138:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_BurnType_$986_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,enum Token.BurnType,uint256)"
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2138:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1115,
												"nodeType": "EmitStatement",
												"src": "2133:64:6"
											}
										]
									},
									"functionSelector": "6819cd19",
									"id": 1117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "factoryBurn",
									"nameLocation": "1962:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1982:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "1974:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1974:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1996:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "1988:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1973:30:6"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2013:0:6"
									},
									"scope": 1224,
									"src": "1953:252:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "2304:377:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1123,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "2323:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2332:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2323:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2335:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 1122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2315:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2315:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "2315:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1131,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2385:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2389:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2385:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1130,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "2375:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2375:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1134,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "2400:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2375:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2408:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2367:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2367:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "2367:64:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1140,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2450:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2454:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2450:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1142,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "2462:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1139,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "2444:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2444:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "2444:25:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1146,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2498:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2502:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2498:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1148,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "2510:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1149,
																"name": "BurnType",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 986,
																"src": "2518:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_BurnType_$986_$",
																	"typeString": "type(enum Token.BurnType)"
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2527:4:6",
															"memberName": "SELF",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 985,
															"src": "2518:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_BurnType_$986",
																"typeString": "enum Token.BurnType"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1151,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "2533:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2533:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_BurnType_$986",
																"typeString": "enum Token.BurnType"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1145,
														"name": "TokensBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "2485:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_BurnType_$986_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,enum Token.BurnType,uint256)"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2485:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1154,
												"nodeType": "EmitStatement",
												"src": "2480:67:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1155,
														"name": "burnManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "2564:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2587:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2579:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1156,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2579:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2579:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2564:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1171,
												"nodeType": "IfStatement",
												"src": "2560:114:6",
												"trueBody": {
													"id": 1170,
													"nodeType": "Block",
													"src": "2591:83:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1165,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2643:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2647:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2643:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1167,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1119,
																		"src": "2655:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1162,
																				"name": "burnManager",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "2619:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1161,
																			"name": "IBurnManager",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 952,
																			"src": "2606:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IBurnManager_$952_$",
																				"typeString": "type(contract IBurnManager)"
																			}
																		},
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2606:25:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBurnManager_$952",
																			"typeString": "contract IBurnManager"
																		}
																	},
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2632:10:6",
																	"memberName": "notifyBurn",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 944,
																	"src": "2606:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) external"
																	}
																},
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2606:56:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1169,
															"nodeType": "ExpressionStatement",
															"src": "2606:56:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "2268:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2281:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "2273:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2273:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2272:16:6"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2304:0:6"
									},
									"scope": 1224,
									"src": "2259:422:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "2797:431:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1179,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2816:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2820:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2816:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1181,
																"name": "creator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "2830:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2816:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792063726561746f722063616e20736574206275726e206d616e61676572",
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2839:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f2ad510629a16bcda656e83577356065014f95b24cec689ffb20b639afc7bae",
																"typeString": "literal_string \"Only creator can set burn manager\""
															},
															"value": "Only creator can set burn manager"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f2ad510629a16bcda656e83577356065014f95b24cec689ffb20b639afc7bae",
																"typeString": "literal_string \"Only creator can set burn manager\""
															}
														],
														"id": 1178,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2808:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2808:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "2808:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1187,
																"name": "newManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "2894:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2916:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2908:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1188,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2908:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2908:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2894:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74206265207a65726f2061646472657373",
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2920:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															},
															"value": "Cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a1ed760cf7af2e11620edf8285fc9e86d9a670d7cdf28b941ed51d6af8b207f",
																"typeString": "literal_string \"Cannot be zero address\""
															}
														],
														"id": 1186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2886:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2886:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "2886:59:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1203,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3025:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Token_$1224",
																				"typeString": "contract Token"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Token_$1224",
																				"typeString": "contract Token"
																			}
																		],
																		"id": 1202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3017:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1201,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3017:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3017:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1198,
																			"name": "newManager",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1175,
																			"src": "2991:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1197,
																		"name": "IBurnManager",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 952,
																		"src": "2978:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IBurnManager_$952_$",
																			"typeString": "type(contract IBurnManager)"
																		}
																	},
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2978:24:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IBurnManager_$952",
																		"typeString": "contract IBurnManager"
																	}
																},
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3003:13:6",
																"memberName": "supportsToken",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 951,
																"src": "2978:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2978:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4275726e206d616e61676572206e6f7420636f6d70617469626c65",
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3046:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2235764f18311222866a46b9cb0375f82b2ee44c533dd0ec92ce180500aee66f",
																"typeString": "literal_string \"Burn manager not compatible\""
															},
															"value": "Burn manager not compatible"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2235764f18311222866a46b9cb0375f82b2ee44c533dd0ec92ce180500aee66f",
																"typeString": "literal_string \"Burn manager not compatible\""
															}
														],
														"id": 1196,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2956:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2956:130:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1208,
												"nodeType": "ExpressionStatement",
												"src": "2956:130:6"
											},
											{
												"assignments": [
													1210
												],
												"declarations": [
													{
														"constant": false,
														"id": 1210,
														"mutability": "mutable",
														"name": "oldManager",
														"nameLocation": "3107:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1222,
														"src": "3099:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3099:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1212,
												"initialValue": {
													"id": 1211,
													"name": "burnManager",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 964,
													"src": "3120:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3099:32:6"
											},
											{
												"expression": {
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1213,
														"name": "burnManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "3142:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1214,
														"name": "newManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "3156:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3142:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "3142:24:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1218,
															"name": "oldManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "3197:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1219,
															"name": "newManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "3209:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1217,
														"name": "BurnManagerSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "3182:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3182:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1221,
												"nodeType": "EmitStatement",
												"src": "3177:43:6"
											}
										]
									},
									"functionSelector": "96b5059d",
									"id": 1223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBurnManager",
									"nameLocation": "2753:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "newManager",
												"nameLocation": "2776:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "2768:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:20:6"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2797:0:6"
									},
									"scope": 1224,
									"src": "2744:484:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1225,
							"src": "345:2886:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								972,
								983
							]
						}
					],
					"src": "33:3200:6"
				},
				"id": 6
			}
		}
	}
}