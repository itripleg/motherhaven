{
	"id": "582093b98126928b2cc64810ceadeaf2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"token-factory/Token.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.22;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract Token is ERC20, Ownable {\r\n    constructor(\r\n        address initialOwner,\r\n        string memory name,\r\n        string memory ticker,\r\n        uint initialMint\r\n    ) ERC20(name, ticker) Ownable(initialOwner) {\r\n        _mint(msg.sender, initialMint);\r\n    }\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n}\r\n\r\ncontract Kokoro is ERC20, Ownable {\r\n    constructor(\r\n        address initialOwner,\r\n        string memory name,\r\n        string memory ticker,\r\n        uint initialMint\r\n    ) ERC20(name, ticker) Ownable(initialOwner) {\r\n        _mint(msg.sender, initialMint);\r\n    }\r\n\r\n    Kokoro public kokoro;\r\n    // Shi public shiNFT;\r\n\r\n    uint256 public totalSacrificed; // Tracks total Kokoro tokens burned\r\n    uint256 public initialPrice = 1 ether; // Base price for the bonding curve\r\n    uint256 public bondingCoefficient = 2; // Exponential growth factor\r\n    uint256 public nftFraction = 10; // Fraction for minting Shi NFTs (e.g., 10 = 10%)\r\n\r\n    struct Proof {\r\n        address user;\r\n        string finalWords;\r\n        uint256 timestamp;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "constantinople"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"token-factory/Token.sol": {
				"Kokoro": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "ticker",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "initialMint",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bondingCoefficient",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kokoro",
							"outputs": [
								{
									"internalType": "contract Kokoro",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftFraction",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSacrificed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"token-factory/Token.sol\":600:1353  contract Kokoro is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"token-factory/Token.sol\":1037:1044  1 ether */\n  0x0de0b6b3a7640000\n    /* \"token-factory/Token.sol\":1007:1044  uint256 public initialPrice = 1 ether */\n  0x08\n  sstore\n    /* \"token-factory/Token.sol\":1123:1124  2 */\n  0x02\n    /* \"token-factory/Token.sol\":1087:1124  uint256 public bondingCoefficient = 2 */\n  0x09\n  sstore\n    /* \"token-factory/Token.sol\":1189:1191  10 */\n  0x0a\n    /* \"token-factory/Token.sol\":1160:1191  uint256 public nftFraction = 10 */\n  dup1\n  sstore\n    /* \"token-factory/Token.sol\":641:869  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"token-factory/Token.sol\":806:818  initialOwner */\n  dup4\n    /* \"token-factory/Token.sol\":784:788  name */\n  dup4\n    /* \"token-factory/Token.sol\":790:796  ticker */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"token-factory/Token.sol\":831:861  _mint(msg.sender, initialMint) */\n  tag_18\n    /* \"token-factory/Token.sol\":837:847  msg.sender */\n  caller\n    /* \"token-factory/Token.sol\":849:860  initialMint */\n  dup3\n    /* \"token-factory/Token.sol\":831:836  _mint */\n  shl(0x20, tag_19)\n    /* \"token-factory/Token.sol\":831:861  _mint(msg.sender, initialMint) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"token-factory/Token.sol\":641:869  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"token-factory/Token.sol\":600:1353  contract Kokoro is ERC20, Ownable {... */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_19:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_23\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_25\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_26)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_31)\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_39:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_40:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_41:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_42:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_43:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_86\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_42\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_44:\n    /* \"#utility.yul\":641:665   */\n  tag_88\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_43\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_89\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_89:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_45:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_91\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_44\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:962   */\ntag_46:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":951:952   */\n  dup1\n    /* \"#utility.yul\":944:956   */\n  revert\n    /* \"#utility.yul\":968:1085   */\ntag_47:\n    /* \"#utility.yul\":1077:1078   */\n  0x00\n    /* \"#utility.yul\":1074:1075   */\n  dup1\n    /* \"#utility.yul\":1067:1079   */\n  revert\n    /* \"#utility.yul\":1091:1193   */\ntag_48:\n    /* \"#utility.yul\":1132:1138   */\n  0x00\n    /* \"#utility.yul\":1183:1185   */\n  0x1f\n    /* \"#utility.yul\":1179:1186   */\n  not\n    /* \"#utility.yul\":1174:1176   */\n  0x1f\n    /* \"#utility.yul\":1167:1172   */\n  dup4\n    /* \"#utility.yul\":1163:1177   */\n  add\n    /* \"#utility.yul\":1159:1187   */\n  and\n    /* \"#utility.yul\":1149:1187   */\n  swap1\n  pop\n    /* \"#utility.yul\":1091:1193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1199:1379   */\ntag_49:\n    /* \"#utility.yul\":1247:1324   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1244:1245   */\n  0x00\n    /* \"#utility.yul\":1237:1325   */\n  mstore\n    /* \"#utility.yul\":1344:1348   */\n  0x41\n    /* \"#utility.yul\":1341:1342   */\n  0x04\n    /* \"#utility.yul\":1334:1349   */\n  mstore\n    /* \"#utility.yul\":1368:1372   */\n  0x24\n    /* \"#utility.yul\":1365:1366   */\n  0x00\n    /* \"#utility.yul\":1358:1373   */\n  revert\n    /* \"#utility.yul\":1385:1666   */\ntag_50:\n    /* \"#utility.yul\":1468:1495   */\n  tag_97\n    /* \"#utility.yul\":1490:1494   */\n  dup3\n    /* \"#utility.yul\":1468:1495   */\n  tag_48\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1460:1466   */\n  dup2\n    /* \"#utility.yul\":1456:1496   */\n  add\n    /* \"#utility.yul\":1598:1604   */\n  dup2\n    /* \"#utility.yul\":1586:1596   */\n  dup2\n    /* \"#utility.yul\":1583:1605   */\n  lt\n    /* \"#utility.yul\":1562:1580   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1550:1560   */\n  dup3\n    /* \"#utility.yul\":1547:1581   */\n  gt\n    /* \"#utility.yul\":1544:1606   */\n  or\n    /* \"#utility.yul\":1541:1629   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":1609:1627   */\n  tag_99\n  tag_49\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1541:1629   */\ntag_98:\n    /* \"#utility.yul\":1649:1659   */\n  dup1\n    /* \"#utility.yul\":1645:1647   */\n  0x40\n    /* \"#utility.yul\":1638:1660   */\n  mstore\n    /* \"#utility.yul\":1428:1666   */\n  pop\n    /* \"#utility.yul\":1385:1666   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1672:1801   */\ntag_51:\n    /* \"#utility.yul\":1706:1712   */\n  0x00\n    /* \"#utility.yul\":1733:1753   */\n  tag_101\n  tag_39\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":1723:1753   */\n  swap1\n  pop\n    /* \"#utility.yul\":1762:1795   */\n  tag_102\n    /* \"#utility.yul\":1790:1794   */\n  dup3\n    /* \"#utility.yul\":1782:1788   */\n  dup3\n    /* \"#utility.yul\":1762:1795   */\n  tag_50\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":1672:1801   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1807:2115   */\ntag_52:\n    /* \"#utility.yul\":1869:1873   */\n  0x00\n    /* \"#utility.yul\":1959:1977   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1951:1957   */\n  dup3\n    /* \"#utility.yul\":1948:1978   */\n  gt\n    /* \"#utility.yul\":1945:2001   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":1981:1999   */\n  tag_105\n  tag_49\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":1945:2001   */\ntag_104:\n    /* \"#utility.yul\":2019:2048   */\n  tag_106\n    /* \"#utility.yul\":2041:2047   */\n  dup3\n    /* \"#utility.yul\":2019:2048   */\n  tag_48\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":2011:2048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2097:2101   */\n  dup2\n    /* \"#utility.yul\":2093:2108   */\n  add\n    /* \"#utility.yul\":2085:2108   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:2115   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2121:2369   */\ntag_53:\n    /* \"#utility.yul\":2203:2204   */\n  0x00\n    /* \"#utility.yul\":2213:2326   */\ntag_108:\n    /* \"#utility.yul\":2227:2233   */\n  dup4\n    /* \"#utility.yul\":2224:2225   */\n  dup2\n    /* \"#utility.yul\":2221:2234   */\n  lt\n    /* \"#utility.yul\":2213:2326   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":2312:2313   */\n  dup1\n    /* \"#utility.yul\":2307:2310   */\n  dup3\n    /* \"#utility.yul\":2303:2314   */\n  add\n    /* \"#utility.yul\":2297:2315   */\n  mload\n    /* \"#utility.yul\":2293:2294   */\n  dup2\n    /* \"#utility.yul\":2288:2291   */\n  dup5\n    /* \"#utility.yul\":2284:2295   */\n  add\n    /* \"#utility.yul\":2277:2316   */\n  mstore\n    /* \"#utility.yul\":2249:2251   */\n  0x20\n    /* \"#utility.yul\":2246:2247   */\n  dup2\n    /* \"#utility.yul\":2242:2252   */\n  add\n    /* \"#utility.yul\":2237:2252   */\n  swap1\n  pop\n    /* \"#utility.yul\":2213:2326   */\n  jump(tag_108)\ntag_110:\n    /* \"#utility.yul\":2360:2361   */\n  0x00\n    /* \"#utility.yul\":2351:2357   */\n  dup5\n    /* \"#utility.yul\":2346:2349   */\n  dup5\n    /* \"#utility.yul\":2342:2358   */\n  add\n    /* \"#utility.yul\":2335:2362   */\n  mstore\n    /* \"#utility.yul\":2183:2369   */\n  pop\n    /* \"#utility.yul\":2121:2369   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2375:2809   */\ntag_54:\n    /* \"#utility.yul\":2464:2469   */\n  0x00\n    /* \"#utility.yul\":2489:2555   */\n  tag_112\n    /* \"#utility.yul\":2505:2554   */\n  tag_113\n    /* \"#utility.yul\":2547:2553   */\n  dup5\n    /* \"#utility.yul\":2505:2554   */\n  tag_52\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":2489:2555   */\n  tag_51\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":2480:2555   */\n  swap1\n  pop\n    /* \"#utility.yul\":2578:2584   */\n  dup3\n    /* \"#utility.yul\":2571:2576   */\n  dup2\n    /* \"#utility.yul\":2564:2585   */\n  mstore\n    /* \"#utility.yul\":2616:2620   */\n  0x20\n    /* \"#utility.yul\":2609:2614   */\n  dup2\n    /* \"#utility.yul\":2605:2621   */\n  add\n    /* \"#utility.yul\":2654:2657   */\n  dup5\n    /* \"#utility.yul\":2645:2651   */\n  dup5\n    /* \"#utility.yul\":2640:2643   */\n  dup5\n    /* \"#utility.yul\":2636:2652   */\n  add\n    /* \"#utility.yul\":2633:2658   */\n  gt\n    /* \"#utility.yul\":2630:2742   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":2661:2740   */\n  tag_115\n  tag_47\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":2630:2742   */\ntag_114:\n    /* \"#utility.yul\":2751:2803   */\n  tag_116\n    /* \"#utility.yul\":2796:2802   */\n  dup5\n    /* \"#utility.yul\":2791:2794   */\n  dup3\n    /* \"#utility.yul\":2786:2789   */\n  dup6\n    /* \"#utility.yul\":2751:2803   */\n  tag_53\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":2470:2809   */\n  pop\n    /* \"#utility.yul\":2375:2809   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2829:3184   */\ntag_55:\n    /* \"#utility.yul\":2896:2901   */\n  0x00\n    /* \"#utility.yul\":2945:2948   */\n  dup3\n    /* \"#utility.yul\":2938:2942   */\n  0x1f\n    /* \"#utility.yul\":2930:2936   */\n  dup4\n    /* \"#utility.yul\":2926:2943   */\n  add\n    /* \"#utility.yul\":2922:2949   */\n  slt\n    /* \"#utility.yul\":2912:3034   */\n  tag_118\n  jumpi\n    /* \"#utility.yul\":2953:3032   */\n  tag_119\n  tag_46\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":2912:3034   */\ntag_118:\n    /* \"#utility.yul\":3063:3069   */\n  dup2\n    /* \"#utility.yul\":3057:3070   */\n  mload\n    /* \"#utility.yul\":3088:3178   */\n  tag_120\n    /* \"#utility.yul\":3174:3177   */\n  dup5\n    /* \"#utility.yul\":3166:3172   */\n  dup3\n    /* \"#utility.yul\":3159:3163   */\n  0x20\n    /* \"#utility.yul\":3151:3157   */\n  dup7\n    /* \"#utility.yul\":3147:3164   */\n  add\n    /* \"#utility.yul\":3088:3178   */\n  tag_54\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3079:3178   */\n  swap2\n  pop\n    /* \"#utility.yul\":2902:3184   */\n  pop\n    /* \"#utility.yul\":2829:3184   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3190:3267   */\ntag_56:\n    /* \"#utility.yul\":3227:3234   */\n  0x00\n    /* \"#utility.yul\":3256:3261   */\n  dup2\n    /* \"#utility.yul\":3245:3261   */\n  swap1\n  pop\n    /* \"#utility.yul\":3190:3267   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3273:3395   */\ntag_57:\n    /* \"#utility.yul\":3346:3370   */\n  tag_123\n    /* \"#utility.yul\":3364:3369   */\n  dup2\n    /* \"#utility.yul\":3346:3370   */\n  tag_56\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":3339:3344   */\n  dup2\n    /* \"#utility.yul\":3336:3371   */\n  eq\n    /* \"#utility.yul\":3326:3389   */\n  tag_124\n  jumpi\n    /* \"#utility.yul\":3385:3386   */\n  0x00\n    /* \"#utility.yul\":3382:3383   */\n  dup1\n    /* \"#utility.yul\":3375:3387   */\n  revert\n    /* \"#utility.yul\":3326:3389   */\ntag_124:\n    /* \"#utility.yul\":3273:3395   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3401:3544   */\ntag_58:\n    /* \"#utility.yul\":3458:3463   */\n  0x00\n    /* \"#utility.yul\":3489:3495   */\n  dup2\n    /* \"#utility.yul\":3483:3496   */\n  mload\n    /* \"#utility.yul\":3474:3496   */\n  swap1\n  pop\n    /* \"#utility.yul\":3505:3538   */\n  tag_126\n    /* \"#utility.yul\":3532:3537   */\n  dup2\n    /* \"#utility.yul\":3505:3538   */\n  tag_57\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3401:3544   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3550:4716   */\ntag_3:\n    /* \"#utility.yul\":3667:3673   */\n  0x00\n    /* \"#utility.yul\":3675:3681   */\n  dup1\n    /* \"#utility.yul\":3683:3689   */\n  0x00\n    /* \"#utility.yul\":3691:3697   */\n  dup1\n    /* \"#utility.yul\":3740:3743   */\n  0x80\n    /* \"#utility.yul\":3728:3737   */\n  dup6\n    /* \"#utility.yul\":3719:3726   */\n  dup8\n    /* \"#utility.yul\":3715:3738   */\n  sub\n    /* \"#utility.yul\":3711:3744   */\n  slt\n    /* \"#utility.yul\":3708:3828   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":3747:3826   */\n  tag_129\n  tag_40\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":3708:3828   */\ntag_128:\n    /* \"#utility.yul\":3867:3868   */\n  0x00\n    /* \"#utility.yul\":3892:3956   */\n  tag_130\n    /* \"#utility.yul\":3948:3955   */\n  dup8\n    /* \"#utility.yul\":3939:3945   */\n  dup3\n    /* \"#utility.yul\":3928:3937   */\n  dup9\n    /* \"#utility.yul\":3924:3946   */\n  add\n    /* \"#utility.yul\":3892:3956   */\n  tag_45\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":3882:3956   */\n  swap5\n  pop\n    /* \"#utility.yul\":3838:3966   */\n  pop\n    /* \"#utility.yul\":4026:4028   */\n  0x20\n    /* \"#utility.yul\":4015:4024   */\n  dup6\n    /* \"#utility.yul\":4011:4029   */\n  add\n    /* \"#utility.yul\":4005:4030   */\n  mload\n    /* \"#utility.yul\":4057:4075   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4049:4055   */\n  dup2\n    /* \"#utility.yul\":4046:4076   */\n  gt\n    /* \"#utility.yul\":4043:4160   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":4079:4158   */\n  tag_132\n  tag_41\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4043:4160   */\ntag_131:\n    /* \"#utility.yul\":4184:4258   */\n  tag_133\n    /* \"#utility.yul\":4250:4257   */\n  dup8\n    /* \"#utility.yul\":4241:4247   */\n  dup3\n    /* \"#utility.yul\":4230:4239   */\n  dup9\n    /* \"#utility.yul\":4226:4248   */\n  add\n    /* \"#utility.yul\":4184:4258   */\n  tag_55\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":4174:4258   */\n  swap4\n  pop\n    /* \"#utility.yul\":3976:4268   */\n  pop\n    /* \"#utility.yul\":4328:4330   */\n  0x40\n    /* \"#utility.yul\":4317:4326   */\n  dup6\n    /* \"#utility.yul\":4313:4331   */\n  add\n    /* \"#utility.yul\":4307:4332   */\n  mload\n    /* \"#utility.yul\":4359:4377   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4351:4357   */\n  dup2\n    /* \"#utility.yul\":4348:4378   */\n  gt\n    /* \"#utility.yul\":4345:4462   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":4381:4460   */\n  tag_135\n  tag_41\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":4345:4462   */\ntag_134:\n    /* \"#utility.yul\":4486:4560   */\n  tag_136\n    /* \"#utility.yul\":4552:4559   */\n  dup8\n    /* \"#utility.yul\":4543:4549   */\n  dup3\n    /* \"#utility.yul\":4532:4541   */\n  dup9\n    /* \"#utility.yul\":4528:4550   */\n  add\n    /* \"#utility.yul\":4486:4560   */\n  tag_55\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":4476:4560   */\n  swap3\n  pop\n    /* \"#utility.yul\":4278:4570   */\n  pop\n    /* \"#utility.yul\":4609:4611   */\n  0x60\n    /* \"#utility.yul\":4635:4699   */\n  tag_137\n    /* \"#utility.yul\":4691:4698   */\n  dup8\n    /* \"#utility.yul\":4682:4688   */\n  dup3\n    /* \"#utility.yul\":4671:4680   */\n  dup9\n    /* \"#utility.yul\":4667:4689   */\n  add\n    /* \"#utility.yul\":4635:4699   */\n  tag_58\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":4625:4699   */\n  swap2\n  pop\n    /* \"#utility.yul\":4580:4709   */\n  pop\n    /* \"#utility.yul\":3550:4716   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4722:4821   */\ntag_59:\n    /* \"#utility.yul\":4774:4780   */\n  0x00\n    /* \"#utility.yul\":4808:4813   */\n  dup2\n    /* \"#utility.yul\":4802:4814   */\n  mload\n    /* \"#utility.yul\":4792:4814   */\n  swap1\n  pop\n    /* \"#utility.yul\":4722:4821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4827:5007   */\ntag_60:\n    /* \"#utility.yul\":4875:4952   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4872:4873   */\n  0x00\n    /* \"#utility.yul\":4865:4953   */\n  mstore\n    /* \"#utility.yul\":4972:4976   */\n  0x22\n    /* \"#utility.yul\":4969:4970   */\n  0x04\n    /* \"#utility.yul\":4962:4977   */\n  mstore\n    /* \"#utility.yul\":4996:5000   */\n  0x24\n    /* \"#utility.yul\":4993:4994   */\n  0x00\n    /* \"#utility.yul\":4986:5001   */\n  revert\n    /* \"#utility.yul\":5013:5333   */\ntag_61:\n    /* \"#utility.yul\":5057:5063   */\n  0x00\n    /* \"#utility.yul\":5094:5095   */\n  0x02\n    /* \"#utility.yul\":5088:5092   */\n  dup3\n    /* \"#utility.yul\":5084:5096   */\n  div\n    /* \"#utility.yul\":5074:5096   */\n  swap1\n  pop\n    /* \"#utility.yul\":5141:5142   */\n  0x01\n    /* \"#utility.yul\":5135:5139   */\n  dup3\n    /* \"#utility.yul\":5131:5143   */\n  and\n    /* \"#utility.yul\":5162:5180   */\n  dup1\n    /* \"#utility.yul\":5152:5233   */\n  tag_141\n  jumpi\n    /* \"#utility.yul\":5218:5222   */\n  0x7f\n    /* \"#utility.yul\":5210:5216   */\n  dup3\n    /* \"#utility.yul\":5206:5223   */\n  and\n    /* \"#utility.yul\":5196:5223   */\n  swap2\n  pop\n    /* \"#utility.yul\":5152:5233   */\ntag_141:\n    /* \"#utility.yul\":5280:5282   */\n  0x20\n    /* \"#utility.yul\":5272:5278   */\n  dup3\n    /* \"#utility.yul\":5269:5283   */\n  lt\n    /* \"#utility.yul\":5249:5267   */\n  dup2\n    /* \"#utility.yul\":5246:5284   */\n  sub\n    /* \"#utility.yul\":5243:5327   */\n  tag_142\n  jumpi\n    /* \"#utility.yul\":5299:5317   */\n  tag_143\n  tag_60\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":5243:5327   */\ntag_142:\n    /* \"#utility.yul\":5064:5333   */\n  pop\n    /* \"#utility.yul\":5013:5333   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5339:5480   */\ntag_62:\n    /* \"#utility.yul\":5388:5392   */\n  0x00\n    /* \"#utility.yul\":5411:5414   */\n  dup2\n    /* \"#utility.yul\":5403:5414   */\n  swap1\n  pop\n    /* \"#utility.yul\":5434:5437   */\n  dup2\n    /* \"#utility.yul\":5431:5432   */\n  0x00\n    /* \"#utility.yul\":5424:5438   */\n  mstore\n    /* \"#utility.yul\":5468:5472   */\n  0x20\n    /* \"#utility.yul\":5465:5466   */\n  0x00\n    /* \"#utility.yul\":5455:5473   */\n  keccak256\n    /* \"#utility.yul\":5447:5473   */\n  swap1\n  pop\n    /* \"#utility.yul\":5339:5480   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5486:5579   */\ntag_63:\n    /* \"#utility.yul\":5523:5529   */\n  0x00\n    /* \"#utility.yul\":5570:5572   */\n  0x20\n    /* \"#utility.yul\":5565:5567   */\n  0x1f\n    /* \"#utility.yul\":5558:5563   */\n  dup4\n    /* \"#utility.yul\":5554:5568   */\n  add\n    /* \"#utility.yul\":5550:5573   */\n  div\n    /* \"#utility.yul\":5540:5573   */\n  swap1\n  pop\n    /* \"#utility.yul\":5486:5579   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5585:5692   */\ntag_64:\n    /* \"#utility.yul\":5629:5637   */\n  0x00\n    /* \"#utility.yul\":5679:5684   */\n  dup3\n    /* \"#utility.yul\":5673:5677   */\n  dup3\n    /* \"#utility.yul\":5669:5685   */\n  shl\n    /* \"#utility.yul\":5648:5685   */\n  swap1\n  pop\n    /* \"#utility.yul\":5585:5692   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5698:6091   */\ntag_65:\n    /* \"#utility.yul\":5767:5773   */\n  0x00\n    /* \"#utility.yul\":5817:5818   */\n  0x08\n    /* \"#utility.yul\":5805:5815   */\n  dup4\n    /* \"#utility.yul\":5801:5819   */\n  mul\n    /* \"#utility.yul\":5840:5937   */\n  tag_148\n    /* \"#utility.yul\":5870:5936   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5859:5868   */\n  dup3\n    /* \"#utility.yul\":5840:5937   */\n  tag_64\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":5958:5997   */\n  tag_149\n    /* \"#utility.yul\":5988:5996   */\n  dup7\n    /* \"#utility.yul\":5977:5986   */\n  dup4\n    /* \"#utility.yul\":5958:5997   */\n  tag_64\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":5946:5997   */\n  swap6\n  pop\n    /* \"#utility.yul\":6030:6034   */\n  dup1\n    /* \"#utility.yul\":6026:6035   */\n  not\n    /* \"#utility.yul\":6019:6024   */\n  dup5\n    /* \"#utility.yul\":6015:6036   */\n  and\n    /* \"#utility.yul\":6006:6036   */\n  swap4\n  pop\n    /* \"#utility.yul\":6079:6083   */\n  dup1\n    /* \"#utility.yul\":6069:6077   */\n  dup7\n    /* \"#utility.yul\":6065:6084   */\n  and\n    /* \"#utility.yul\":6058:6063   */\n  dup5\n    /* \"#utility.yul\":6055:6085   */\n  or\n    /* \"#utility.yul\":6045:6085   */\n  swap3\n  pop\n    /* \"#utility.yul\":5774:6091   */\n  pop\n  pop\n    /* \"#utility.yul\":5698:6091   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6097:6157   */\ntag_66:\n    /* \"#utility.yul\":6125:6128   */\n  0x00\n    /* \"#utility.yul\":6146:6151   */\n  dup2\n    /* \"#utility.yul\":6139:6151   */\n  swap1\n  pop\n    /* \"#utility.yul\":6097:6157   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6163:6305   */\ntag_67:\n    /* \"#utility.yul\":6213:6222   */\n  0x00\n    /* \"#utility.yul\":6246:6299   */\n  tag_152\n    /* \"#utility.yul\":6264:6298   */\n  tag_153\n    /* \"#utility.yul\":6273:6297   */\n  tag_154\n    /* \"#utility.yul\":6291:6296   */\n  dup5\n    /* \"#utility.yul\":6273:6297   */\n  tag_56\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":6264:6298   */\n  tag_66\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6246:6299   */\n  tag_56\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6233:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6163:6305   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6311:6386   */\ntag_68:\n    /* \"#utility.yul\":6354:6357   */\n  0x00\n    /* \"#utility.yul\":6375:6380   */\n  dup2\n    /* \"#utility.yul\":6368:6380   */\n  swap1\n  pop\n    /* \"#utility.yul\":6311:6386   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6392:6661   */\ntag_69:\n    /* \"#utility.yul\":6502:6541   */\n  tag_157\n    /* \"#utility.yul\":6533:6540   */\n  dup4\n    /* \"#utility.yul\":6502:6541   */\n  tag_67\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6563:6654   */\n  tag_158\n    /* \"#utility.yul\":6612:6653   */\n  tag_159\n    /* \"#utility.yul\":6636:6652   */\n  dup3\n    /* \"#utility.yul\":6612:6653   */\n  tag_68\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":6604:6610   */\n  dup5\n    /* \"#utility.yul\":6597:6601   */\n  dup5\n    /* \"#utility.yul\":6591:6602   */\n  sload\n    /* \"#utility.yul\":6563:6654   */\n  tag_65\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6557:6561   */\n  dup3\n    /* \"#utility.yul\":6550:6655   */\n  sstore\n    /* \"#utility.yul\":6468:6661   */\n  pop\n    /* \"#utility.yul\":6392:6661   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6667:6740   */\ntag_70:\n    /* \"#utility.yul\":6712:6715   */\n  0x00\n    /* \"#utility.yul\":6667:6740   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6746:6935   */\ntag_71:\n    /* \"#utility.yul\":6823:6855   */\n  tag_162\n  tag_70\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":6864:6929   */\n  tag_163\n    /* \"#utility.yul\":6922:6928   */\n  dup2\n    /* \"#utility.yul\":6914:6920   */\n  dup5\n    /* \"#utility.yul\":6908:6912   */\n  dup5\n    /* \"#utility.yul\":6864:6929   */\n  tag_69\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":6799:6935   */\n  pop\n    /* \"#utility.yul\":6746:6935   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6941:7127   */\ntag_72:\n    /* \"#utility.yul\":7001:7121   */\ntag_165:\n    /* \"#utility.yul\":7018:7021   */\n  dup2\n    /* \"#utility.yul\":7011:7016   */\n  dup2\n    /* \"#utility.yul\":7008:7022   */\n  lt\n    /* \"#utility.yul\":7001:7121   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":7072:7111   */\n  tag_168\n    /* \"#utility.yul\":7109:7110   */\n  0x00\n    /* \"#utility.yul\":7102:7107   */\n  dup3\n    /* \"#utility.yul\":7072:7111   */\n  tag_71\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7045:7046   */\n  0x01\n    /* \"#utility.yul\":7038:7043   */\n  dup2\n    /* \"#utility.yul\":7034:7047   */\n  add\n    /* \"#utility.yul\":7025:7047   */\n  swap1\n  pop\n    /* \"#utility.yul\":7001:7121   */\n  jump(tag_165)\ntag_167:\n    /* \"#utility.yul\":6941:7127   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7133:7676   */\ntag_73:\n    /* \"#utility.yul\":7234:7236   */\n  0x1f\n    /* \"#utility.yul\":7229:7232   */\n  dup3\n    /* \"#utility.yul\":7226:7237   */\n  gt\n    /* \"#utility.yul\":7223:7669   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":7268:7306   */\n  tag_171\n    /* \"#utility.yul\":7300:7305   */\n  dup2\n    /* \"#utility.yul\":7268:7306   */\n  tag_62\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":7352:7381   */\n  tag_172\n    /* \"#utility.yul\":7370:7380   */\n  dup5\n    /* \"#utility.yul\":7352:7381   */\n  tag_63\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":7342:7350   */\n  dup2\n    /* \"#utility.yul\":7338:7382   */\n  add\n    /* \"#utility.yul\":7535:7537   */\n  0x20\n    /* \"#utility.yul\":7523:7533   */\n  dup6\n    /* \"#utility.yul\":7520:7538   */\n  lt\n    /* \"#utility.yul\":7517:7566   */\n  iszero\n  tag_173\n  jumpi\n    /* \"#utility.yul\":7556:7564   */\n  dup2\n    /* \"#utility.yul\":7541:7564   */\n  swap1\n  pop\n    /* \"#utility.yul\":7517:7566   */\ntag_173:\n    /* \"#utility.yul\":7579:7659   */\n  tag_174\n    /* \"#utility.yul\":7635:7657   */\n  tag_175\n    /* \"#utility.yul\":7653:7656   */\n  dup6\n    /* \"#utility.yul\":7635:7657   */\n  tag_63\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":7625:7633   */\n  dup4\n    /* \"#utility.yul\":7621:7658   */\n  add\n    /* \"#utility.yul\":7608:7619   */\n  dup3\n    /* \"#utility.yul\":7579:7659   */\n  tag_72\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":7238:7669   */\n  pop\n  pop\n    /* \"#utility.yul\":7223:7669   */\ntag_170:\n    /* \"#utility.yul\":7133:7676   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7682:7799   */\ntag_74:\n    /* \"#utility.yul\":7736:7744   */\n  0x00\n    /* \"#utility.yul\":7786:7791   */\n  dup3\n    /* \"#utility.yul\":7780:7784   */\n  dup3\n    /* \"#utility.yul\":7776:7792   */\n  shr\n    /* \"#utility.yul\":7755:7792   */\n  swap1\n  pop\n    /* \"#utility.yul\":7682:7799   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7805:7974   */\ntag_75:\n    /* \"#utility.yul\":7849:7855   */\n  0x00\n    /* \"#utility.yul\":7882:7933   */\n  tag_178\n    /* \"#utility.yul\":7930:7931   */\n  0x00\n    /* \"#utility.yul\":7926:7932   */\n  not\n    /* \"#utility.yul\":7918:7923   */\n  dup5\n    /* \"#utility.yul\":7915:7916   */\n  0x08\n    /* \"#utility.yul\":7911:7924   */\n  mul\n    /* \"#utility.yul\":7882:7933   */\n  tag_74\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":7878:7934   */\n  not\n    /* \"#utility.yul\":7963:7967   */\n  dup1\n    /* \"#utility.yul\":7957:7961   */\n  dup4\n    /* \"#utility.yul\":7953:7968   */\n  and\n    /* \"#utility.yul\":7943:7968   */\n  swap2\n  pop\n    /* \"#utility.yul\":7856:7974   */\n  pop\n    /* \"#utility.yul\":7805:7974   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7979:8274   */\ntag_76:\n    /* \"#utility.yul\":8055:8059   */\n  0x00\n    /* \"#utility.yul\":8201:8230   */\n  tag_180\n    /* \"#utility.yul\":8226:8229   */\n  dup4\n    /* \"#utility.yul\":8220:8224   */\n  dup4\n    /* \"#utility.yul\":8201:8230   */\n  tag_75\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8193:8230   */\n  swap2\n  pop\n    /* \"#utility.yul\":8263:8266   */\n  dup3\n    /* \"#utility.yul\":8260:8261   */\n  0x02\n    /* \"#utility.yul\":8256:8267   */\n  mul\n    /* \"#utility.yul\":8250:8254   */\n  dup3\n    /* \"#utility.yul\":8247:8268   */\n  or\n    /* \"#utility.yul\":8239:8268   */\n  swap1\n  pop\n    /* \"#utility.yul\":7979:8274   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8279:9674   */\ntag_9:\n    /* \"#utility.yul\":8396:8433   */\n  tag_182\n    /* \"#utility.yul\":8429:8432   */\n  dup3\n    /* \"#utility.yul\":8396:8433   */\n  tag_59\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":8498:8516   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8490:8496   */\n  dup2\n    /* \"#utility.yul\":8487:8517   */\n  gt\n    /* \"#utility.yul\":8484:8540   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":8520:8538   */\n  tag_184\n  tag_49\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":8484:8540   */\ntag_183:\n    /* \"#utility.yul\":8564:8602   */\n  tag_185\n    /* \"#utility.yul\":8596:8600   */\n  dup3\n    /* \"#utility.yul\":8590:8601   */\n  sload\n    /* \"#utility.yul\":8564:8602   */\n  tag_61\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":8649:8716   */\n  tag_186\n    /* \"#utility.yul\":8709:8715   */\n  dup3\n    /* \"#utility.yul\":8701:8707   */\n  dup3\n    /* \"#utility.yul\":8695:8699   */\n  dup6\n    /* \"#utility.yul\":8649:8716   */\n  tag_73\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":8743:8744   */\n  0x00\n    /* \"#utility.yul\":8767:8771   */\n  0x20\n    /* \"#utility.yul\":8754:8771   */\n  swap1\n  pop\n    /* \"#utility.yul\":8799:8801   */\n  0x1f\n    /* \"#utility.yul\":8791:8797   */\n  dup4\n    /* \"#utility.yul\":8788:8802   */\n  gt\n    /* \"#utility.yul\":8816:8817   */\n  0x01\n    /* \"#utility.yul\":8811:9429   */\n  dup2\n  eq\n  tag_188\n  jumpi\n    /* \"#utility.yul\":9473:9474   */\n  0x00\n    /* \"#utility.yul\":9490:9496   */\n  dup5\n    /* \"#utility.yul\":9487:9564   */\n  iszero\n  tag_189\n  jumpi\n    /* \"#utility.yul\":9539:9548   */\n  dup3\n    /* \"#utility.yul\":9534:9537   */\n  dup8\n    /* \"#utility.yul\":9530:9549   */\n  add\n    /* \"#utility.yul\":9524:9550   */\n  mload\n    /* \"#utility.yul\":9515:9550   */\n  swap1\n  pop\n    /* \"#utility.yul\":9487:9564   */\ntag_189:\n    /* \"#utility.yul\":9590:9657   */\n  tag_190\n    /* \"#utility.yul\":9650:9656   */\n  dup6\n    /* \"#utility.yul\":9643:9648   */\n  dup3\n    /* \"#utility.yul\":9590:9657   */\n  tag_76\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9584:9588   */\n  dup7\n    /* \"#utility.yul\":9577:9658   */\n  sstore\n    /* \"#utility.yul\":9446:9668   */\n  pop\n    /* \"#utility.yul\":8781:9668   */\n  jump(tag_187)\n    /* \"#utility.yul\":8811:9429   */\ntag_188:\n    /* \"#utility.yul\":8863:8867   */\n  0x1f\n    /* \"#utility.yul\":8859:8868   */\n  not\n    /* \"#utility.yul\":8851:8857   */\n  dup5\n    /* \"#utility.yul\":8847:8869   */\n  and\n    /* \"#utility.yul\":8897:8934   */\n  tag_191\n    /* \"#utility.yul\":8929:8933   */\n  dup7\n    /* \"#utility.yul\":8897:8934   */\n  tag_62\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":8956:8957   */\n  0x00\n    /* \"#utility.yul\":8970:9178   */\ntag_192:\n    /* \"#utility.yul\":8984:8991   */\n  dup3\n    /* \"#utility.yul\":8981:8982   */\n  dup2\n    /* \"#utility.yul\":8978:8992   */\n  lt\n    /* \"#utility.yul\":8970:9178   */\n  iszero\n  tag_194\n  jumpi\n    /* \"#utility.yul\":9063:9072   */\n  dup5\n    /* \"#utility.yul\":9058:9061   */\n  dup10\n    /* \"#utility.yul\":9054:9073   */\n  add\n    /* \"#utility.yul\":9048:9074   */\n  mload\n    /* \"#utility.yul\":9040:9046   */\n  dup3\n    /* \"#utility.yul\":9033:9075   */\n  sstore\n    /* \"#utility.yul\":9114:9115   */\n  0x01\n    /* \"#utility.yul\":9106:9112   */\n  dup3\n    /* \"#utility.yul\":9102:9116   */\n  add\n    /* \"#utility.yul\":9092:9116   */\n  swap2\n  pop\n    /* \"#utility.yul\":9161:9163   */\n  0x20\n    /* \"#utility.yul\":9150:9159   */\n  dup6\n    /* \"#utility.yul\":9146:9164   */\n  add\n    /* \"#utility.yul\":9133:9164   */\n  swap5\n  pop\n    /* \"#utility.yul\":9007:9011   */\n  0x20\n    /* \"#utility.yul\":9004:9005   */\n  dup2\n    /* \"#utility.yul\":9000:9012   */\n  add\n    /* \"#utility.yul\":8995:9012   */\n  swap1\n  pop\n    /* \"#utility.yul\":8970:9178   */\n  jump(tag_192)\ntag_194:\n    /* \"#utility.yul\":9206:9212   */\n  dup7\n    /* \"#utility.yul\":9197:9204   */\n  dup4\n    /* \"#utility.yul\":9194:9213   */\n  lt\n    /* \"#utility.yul\":9191:9370   */\n  iszero\n  tag_195\n  jumpi\n    /* \"#utility.yul\":9264:9273   */\n  dup5\n    /* \"#utility.yul\":9259:9262   */\n  dup10\n    /* \"#utility.yul\":9255:9274   */\n  add\n    /* \"#utility.yul\":9249:9275   */\n  mload\n    /* \"#utility.yul\":9307:9355   */\n  tag_196\n    /* \"#utility.yul\":9349:9353   */\n  0x1f\n    /* \"#utility.yul\":9341:9347   */\n  dup10\n    /* \"#utility.yul\":9337:9354   */\n  and\n    /* \"#utility.yul\":9326:9335   */\n  dup3\n    /* \"#utility.yul\":9307:9355   */\n  tag_75\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":9299:9305   */\n  dup4\n    /* \"#utility.yul\":9292:9356   */\n  sstore\n    /* \"#utility.yul\":9214:9370   */\n  pop\n    /* \"#utility.yul\":9191:9370   */\ntag_195:\n    /* \"#utility.yul\":9416:9417   */\n  0x01\n    /* \"#utility.yul\":9412:9413   */\n  0x02\n    /* \"#utility.yul\":9404:9410   */\n  dup9\n    /* \"#utility.yul\":9400:9414   */\n  mul\n    /* \"#utility.yul\":9396:9418   */\n  add\n    /* \"#utility.yul\":9390:9394   */\n  dup9\n    /* \"#utility.yul\":9383:9419   */\n  sstore\n    /* \"#utility.yul\":8818:9429   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8781:9668   */\ntag_187:\n  pop\n    /* \"#utility.yul\":8371:9674   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8279:9674   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9680:9798   */\ntag_77:\n    /* \"#utility.yul\":9767:9791   */\n  tag_198\n    /* \"#utility.yul\":9785:9790   */\n  dup2\n    /* \"#utility.yul\":9767:9791   */\n  tag_43\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":9762:9765   */\n  dup3\n    /* \"#utility.yul\":9755:9792   */\n  mstore\n    /* \"#utility.yul\":9680:9798   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9804:10026   */\ntag_14:\n    /* \"#utility.yul\":9897:9901   */\n  0x00\n    /* \"#utility.yul\":9935:9937   */\n  0x20\n    /* \"#utility.yul\":9924:9933   */\n  dup3\n    /* \"#utility.yul\":9920:9938   */\n  add\n    /* \"#utility.yul\":9912:9938   */\n  swap1\n  pop\n    /* \"#utility.yul\":9948:10019   */\n  tag_200\n    /* \"#utility.yul\":10016:10017   */\n  0x00\n    /* \"#utility.yul\":10005:10014   */\n  dup4\n    /* \"#utility.yul\":10001:10018   */\n  add\n    /* \"#utility.yul\":9992:9998   */\n  dup5\n    /* \"#utility.yul\":9948:10019   */\n  tag_77\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":9804:10026   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10032:10212   */\ntag_78:\n    /* \"#utility.yul\":10080:10157   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10077:10078   */\n  0x00\n    /* \"#utility.yul\":10070:10158   */\n  mstore\n    /* \"#utility.yul\":10177:10181   */\n  0x11\n    /* \"#utility.yul\":10174:10175   */\n  0x04\n    /* \"#utility.yul\":10167:10182   */\n  mstore\n    /* \"#utility.yul\":10201:10205   */\n  0x24\n    /* \"#utility.yul\":10198:10199   */\n  0x00\n    /* \"#utility.yul\":10191:10206   */\n  revert\n    /* \"#utility.yul\":10218:10409   */\ntag_30:\n    /* \"#utility.yul\":10258:10261   */\n  0x00\n    /* \"#utility.yul\":10277:10297   */\n  tag_203\n    /* \"#utility.yul\":10295:10296   */\n  dup3\n    /* \"#utility.yul\":10277:10297   */\n  tag_56\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":10272:10297   */\n  swap2\n  pop\n    /* \"#utility.yul\":10311:10331   */\n  tag_204\n    /* \"#utility.yul\":10329:10330   */\n  dup4\n    /* \"#utility.yul\":10311:10331   */\n  tag_56\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":10306:10331   */\n  swap3\n  pop\n    /* \"#utility.yul\":10354:10355   */\n  dup3\n    /* \"#utility.yul\":10351:10352   */\n  dup3\n    /* \"#utility.yul\":10347:10356   */\n  add\n    /* \"#utility.yul\":10340:10356   */\n  swap1\n  pop\n    /* \"#utility.yul\":10375:10378   */\n  dup1\n    /* \"#utility.yul\":10372:10373   */\n  dup3\n    /* \"#utility.yul\":10369:10379   */\n  gt\n    /* \"#utility.yul\":10366:10402   */\n  iszero\n  tag_205\n  jumpi\n    /* \"#utility.yul\":10382:10400   */\n  tag_206\n  tag_78\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":10366:10402   */\ntag_205:\n    /* \"#utility.yul\":10218:10409   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10415:10533   */\ntag_79:\n    /* \"#utility.yul\":10502:10526   */\n  tag_208\n    /* \"#utility.yul\":10520:10525   */\n  dup2\n    /* \"#utility.yul\":10502:10526   */\n  tag_56\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":10497:10500   */\n  dup3\n    /* \"#utility.yul\":10490:10527   */\n  mstore\n    /* \"#utility.yul\":10415:10533   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10539:10981   */\ntag_34:\n    /* \"#utility.yul\":10688:10692   */\n  0x00\n    /* \"#utility.yul\":10726:10728   */\n  0x60\n    /* \"#utility.yul\":10715:10724   */\n  dup3\n    /* \"#utility.yul\":10711:10729   */\n  add\n    /* \"#utility.yul\":10703:10729   */\n  swap1\n  pop\n    /* \"#utility.yul\":10739:10810   */\n  tag_210\n    /* \"#utility.yul\":10807:10808   */\n  0x00\n    /* \"#utility.yul\":10796:10805   */\n  dup4\n    /* \"#utility.yul\":10792:10809   */\n  add\n    /* \"#utility.yul\":10783:10789   */\n  dup7\n    /* \"#utility.yul\":10739:10810   */\n  tag_77\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":10820:10892   */\n  tag_211\n    /* \"#utility.yul\":10888:10890   */\n  0x20\n    /* \"#utility.yul\":10877:10886   */\n  dup4\n    /* \"#utility.yul\":10873:10891   */\n  add\n    /* \"#utility.yul\":10864:10870   */\n  dup6\n    /* \"#utility.yul\":10820:10892   */\n  tag_79\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":10902:10974   */\n  tag_212\n    /* \"#utility.yul\":10970:10972   */\n  0x40\n    /* \"#utility.yul\":10959:10968   */\n  dup4\n    /* \"#utility.yul\":10955:10973   */\n  add\n    /* \"#utility.yul\":10946:10952   */\n  dup5\n    /* \"#utility.yul\":10902:10974   */\n  tag_79\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":10539:10981   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10987:11209   */\ntag_38:\n    /* \"#utility.yul\":11080:11084   */\n  0x00\n    /* \"#utility.yul\":11118:11120   */\n  0x20\n    /* \"#utility.yul\":11107:11116   */\n  dup3\n    /* \"#utility.yul\":11103:11121   */\n  add\n    /* \"#utility.yul\":11095:11121   */\n  swap1\n  pop\n    /* \"#utility.yul\":11131:11202   */\n  tag_214\n    /* \"#utility.yul\":11199:11200   */\n  0x00\n    /* \"#utility.yul\":11188:11197   */\n  dup4\n    /* \"#utility.yul\":11184:11201   */\n  add\n    /* \"#utility.yul\":11175:11181   */\n  dup5\n    /* \"#utility.yul\":11131:11202   */\n  tag_79\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":10987:11209   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"token-factory/Token.sol\":600:1353  contract Kokoro is ERC20, Ownable {... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"token-factory/Token.sol\":600:1353  contract Kokoro is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc250bed5\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x7d2d4fec\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x23b872dd\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3af57cdb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42685d74\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1d0806ae\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token-factory/Token.sol\":1007:1044  uint256 public initialPrice = 1 ether */\n    tag_6:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token-factory/Token.sol\":877:897  Kokoro public kokoro */\n    tag_9:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token-factory/Token.sol\":933:963  uint256 public totalSacrificed */\n    tag_10:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      stop\n        /* \"token-factory/Token.sol\":1087:1124  uint256 public bondingCoefficient = 2 */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token-factory/Token.sol\":1160:1191  uint256 public nftFraction = 10 */\n    tag_17:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_90\n      jump\t// in\n    tag_91:\n      dup1\n      iszero\n      tag_92\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_93\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_92)\n    tag_93:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_94:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_94\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"token-factory/Token.sol\":1007:1044  uint256 public initialPrice = 1 ether */\n    tag_38:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"token-factory/Token.sol\":877:897  Kokoro public kokoro */\n    tag_50:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"token-factory/Token.sol\":933:963  uint256 public totalSacrificed */\n    tag_54:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"token-factory/Token.sol\":1087:1124  uint256 public bondingCoefficient = 2 */\n    tag_64:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_90\n      jump\t// in\n    tag_117:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_118\n      swap1\n      tag_90\n      jump\t// in\n    tag_118:\n      dup1\n      iszero\n      tag_119\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_120\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_119)\n    tag_120:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_121:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_121\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"token-factory/Token.sol\":1160:1191  uint256 public nftFraction = 10 */\n    tag_78:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_163\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_166\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_168)\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_169\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_172)\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_173\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_174:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_175:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:535   */\n    tag_176:\n        /* \"#utility.yul\":369:370   */\n      0x00\n        /* \"#utility.yul\":379:492   */\n    tag_206:\n        /* \"#utility.yul\":393:399   */\n      dup4\n        /* \"#utility.yul\":390:391   */\n      dup2\n        /* \"#utility.yul\":387:400   */\n      lt\n        /* \"#utility.yul\":379:492   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":478:479   */\n      dup1\n        /* \"#utility.yul\":473:476   */\n      dup3\n        /* \"#utility.yul\":469:480   */\n      add\n        /* \"#utility.yul\":463:481   */\n      mload\n        /* \"#utility.yul\":459:460   */\n      dup2\n        /* \"#utility.yul\":454:457   */\n      dup5\n        /* \"#utility.yul\":450:461   */\n      add\n        /* \"#utility.yul\":443:482   */\n      mstore\n        /* \"#utility.yul\":415:417   */\n      0x20\n        /* \"#utility.yul\":412:413   */\n      dup2\n        /* \"#utility.yul\":408:418   */\n      add\n        /* \"#utility.yul\":403:418   */\n      swap1\n      pop\n        /* \"#utility.yul\":379:492   */\n      jump(tag_206)\n    tag_208:\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":517:523   */\n      dup5\n        /* \"#utility.yul\":512:515   */\n      dup5\n        /* \"#utility.yul\":508:524   */\n      add\n        /* \"#utility.yul\":501:528   */\n      mstore\n        /* \"#utility.yul\":349:535   */\n      pop\n        /* \"#utility.yul\":287:535   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":541:643   */\n    tag_177:\n        /* \"#utility.yul\":582:588   */\n      0x00\n        /* \"#utility.yul\":633:635   */\n      0x1f\n        /* \"#utility.yul\":629:636   */\n      not\n        /* \"#utility.yul\":624:626   */\n      0x1f\n        /* \"#utility.yul\":617:622   */\n      dup4\n        /* \"#utility.yul\":613:627   */\n      add\n        /* \"#utility.yul\":609:637   */\n      and\n        /* \"#utility.yul\":599:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":541:643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":649:1026   */\n    tag_178:\n        /* \"#utility.yul\":737:740   */\n      0x00\n        /* \"#utility.yul\":765:804   */\n      tag_211\n        /* \"#utility.yul\":798:803   */\n      dup3\n        /* \"#utility.yul\":765:804   */\n      tag_174\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":820:891   */\n      tag_212\n        /* \"#utility.yul\":884:890   */\n      dup2\n        /* \"#utility.yul\":879:882   */\n      dup6\n        /* \"#utility.yul\":820:891   */\n      tag_175\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":813:891   */\n      swap4\n      pop\n        /* \"#utility.yul\":900:965   */\n      tag_213\n        /* \"#utility.yul\":958:964   */\n      dup2\n        /* \"#utility.yul\":953:956   */\n      dup6\n        /* \"#utility.yul\":946:950   */\n      0x20\n        /* \"#utility.yul\":939:944   */\n      dup7\n        /* \"#utility.yul\":935:951   */\n      add\n        /* \"#utility.yul\":900:965   */\n      tag_176\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":990:1019   */\n      tag_214\n        /* \"#utility.yul\":1012:1018   */\n      dup2\n        /* \"#utility.yul\":990:1019   */\n      tag_177\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":985:988   */\n      dup5\n        /* \"#utility.yul\":981:1020   */\n      add\n        /* \"#utility.yul\":974:1020   */\n      swap2\n      pop\n        /* \"#utility.yul\":741:1026   */\n      pop\n        /* \"#utility.yul\":649:1026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1032:1345   */\n    tag_26:\n        /* \"#utility.yul\":1145:1149   */\n      0x00\n        /* \"#utility.yul\":1183:1185   */\n      0x20\n        /* \"#utility.yul\":1172:1181   */\n      dup3\n        /* \"#utility.yul\":1168:1186   */\n      add\n        /* \"#utility.yul\":1160:1186   */\n      swap1\n      pop\n        /* \"#utility.yul\":1232:1241   */\n      dup2\n        /* \"#utility.yul\":1226:1230   */\n      dup2\n        /* \"#utility.yul\":1222:1242   */\n      sub\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1207:1216   */\n      dup4\n        /* \"#utility.yul\":1203:1220   */\n      add\n        /* \"#utility.yul\":1196:1243   */\n      mstore\n        /* \"#utility.yul\":1260:1338   */\n      tag_216\n        /* \"#utility.yul\":1333:1337   */\n      dup2\n        /* \"#utility.yul\":1324:1330   */\n      dup5\n        /* \"#utility.yul\":1260:1338   */\n      tag_178\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":1252:1338   */\n      swap1\n      pop\n        /* \"#utility.yul\":1032:1345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1432:1549   */\n    tag_180:\n        /* \"#utility.yul\":1541:1542   */\n      0x00\n        /* \"#utility.yul\":1538:1539   */\n      dup1\n        /* \"#utility.yul\":1531:1543   */\n      revert\n        /* \"#utility.yul\":1678:1804   */\n    tag_182:\n        /* \"#utility.yul\":1715:1722   */\n      0x00\n        /* \"#utility.yul\":1755:1797   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1748:1753   */\n      dup3\n        /* \"#utility.yul\":1744:1798   */\n      and\n        /* \"#utility.yul\":1733:1798   */\n      swap1\n      pop\n        /* \"#utility.yul\":1678:1804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1810:1906   */\n    tag_183:\n        /* \"#utility.yul\":1847:1854   */\n      0x00\n        /* \"#utility.yul\":1876:1900   */\n      tag_222\n        /* \"#utility.yul\":1894:1899   */\n      dup3\n        /* \"#utility.yul\":1876:1900   */\n      tag_182\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":1865:1900   */\n      swap1\n      pop\n        /* \"#utility.yul\":1810:1906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1912:2034   */\n    tag_184:\n        /* \"#utility.yul\":1985:2009   */\n      tag_224\n        /* \"#utility.yul\":2003:2008   */\n      dup2\n        /* \"#utility.yul\":1985:2009   */\n      tag_183\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":1978:1983   */\n      dup2\n        /* \"#utility.yul\":1975:2010   */\n      eq\n        /* \"#utility.yul\":1965:2028   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":2024:2025   */\n      0x00\n        /* \"#utility.yul\":2021:2022   */\n      dup1\n        /* \"#utility.yul\":2014:2026   */\n      revert\n        /* \"#utility.yul\":1965:2028   */\n    tag_225:\n        /* \"#utility.yul\":1912:2034   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2040:2179   */\n    tag_185:\n        /* \"#utility.yul\":2086:2091   */\n      0x00\n        /* \"#utility.yul\":2124:2130   */\n      dup2\n        /* \"#utility.yul\":2111:2131   */\n      calldataload\n        /* \"#utility.yul\":2102:2131   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2173   */\n      tag_227\n        /* \"#utility.yul\":2167:2172   */\n      dup2\n        /* \"#utility.yul\":2140:2173   */\n      tag_184\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":2040:2179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2185:2262   */\n    tag_186:\n        /* \"#utility.yul\":2222:2229   */\n      0x00\n        /* \"#utility.yul\":2251:2256   */\n      dup2\n        /* \"#utility.yul\":2240:2256   */\n      swap1\n      pop\n        /* \"#utility.yul\":2185:2262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2268:2390   */\n    tag_187:\n        /* \"#utility.yul\":2341:2365   */\n      tag_230\n        /* \"#utility.yul\":2359:2364   */\n      dup2\n        /* \"#utility.yul\":2341:2365   */\n      tag_186\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":2334:2339   */\n      dup2\n        /* \"#utility.yul\":2331:2366   */\n      eq\n        /* \"#utility.yul\":2321:2384   */\n      tag_231\n      jumpi\n        /* \"#utility.yul\":2380:2381   */\n      0x00\n        /* \"#utility.yul\":2377:2378   */\n      dup1\n        /* \"#utility.yul\":2370:2382   */\n      revert\n        /* \"#utility.yul\":2321:2384   */\n    tag_231:\n        /* \"#utility.yul\":2268:2390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2396:2535   */\n    tag_188:\n        /* \"#utility.yul\":2442:2447   */\n      0x00\n        /* \"#utility.yul\":2480:2486   */\n      dup2\n        /* \"#utility.yul\":2467:2487   */\n      calldataload\n        /* \"#utility.yul\":2458:2487   */\n      swap1\n      pop\n        /* \"#utility.yul\":2496:2529   */\n      tag_233\n        /* \"#utility.yul\":2523:2528   */\n      dup2\n        /* \"#utility.yul\":2496:2529   */\n      tag_187\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":2396:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:3015   */\n    tag_29:\n        /* \"#utility.yul\":2609:2615   */\n      0x00\n        /* \"#utility.yul\":2617:2623   */\n      dup1\n        /* \"#utility.yul\":2666:2668   */\n      0x40\n        /* \"#utility.yul\":2654:2663   */\n      dup4\n        /* \"#utility.yul\":2645:2652   */\n      dup6\n        /* \"#utility.yul\":2641:2664   */\n      sub\n        /* \"#utility.yul\":2637:2669   */\n      slt\n        /* \"#utility.yul\":2634:2753   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":2672:2751   */\n      tag_236\n      tag_180\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":2634:2753   */\n    tag_235:\n        /* \"#utility.yul\":2792:2793   */\n      0x00\n        /* \"#utility.yul\":2817:2870   */\n      tag_237\n        /* \"#utility.yul\":2862:2869   */\n      dup6\n        /* \"#utility.yul\":2853:2859   */\n      dup3\n        /* \"#utility.yul\":2842:2851   */\n      dup7\n        /* \"#utility.yul\":2838:2860   */\n      add\n        /* \"#utility.yul\":2817:2870   */\n      tag_185\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":2807:2870   */\n      swap3\n      pop\n        /* \"#utility.yul\":2763:2880   */\n      pop\n        /* \"#utility.yul\":2919:2921   */\n      0x20\n        /* \"#utility.yul\":2945:2998   */\n      tag_238\n        /* \"#utility.yul\":2990:2997   */\n      dup6\n        /* \"#utility.yul\":2981:2987   */\n      dup3\n        /* \"#utility.yul\":2970:2979   */\n      dup7\n        /* \"#utility.yul\":2966:2988   */\n      add\n        /* \"#utility.yul\":2945:2998   */\n      tag_188\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":2935:2998   */\n      swap2\n      pop\n        /* \"#utility.yul\":2890:3008   */\n      pop\n        /* \"#utility.yul\":2541:3015   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3021:3111   */\n    tag_189:\n        /* \"#utility.yul\":3055:3062   */\n      0x00\n        /* \"#utility.yul\":3098:3103   */\n      dup2\n        /* \"#utility.yul\":3091:3104   */\n      iszero\n        /* \"#utility.yul\":3084:3105   */\n      iszero\n        /* \"#utility.yul\":3073:3105   */\n      swap1\n      pop\n        /* \"#utility.yul\":3021:3111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3117:3226   */\n    tag_190:\n        /* \"#utility.yul\":3198:3219   */\n      tag_241\n        /* \"#utility.yul\":3213:3218   */\n      dup2\n        /* \"#utility.yul\":3198:3219   */\n      tag_189\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":3193:3196   */\n      dup3\n        /* \"#utility.yul\":3186:3220   */\n      mstore\n        /* \"#utility.yul\":3117:3226   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3232:3442   */\n    tag_32:\n        /* \"#utility.yul\":3319:3323   */\n      0x00\n        /* \"#utility.yul\":3357:3359   */\n      0x20\n        /* \"#utility.yul\":3346:3355   */\n      dup3\n        /* \"#utility.yul\":3342:3360   */\n      add\n        /* \"#utility.yul\":3334:3360   */\n      swap1\n      pop\n        /* \"#utility.yul\":3370:3435   */\n      tag_243\n        /* \"#utility.yul\":3432:3433   */\n      0x00\n        /* \"#utility.yul\":3421:3430   */\n      dup4\n        /* \"#utility.yul\":3417:3434   */\n      add\n        /* \"#utility.yul\":3408:3414   */\n      dup5\n        /* \"#utility.yul\":3370:3435   */\n      tag_190\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":3232:3442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3448:3566   */\n    tag_191:\n        /* \"#utility.yul\":3535:3559   */\n      tag_245\n        /* \"#utility.yul\":3553:3558   */\n      dup2\n        /* \"#utility.yul\":3535:3559   */\n      tag_186\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":3530:3533   */\n      dup3\n        /* \"#utility.yul\":3523:3560   */\n      mstore\n        /* \"#utility.yul\":3448:3566   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3572:3794   */\n    tag_36:\n        /* \"#utility.yul\":3665:3669   */\n      0x00\n        /* \"#utility.yul\":3703:3705   */\n      0x20\n        /* \"#utility.yul\":3692:3701   */\n      dup3\n        /* \"#utility.yul\":3688:3706   */\n      add\n        /* \"#utility.yul\":3680:3706   */\n      swap1\n      pop\n        /* \"#utility.yul\":3716:3787   */\n      tag_247\n        /* \"#utility.yul\":3784:3785   */\n      0x00\n        /* \"#utility.yul\":3773:3782   */\n      dup4\n        /* \"#utility.yul\":3769:3786   */\n      add\n        /* \"#utility.yul\":3760:3766   */\n      dup5\n        /* \"#utility.yul\":3716:3787   */\n      tag_191\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":3572:3794   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3800:4419   */\n    tag_42:\n        /* \"#utility.yul\":3877:3883   */\n      0x00\n        /* \"#utility.yul\":3885:3891   */\n      dup1\n        /* \"#utility.yul\":3893:3899   */\n      0x00\n        /* \"#utility.yul\":3942:3944   */\n      0x60\n        /* \"#utility.yul\":3930:3939   */\n      dup5\n        /* \"#utility.yul\":3921:3928   */\n      dup7\n        /* \"#utility.yul\":3917:3940   */\n      sub\n        /* \"#utility.yul\":3913:3945   */\n      slt\n        /* \"#utility.yul\":3910:4029   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":3948:4027   */\n      tag_250\n      tag_180\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":3910:4029   */\n    tag_249:\n        /* \"#utility.yul\":4068:4069   */\n      0x00\n        /* \"#utility.yul\":4093:4146   */\n      tag_251\n        /* \"#utility.yul\":4138:4145   */\n      dup7\n        /* \"#utility.yul\":4129:4135   */\n      dup3\n        /* \"#utility.yul\":4118:4127   */\n      dup8\n        /* \"#utility.yul\":4114:4136   */\n      add\n        /* \"#utility.yul\":4093:4146   */\n      tag_185\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":4083:4146   */\n      swap4\n      pop\n        /* \"#utility.yul\":4039:4156   */\n      pop\n        /* \"#utility.yul\":4195:4197   */\n      0x20\n        /* \"#utility.yul\":4221:4274   */\n      tag_252\n        /* \"#utility.yul\":4266:4273   */\n      dup7\n        /* \"#utility.yul\":4257:4263   */\n      dup3\n        /* \"#utility.yul\":4246:4255   */\n      dup8\n        /* \"#utility.yul\":4242:4264   */\n      add\n        /* \"#utility.yul\":4221:4274   */\n      tag_185\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":4211:4274   */\n      swap3\n      pop\n        /* \"#utility.yul\":4166:4284   */\n      pop\n        /* \"#utility.yul\":4323:4325   */\n      0x40\n        /* \"#utility.yul\":4349:4402   */\n      tag_253\n        /* \"#utility.yul\":4394:4401   */\n      dup7\n        /* \"#utility.yul\":4385:4391   */\n      dup3\n        /* \"#utility.yul\":4374:4383   */\n      dup8\n        /* \"#utility.yul\":4370:4392   */\n      add\n        /* \"#utility.yul\":4349:4402   */\n      tag_188\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":4339:4402   */\n      swap2\n      pop\n        /* \"#utility.yul\":4294:4412   */\n      pop\n        /* \"#utility.yul\":3800:4419   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4425:4511   */\n    tag_192:\n        /* \"#utility.yul\":4460:4467   */\n      0x00\n        /* \"#utility.yul\":4500:4504   */\n      0xff\n        /* \"#utility.yul\":4493:4498   */\n      dup3\n        /* \"#utility.yul\":4489:4505   */\n      and\n        /* \"#utility.yul\":4478:4505   */\n      swap1\n      pop\n        /* \"#utility.yul\":4425:4511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4517:4629   */\n    tag_193:\n        /* \"#utility.yul\":4600:4622   */\n      tag_256\n        /* \"#utility.yul\":4616:4621   */\n      dup2\n        /* \"#utility.yul\":4600:4622   */\n      tag_192\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":4595:4598   */\n      dup3\n        /* \"#utility.yul\":4588:4623   */\n      mstore\n        /* \"#utility.yul\":4517:4629   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4635:4849   */\n    tag_48:\n        /* \"#utility.yul\":4724:4728   */\n      0x00\n        /* \"#utility.yul\":4762:4764   */\n      0x20\n        /* \"#utility.yul\":4751:4760   */\n      dup3\n        /* \"#utility.yul\":4747:4765   */\n      add\n        /* \"#utility.yul\":4739:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4775:4842   */\n      tag_258\n        /* \"#utility.yul\":4839:4840   */\n      0x00\n        /* \"#utility.yul\":4828:4837   */\n      dup4\n        /* \"#utility.yul\":4824:4841   */\n      add\n        /* \"#utility.yul\":4815:4821   */\n      dup5\n        /* \"#utility.yul\":4775:4842   */\n      tag_193\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":4635:4849   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4855:4915   */\n    tag_194:\n        /* \"#utility.yul\":4883:4886   */\n      0x00\n        /* \"#utility.yul\":4904:4909   */\n      dup2\n        /* \"#utility.yul\":4897:4909   */\n      swap1\n      pop\n        /* \"#utility.yul\":4855:4915   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4921:5063   */\n    tag_195:\n        /* \"#utility.yul\":4971:4980   */\n      0x00\n        /* \"#utility.yul\":5004:5057   */\n      tag_261\n        /* \"#utility.yul\":5022:5056   */\n      tag_262\n        /* \"#utility.yul\":5031:5055   */\n      tag_263\n        /* \"#utility.yul\":5049:5054   */\n      dup5\n        /* \"#utility.yul\":5031:5055   */\n      tag_182\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":5022:5056   */\n      tag_194\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":5004:5057   */\n      tag_182\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":4991:5057   */\n      swap1\n      pop\n        /* \"#utility.yul\":4921:5063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5069:5195   */\n    tag_196:\n        /* \"#utility.yul\":5119:5128   */\n      0x00\n        /* \"#utility.yul\":5152:5189   */\n      tag_265\n        /* \"#utility.yul\":5183:5188   */\n      dup3\n        /* \"#utility.yul\":5152:5189   */\n      tag_195\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":5139:5189   */\n      swap1\n      pop\n        /* \"#utility.yul\":5069:5195   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5201:5342   */\n    tag_197:\n        /* \"#utility.yul\":5266:5275   */\n      0x00\n        /* \"#utility.yul\":5299:5336   */\n      tag_267\n        /* \"#utility.yul\":5330:5335   */\n      dup3\n        /* \"#utility.yul\":5299:5336   */\n      tag_196\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":5286:5336   */\n      swap1\n      pop\n        /* \"#utility.yul\":5201:5342   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5348:5509   */\n    tag_198:\n        /* \"#utility.yul\":5450:5502   */\n      tag_269\n        /* \"#utility.yul\":5496:5501   */\n      dup2\n        /* \"#utility.yul\":5450:5502   */\n      tag_197\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":5445:5448   */\n      dup3\n        /* \"#utility.yul\":5438:5503   */\n      mstore\n        /* \"#utility.yul\":5348:5509   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5515:5767   */\n    tag_52:\n        /* \"#utility.yul\":5623:5627   */\n      0x00\n        /* \"#utility.yul\":5661:5663   */\n      0x20\n        /* \"#utility.yul\":5650:5659   */\n      dup3\n        /* \"#utility.yul\":5646:5664   */\n      add\n        /* \"#utility.yul\":5638:5664   */\n      swap1\n      pop\n        /* \"#utility.yul\":5674:5760   */\n      tag_271\n        /* \"#utility.yul\":5757:5758   */\n      0x00\n        /* \"#utility.yul\":5746:5755   */\n      dup4\n        /* \"#utility.yul\":5742:5759   */\n      add\n        /* \"#utility.yul\":5733:5739   */\n      dup5\n        /* \"#utility.yul\":5674:5760   */\n      tag_198\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":5515:5767   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5773:6102   */\n    tag_58:\n        /* \"#utility.yul\":5832:5838   */\n      0x00\n        /* \"#utility.yul\":5881:5883   */\n      0x20\n        /* \"#utility.yul\":5869:5878   */\n      dup3\n        /* \"#utility.yul\":5860:5867   */\n      dup5\n        /* \"#utility.yul\":5856:5879   */\n      sub\n        /* \"#utility.yul\":5852:5884   */\n      slt\n        /* \"#utility.yul\":5849:5968   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":5887:5966   */\n      tag_274\n      tag_180\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":5849:5968   */\n    tag_273:\n        /* \"#utility.yul\":6007:6008   */\n      0x00\n        /* \"#utility.yul\":6032:6085   */\n      tag_275\n        /* \"#utility.yul\":6077:6084   */\n      dup5\n        /* \"#utility.yul\":6068:6074   */\n      dup3\n        /* \"#utility.yul\":6057:6066   */\n      dup6\n        /* \"#utility.yul\":6053:6075   */\n      add\n        /* \"#utility.yul\":6032:6085   */\n      tag_185\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":6022:6085   */\n      swap2\n      pop\n        /* \"#utility.yul\":5978:6095   */\n      pop\n        /* \"#utility.yul\":5773:6102   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6108:6226   */\n    tag_199:\n        /* \"#utility.yul\":6195:6219   */\n      tag_277\n        /* \"#utility.yul\":6213:6218   */\n      dup2\n        /* \"#utility.yul\":6195:6219   */\n      tag_183\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":6190:6193   */\n      dup3\n        /* \"#utility.yul\":6183:6220   */\n      mstore\n        /* \"#utility.yul\":6108:6226   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6232:6454   */\n    tag_69:\n        /* \"#utility.yul\":6325:6329   */\n      0x00\n        /* \"#utility.yul\":6363:6365   */\n      0x20\n        /* \"#utility.yul\":6352:6361   */\n      dup3\n        /* \"#utility.yul\":6348:6366   */\n      add\n        /* \"#utility.yul\":6340:6366   */\n      swap1\n      pop\n        /* \"#utility.yul\":6376:6447   */\n      tag_279\n        /* \"#utility.yul\":6444:6445   */\n      0x00\n        /* \"#utility.yul\":6433:6442   */\n      dup4\n        /* \"#utility.yul\":6429:6446   */\n      add\n        /* \"#utility.yul\":6420:6426   */\n      dup5\n        /* \"#utility.yul\":6376:6447   */\n      tag_199\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":6232:6454   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6460:6934   */\n    tag_82:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_282\n      tag_180\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":6553:6672   */\n    tag_281:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_283\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_185\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6917   */\n      tag_284\n        /* \"#utility.yul\":6909:6916   */\n      dup6\n        /* \"#utility.yul\":6900:6906   */\n      dup3\n        /* \"#utility.yul\":6889:6898   */\n      dup7\n        /* \"#utility.yul\":6885:6907   */\n      add\n        /* \"#utility.yul\":6864:6917   */\n      tag_185\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":6854:6917   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6927   */\n      pop\n        /* \"#utility.yul\":6460:6934   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6940:7120   */\n    tag_200:\n        /* \"#utility.yul\":6988:7065   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6985:6986   */\n      0x00\n        /* \"#utility.yul\":6978:7066   */\n      mstore\n        /* \"#utility.yul\":7085:7089   */\n      0x22\n        /* \"#utility.yul\":7082:7083   */\n      0x04\n        /* \"#utility.yul\":7075:7090   */\n      mstore\n        /* \"#utility.yul\":7109:7113   */\n      0x24\n        /* \"#utility.yul\":7106:7107   */\n      0x00\n        /* \"#utility.yul\":7099:7114   */\n      revert\n        /* \"#utility.yul\":7126:7446   */\n    tag_90:\n        /* \"#utility.yul\":7170:7176   */\n      0x00\n        /* \"#utility.yul\":7207:7208   */\n      0x02\n        /* \"#utility.yul\":7201:7205   */\n      dup3\n        /* \"#utility.yul\":7197:7209   */\n      div\n        /* \"#utility.yul\":7187:7209   */\n      swap1\n      pop\n        /* \"#utility.yul\":7254:7255   */\n      0x01\n        /* \"#utility.yul\":7248:7252   */\n      dup3\n        /* \"#utility.yul\":7244:7256   */\n      and\n        /* \"#utility.yul\":7275:7293   */\n      dup1\n        /* \"#utility.yul\":7265:7346   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":7331:7335   */\n      0x7f\n        /* \"#utility.yul\":7323:7329   */\n      dup3\n        /* \"#utility.yul\":7319:7336   */\n      and\n        /* \"#utility.yul\":7309:7336   */\n      swap2\n      pop\n        /* \"#utility.yul\":7265:7346   */\n    tag_287:\n        /* \"#utility.yul\":7393:7395   */\n      0x20\n        /* \"#utility.yul\":7385:7391   */\n      dup3\n        /* \"#utility.yul\":7382:7396   */\n      lt\n        /* \"#utility.yul\":7362:7380   */\n      dup2\n        /* \"#utility.yul\":7359:7397   */\n      sub\n        /* \"#utility.yul\":7356:7440   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":7412:7430   */\n      tag_289\n      tag_200\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":7356:7440   */\n    tag_288:\n        /* \"#utility.yul\":7177:7446   */\n      pop\n        /* \"#utility.yul\":7126:7446   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7452:7894   */\n    tag_141:\n        /* \"#utility.yul\":7601:7605   */\n      0x00\n        /* \"#utility.yul\":7639:7641   */\n      0x60\n        /* \"#utility.yul\":7628:7637   */\n      dup3\n        /* \"#utility.yul\":7624:7642   */\n      add\n        /* \"#utility.yul\":7616:7642   */\n      swap1\n      pop\n        /* \"#utility.yul\":7652:7723   */\n      tag_291\n        /* \"#utility.yul\":7720:7721   */\n      0x00\n        /* \"#utility.yul\":7709:7718   */\n      dup4\n        /* \"#utility.yul\":7705:7722   */\n      add\n        /* \"#utility.yul\":7696:7702   */\n      dup7\n        /* \"#utility.yul\":7652:7723   */\n      tag_199\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":7733:7805   */\n      tag_292\n        /* \"#utility.yul\":7801:7803   */\n      0x20\n        /* \"#utility.yul\":7790:7799   */\n      dup4\n        /* \"#utility.yul\":7786:7804   */\n      add\n        /* \"#utility.yul\":7777:7783   */\n      dup6\n        /* \"#utility.yul\":7733:7805   */\n      tag_191\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":7815:7887   */\n      tag_293\n        /* \"#utility.yul\":7883:7885   */\n      0x40\n        /* \"#utility.yul\":7872:7881   */\n      dup4\n        /* \"#utility.yul\":7868:7886   */\n      add\n        /* \"#utility.yul\":7859:7865   */\n      dup5\n        /* \"#utility.yul\":7815:7887   */\n      tag_191\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":7452:7894   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7900:8080   */\n    tag_201:\n        /* \"#utility.yul\":7948:8025   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7945:7946   */\n      0x00\n        /* \"#utility.yul\":7938:8026   */\n      mstore\n        /* \"#utility.yul\":8045:8049   */\n      0x11\n        /* \"#utility.yul\":8042:8043   */\n      0x04\n        /* \"#utility.yul\":8035:8050   */\n      mstore\n        /* \"#utility.yul\":8069:8073   */\n      0x24\n        /* \"#utility.yul\":8066:8067   */\n      0x00\n        /* \"#utility.yul\":8059:8074   */\n      revert\n        /* \"#utility.yul\":8086:8277   */\n    tag_167:\n        /* \"#utility.yul\":8126:8129   */\n      0x00\n        /* \"#utility.yul\":8145:8165   */\n      tag_296\n        /* \"#utility.yul\":8163:8164   */\n      dup3\n        /* \"#utility.yul\":8145:8165   */\n      tag_186\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":8140:8165   */\n      swap2\n      pop\n        /* \"#utility.yul\":8179:8199   */\n      tag_297\n        /* \"#utility.yul\":8197:8198   */\n      dup4\n        /* \"#utility.yul\":8179:8199   */\n      tag_186\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":8174:8199   */\n      swap3\n      pop\n        /* \"#utility.yul\":8222:8223   */\n      dup3\n        /* \"#utility.yul\":8219:8220   */\n      dup3\n        /* \"#utility.yul\":8215:8224   */\n      add\n        /* \"#utility.yul\":8208:8224   */\n      swap1\n      pop\n        /* \"#utility.yul\":8243:8246   */\n      dup1\n        /* \"#utility.yul\":8240:8241   */\n      dup3\n        /* \"#utility.yul\":8237:8247   */\n      gt\n        /* \"#utility.yul\":8234:8270   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":8250:8268   */\n      tag_299\n      tag_201\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":8234:8270   */\n    tag_298:\n        /* \"#utility.yul\":8086:8277   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b41e17a08bf1878965256510e6b7702845c0750c2a9c5dccc655d56ade2fbad664736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1011": {
									"entryPoint": null,
									"id": 1011,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 461,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 263,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 597,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1501,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 1667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2727,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2220,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1459,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2613,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1837,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1287,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1260,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1265,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1161,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1156,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1983,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2119,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2156,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11212:7",
										"nodeType": "YulBlock",
										"src": "0:11212:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "934:28:7",
													"nodeType": "YulBlock",
													"src": "934:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "951:1:7",
																		"nodeType": "YulLiteral",
																		"src": "951:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "954:1:7",
																		"nodeType": "YulLiteral",
																		"src": "954:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "944:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "944:6:7"
																},
																"nativeSrc": "944:12:7",
																"nodeType": "YulFunctionCall",
																"src": "944:12:7"
															},
															"nativeSrc": "944:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "944:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "845:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "845:117:7"
											},
											{
												"body": {
													"nativeSrc": "1057:28:7",
													"nodeType": "YulBlock",
													"src": "1057:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1074:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1077:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1077:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1067:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1067:6:7"
																},
																"nativeSrc": "1067:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1067:12:7"
															},
															"nativeSrc": "1067:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1067:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "968:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "968:117:7"
											},
											{
												"body": {
													"nativeSrc": "1139:54:7",
													"nodeType": "YulBlock",
													"src": "1139:54:7",
													"statements": [
														{
															"nativeSrc": "1149:38:7",
															"nodeType": "YulAssignment",
															"src": "1149:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1167:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1167:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1174:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1174:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1163:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:7"
																		},
																		"nativeSrc": "1163:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1183:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1183:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1179:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1179:3:7"
																		},
																		"nativeSrc": "1179:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1179:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1159:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1159:3:7"
																},
																"nativeSrc": "1159:28:7",
																"nodeType": "YulFunctionCall",
																"src": "1159:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1149:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1149:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1091:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1122:5:7",
														"nodeType": "YulTypedName",
														"src": "1122:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1132:6:7",
														"nodeType": "YulTypedName",
														"src": "1132:6:7",
														"type": ""
													}
												],
												"src": "1091:102:7"
											},
											{
												"body": {
													"nativeSrc": "1227:152:7",
													"nodeType": "YulBlock",
													"src": "1227:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1244:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1244:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1247:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1247:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1237:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1237:6:7"
																},
																"nativeSrc": "1237:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1237:88:7"
															},
															"nativeSrc": "1237:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1237:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1344:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1344:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:7"
																},
																"nativeSrc": "1334:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1334:15:7"
															},
															"nativeSrc": "1334:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1334:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1365:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1368:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1368:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1358:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:7"
																},
																"nativeSrc": "1358:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1358:15:7"
															},
															"nativeSrc": "1358:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1358:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1199:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1199:180:7"
											},
											{
												"body": {
													"nativeSrc": "1428:238:7",
													"nodeType": "YulBlock",
													"src": "1428:238:7",
													"statements": [
														{
															"nativeSrc": "1438:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1438:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1460:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1460:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1490:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1490:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1468:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "1468:21:7"
																		},
																		"nativeSrc": "1468:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1468:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1456:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1456:3:7"
																},
																"nativeSrc": "1456:40:7",
																"nodeType": "YulFunctionCall",
																"src": "1456:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1442:10:7",
																	"nodeType": "YulTypedName",
																	"src": "1442:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1607:22:7",
																"nodeType": "YulBlock",
																"src": "1607:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1609:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1609:16:7"
																			},
																			"nativeSrc": "1609:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1609:18:7"
																		},
																		"nativeSrc": "1609:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1609:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1550:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1550:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1562:18:7",
																				"nodeType": "YulLiteral",
																				"src": "1562:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1547:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1547:2:7"
																		},
																		"nativeSrc": "1547:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1547:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1586:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1586:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1598:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1598:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1583:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1583:2:7"
																		},
																		"nativeSrc": "1583:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1583:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1544:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1544:2:7"
																},
																"nativeSrc": "1544:62:7",
																"nodeType": "YulFunctionCall",
																"src": "1544:62:7"
															},
															"nativeSrc": "1541:88:7",
															"nodeType": "YulIf",
															"src": "1541:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1645:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1645:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1649:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1649:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1638:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1638:6:7"
																},
																"nativeSrc": "1638:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1638:22:7"
															},
															"nativeSrc": "1638:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "1638:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1385:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1414:6:7",
														"nodeType": "YulTypedName",
														"src": "1414:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1422:4:7",
														"nodeType": "YulTypedName",
														"src": "1422:4:7",
														"type": ""
													}
												],
												"src": "1385:281:7"
											},
											{
												"body": {
													"nativeSrc": "1713:88:7",
													"nodeType": "YulBlock",
													"src": "1713:88:7",
													"statements": [
														{
															"nativeSrc": "1723:30:7",
															"nodeType": "YulAssignment",
															"src": "1723:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1733:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1733:18:7"
																},
																"nativeSrc": "1733:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1733:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1723:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1782:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1782:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1790:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1790:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1762:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "1762:19:7"
																},
																"nativeSrc": "1762:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1762:33:7"
															},
															"nativeSrc": "1762:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1762:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1672:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1697:4:7",
														"nodeType": "YulTypedName",
														"src": "1697:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1706:6:7",
														"nodeType": "YulTypedName",
														"src": "1706:6:7",
														"type": ""
													}
												],
												"src": "1672:129:7"
											},
											{
												"body": {
													"nativeSrc": "1874:241:7",
													"nodeType": "YulBlock",
													"src": "1874:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1979:22:7",
																"nodeType": "YulBlock",
																"src": "1979:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1981:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1981:16:7"
																			},
																			"nativeSrc": "1981:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1981:18:7"
																		},
																		"nativeSrc": "1981:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1981:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1951:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1951:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1959:18:7",
																		"nodeType": "YulLiteral",
																		"src": "1959:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1948:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1948:2:7"
																},
																"nativeSrc": "1948:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1948:30:7"
															},
															"nativeSrc": "1945:56:7",
															"nodeType": "YulIf",
															"src": "1945:56:7"
														},
														{
															"nativeSrc": "2011:37:7",
															"nodeType": "YulAssignment",
															"src": "2011:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2041:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2041:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2019:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "2019:21:7"
																},
																"nativeSrc": "2019:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2019:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2011:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2011:4:7"
																}
															]
														},
														{
															"nativeSrc": "2085:23:7",
															"nodeType": "YulAssignment",
															"src": "2085:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2097:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2097:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2093:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2093:3:7"
																},
																"nativeSrc": "2093:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2093:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2085:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2085:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1807:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1858:6:7",
														"nodeType": "YulTypedName",
														"src": "1858:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1869:4:7",
														"nodeType": "YulTypedName",
														"src": "1869:4:7",
														"type": ""
													}
												],
												"src": "1807:308:7"
											},
											{
												"body": {
													"nativeSrc": "2183:186:7",
													"nodeType": "YulBlock",
													"src": "2183:186:7",
													"statements": [
														{
															"nativeSrc": "2194:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2194:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2203:1:7",
																"nodeType": "YulLiteral",
																"src": "2203:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2198:1:7",
																	"nodeType": "YulTypedName",
																	"src": "2198:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2263:63:7",
																"nodeType": "YulBlock",
																"src": "2263:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "2288:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2288:3:7"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "2293:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "2293:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2284:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2284:3:7"
																					},
																					"nativeSrc": "2284:11:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2284:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "2307:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2307:3:7"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "2312:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "2312:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2303:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2303:3:7"
																							},
																							"nativeSrc": "2303:11:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2303:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2297:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2297:5:7"
																					},
																					"nativeSrc": "2297:18:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2297:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2277:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2277:6:7"
																			},
																			"nativeSrc": "2277:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2277:39:7"
																		},
																		"nativeSrc": "2277:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2277:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2224:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2224:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2227:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2227:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2221:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2221:2:7"
																},
																"nativeSrc": "2221:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2221:13:7"
															},
															"nativeSrc": "2213:113:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2235:19:7",
																"nodeType": "YulBlock",
																"src": "2235:19:7",
																"statements": [
																	{
																		"nativeSrc": "2237:15:7",
																		"nodeType": "YulAssignment",
																		"src": "2237:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2246:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "2246:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2249:2:7",
																					"nodeType": "YulLiteral",
																					"src": "2249:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2242:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2242:3:7"
																			},
																			"nativeSrc": "2242:10:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2242:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2237:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "2237:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2217:3:7",
																"nodeType": "YulBlock",
																"src": "2217:3:7",
																"statements": []
															},
															"src": "2213:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2346:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2346:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2351:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2351:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2342:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2342:3:7"
																		},
																		"nativeSrc": "2342:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2342:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2360:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2360:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2335:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2335:6:7"
																},
																"nativeSrc": "2335:27:7",
																"nodeType": "YulFunctionCall",
																"src": "2335:27:7"
															},
															"nativeSrc": "2335:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "2335:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2121:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2165:3:7",
														"nodeType": "YulTypedName",
														"src": "2165:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2170:3:7",
														"nodeType": "YulTypedName",
														"src": "2170:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2175:6:7",
														"nodeType": "YulTypedName",
														"src": "2175:6:7",
														"type": ""
													}
												],
												"src": "2121:248:7"
											},
											{
												"body": {
													"nativeSrc": "2470:339:7",
													"nodeType": "YulBlock",
													"src": "2470:339:7",
													"statements": [
														{
															"nativeSrc": "2480:75:7",
															"nodeType": "YulAssignment",
															"src": "2480:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2547:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2547:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "2505:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "2505:41:7"
																		},
																		"nativeSrc": "2505:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2505:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2489:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "2489:15:7"
																},
																"nativeSrc": "2489:66:7",
																"nodeType": "YulFunctionCall",
																"src": "2489:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2480:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2480:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2571:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2571:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2578:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2578:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2564:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2564:6:7"
																},
																"nativeSrc": "2564:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2564:21:7"
															},
															"nativeSrc": "2564:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2564:21:7"
														},
														{
															"nativeSrc": "2594:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2594:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2609:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2609:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2616:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2616:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2605:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2605:3:7"
																},
																"nativeSrc": "2605:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2605:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2598:3:7",
																	"nodeType": "YulTypedName",
																	"src": "2598:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2659:83:7",
																"nodeType": "YulBlock",
																"src": "2659:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2661:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2661:77:7"
																			},
																			"nativeSrc": "2661:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2661:79:7"
																		},
																		"nativeSrc": "2661:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2661:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2640:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2640:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2645:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2645:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2636:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2636:3:7"
																		},
																		"nativeSrc": "2636:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2636:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2654:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2654:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2633:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2633:2:7"
																},
																"nativeSrc": "2633:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2633:25:7"
															},
															"nativeSrc": "2630:112:7",
															"nodeType": "YulIf",
															"src": "2630:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2786:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2786:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2791:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2791:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2796:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2796:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2751:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "2751:34:7"
																},
																"nativeSrc": "2751:52:7",
																"nodeType": "YulFunctionCall",
																"src": "2751:52:7"
															},
															"nativeSrc": "2751:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "2751:52:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2375:434:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2443:3:7",
														"nodeType": "YulTypedName",
														"src": "2443:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2448:6:7",
														"nodeType": "YulTypedName",
														"src": "2448:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2456:3:7",
														"nodeType": "YulTypedName",
														"src": "2456:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2464:5:7",
														"nodeType": "YulTypedName",
														"src": "2464:5:7",
														"type": ""
													}
												],
												"src": "2375:434:7"
											},
											{
												"body": {
													"nativeSrc": "2902:282:7",
													"nodeType": "YulBlock",
													"src": "2902:282:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2951:83:7",
																"nodeType": "YulBlock",
																"src": "2951:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2953:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2953:77:7"
																			},
																			"nativeSrc": "2953:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2953:79:7"
																		},
																		"nativeSrc": "2953:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2953:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2930:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2930:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2938:4:7",
																						"nodeType": "YulLiteral",
																						"src": "2938:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2926:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2926:3:7"
																				},
																				"nativeSrc": "2926:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2926:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2945:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2945:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2922:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2922:3:7"
																		},
																		"nativeSrc": "2922:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2922:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2915:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2915:6:7"
																},
																"nativeSrc": "2915:35:7",
																"nodeType": "YulFunctionCall",
																"src": "2915:35:7"
															},
															"nativeSrc": "2912:122:7",
															"nodeType": "YulIf",
															"src": "2912:122:7"
														},
														{
															"nativeSrc": "3043:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3043:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3063:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3063:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3057:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3057:5:7"
																},
																"nativeSrc": "3057:13:7",
																"nodeType": "YulFunctionCall",
																"src": "3057:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3047:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3047:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3079:99:7",
															"nodeType": "YulAssignment",
															"src": "3079:99:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3151:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3151:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3159:4:7",
																				"nodeType": "YulLiteral",
																				"src": "3159:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3147:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3147:3:7"
																		},
																		"nativeSrc": "3147:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3147:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3166:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3166:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3174:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3174:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "3088:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "3088:58:7"
																},
																"nativeSrc": "3088:90:7",
																"nodeType": "YulFunctionCall",
																"src": "3088:90:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3079:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3079:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2829:355:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2880:6:7",
														"nodeType": "YulTypedName",
														"src": "2880:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2888:3:7",
														"nodeType": "YulTypedName",
														"src": "2888:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2896:5:7",
														"nodeType": "YulTypedName",
														"src": "2896:5:7",
														"type": ""
													}
												],
												"src": "2829:355:7"
											},
											{
												"body": {
													"nativeSrc": "3235:32:7",
													"nodeType": "YulBlock",
													"src": "3235:32:7",
													"statements": [
														{
															"nativeSrc": "3245:16:7",
															"nodeType": "YulAssignment",
															"src": "3245:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "3256:5:7",
																"nodeType": "YulIdentifier",
																"src": "3256:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3245:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3245:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3190:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3217:5:7",
														"nodeType": "YulTypedName",
														"src": "3217:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3227:7:7",
														"nodeType": "YulTypedName",
														"src": "3227:7:7",
														"type": ""
													}
												],
												"src": "3190:77:7"
											},
											{
												"body": {
													"nativeSrc": "3316:79:7",
													"nodeType": "YulBlock",
													"src": "3316:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3373:16:7",
																"nodeType": "YulBlock",
																"src": "3373:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3382:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3382:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3385:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3385:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3375:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3375:6:7"
																			},
																			"nativeSrc": "3375:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3375:12:7"
																		},
																		"nativeSrc": "3375:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3375:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3339:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3339:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3364:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3364:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3346:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3346:17:7"
																				},
																				"nativeSrc": "3346:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3346:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3336:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3336:2:7"
																		},
																		"nativeSrc": "3336:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3336:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3329:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3329:6:7"
																},
																"nativeSrc": "3329:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3329:43:7"
															},
															"nativeSrc": "3326:63:7",
															"nodeType": "YulIf",
															"src": "3326:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3273:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3309:5:7",
														"nodeType": "YulTypedName",
														"src": "3309:5:7",
														"type": ""
													}
												],
												"src": "3273:122:7"
											},
											{
												"body": {
													"nativeSrc": "3464:80:7",
													"nodeType": "YulBlock",
													"src": "3464:80:7",
													"statements": [
														{
															"nativeSrc": "3474:22:7",
															"nodeType": "YulAssignment",
															"src": "3474:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3489:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3489:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3483:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3483:5:7"
																},
																"nativeSrc": "3483:13:7",
																"nodeType": "YulFunctionCall",
																"src": "3483:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3474:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3474:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3532:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3532:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3505:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3505:26:7"
																},
																"nativeSrc": "3505:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3505:33:7"
															},
															"nativeSrc": "3505:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3505:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3401:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3442:6:7",
														"nodeType": "YulTypedName",
														"src": "3442:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3450:3:7",
														"nodeType": "YulTypedName",
														"src": "3450:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3458:5:7",
														"nodeType": "YulTypedName",
														"src": "3458:5:7",
														"type": ""
													}
												],
												"src": "3401:143:7"
											},
											{
												"body": {
													"nativeSrc": "3698:1018:7",
													"nodeType": "YulBlock",
													"src": "3698:1018:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3745:83:7",
																"nodeType": "YulBlock",
																"src": "3745:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3747:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3747:77:7"
																			},
																			"nativeSrc": "3747:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3747:79:7"
																		},
																		"nativeSrc": "3747:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3747:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3719:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3719:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3728:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3728:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3715:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3715:3:7"
																		},
																		"nativeSrc": "3715:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3715:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3740:3:7",
																		"nodeType": "YulLiteral",
																		"src": "3740:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3711:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3711:3:7"
																},
																"nativeSrc": "3711:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3711:33:7"
															},
															"nativeSrc": "3708:120:7",
															"nodeType": "YulIf",
															"src": "3708:120:7"
														},
														{
															"nativeSrc": "3838:128:7",
															"nodeType": "YulBlock",
															"src": "3838:128:7",
															"statements": [
																{
																	"nativeSrc": "3853:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3867:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3867:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3882:74:7",
																	"nodeType": "YulAssignment",
																	"src": "3882:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3928:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3928:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3939:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3939:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3924:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3924:3:7"
																				},
																				"nativeSrc": "3924:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3924:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3948:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3948:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3892:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "3892:31:7"
																		},
																		"nativeSrc": "3892:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3882:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3882:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3976:292:7",
															"nodeType": "YulBlock",
															"src": "3976:292:7",
															"statements": [
																{
																	"nativeSrc": "3991:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3991:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4015:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4015:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4026:2:7",
																						"nodeType": "YulLiteral",
																						"src": "4026:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4011:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4011:3:7"
																				},
																				"nativeSrc": "4011:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4011:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4005:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4005:5:7"
																		},
																		"nativeSrc": "4005:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4005:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3995:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3995:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4077:83:7",
																		"nodeType": "YulBlock",
																		"src": "4077:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4079:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "4079:77:7"
																					},
																					"nativeSrc": "4079:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4079:79:7"
																				},
																				"nativeSrc": "4079:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4079:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4049:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4049:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4057:18:7",
																				"nodeType": "YulLiteral",
																				"src": "4057:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4046:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4046:2:7"
																		},
																		"nativeSrc": "4046:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4046:30:7"
																	},
																	"nativeSrc": "4043:117:7",
																	"nodeType": "YulIf",
																	"src": "4043:117:7"
																},
																{
																	"nativeSrc": "4174:84:7",
																	"nodeType": "YulAssignment",
																	"src": "4174:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4230:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4230:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4241:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4241:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4226:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4226:3:7"
																				},
																				"nativeSrc": "4226:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4226:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4250:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4250:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4184:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "4184:41:7"
																		},
																		"nativeSrc": "4184:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4184:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4174:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4174:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4278:292:7",
															"nodeType": "YulBlock",
															"src": "4278:292:7",
															"statements": [
																{
																	"nativeSrc": "4293:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4293:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4317:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4317:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4328:2:7",
																						"nodeType": "YulLiteral",
																						"src": "4328:2:7",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4313:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4313:3:7"
																				},
																				"nativeSrc": "4313:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4313:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4307:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4307:5:7"
																		},
																		"nativeSrc": "4307:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4307:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4297:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4297:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4379:83:7",
																		"nodeType": "YulBlock",
																		"src": "4379:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4381:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "4381:77:7"
																					},
																					"nativeSrc": "4381:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4381:79:7"
																				},
																				"nativeSrc": "4381:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4381:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4351:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4351:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4359:18:7",
																				"nodeType": "YulLiteral",
																				"src": "4359:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4348:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4348:2:7"
																		},
																		"nativeSrc": "4348:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4348:30:7"
																	},
																	"nativeSrc": "4345:117:7",
																	"nodeType": "YulIf",
																	"src": "4345:117:7"
																},
																{
																	"nativeSrc": "4476:84:7",
																	"nodeType": "YulAssignment",
																	"src": "4476:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4532:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4532:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4543:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4543:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4528:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4528:3:7"
																				},
																				"nativeSrc": "4528:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4528:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4552:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4552:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4486:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "4486:41:7"
																		},
																		"nativeSrc": "4486:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4486:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4476:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4476:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4580:129:7",
															"nodeType": "YulBlock",
															"src": "4580:129:7",
															"statements": [
																{
																	"nativeSrc": "4595:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4595:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4609:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4609:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4599:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4599:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4625:74:7",
																	"nodeType": "YulAssignment",
																	"src": "4625:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4671:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4671:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4682:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4682:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4667:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4667:3:7"
																				},
																				"nativeSrc": "4667:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4667:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4691:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4691:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4635:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "4635:31:7"
																		},
																		"nativeSrc": "4635:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4635:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4625:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4625:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nativeSrc": "3550:1166:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3644:9:7",
														"nodeType": "YulTypedName",
														"src": "3644:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3655:7:7",
														"nodeType": "YulTypedName",
														"src": "3655:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3667:6:7",
														"nodeType": "YulTypedName",
														"src": "3667:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3675:6:7",
														"nodeType": "YulTypedName",
														"src": "3675:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3683:6:7",
														"nodeType": "YulTypedName",
														"src": "3683:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3691:6:7",
														"nodeType": "YulTypedName",
														"src": "3691:6:7",
														"type": ""
													}
												],
												"src": "3550:1166:7"
											},
											{
												"body": {
													"nativeSrc": "4781:40:7",
													"nodeType": "YulBlock",
													"src": "4781:40:7",
													"statements": [
														{
															"nativeSrc": "4792:22:7",
															"nodeType": "YulAssignment",
															"src": "4792:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4808:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4808:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4802:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4802:5:7"
																},
																"nativeSrc": "4802:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4802:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4792:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4792:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4722:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4764:5:7",
														"nodeType": "YulTypedName",
														"src": "4764:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4774:6:7",
														"nodeType": "YulTypedName",
														"src": "4774:6:7",
														"type": ""
													}
												],
												"src": "4722:99:7"
											},
											{
												"body": {
													"nativeSrc": "4855:152:7",
													"nodeType": "YulBlock",
													"src": "4855:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4872:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4872:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4875:77:7",
																		"nodeType": "YulLiteral",
																		"src": "4875:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4865:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4865:6:7"
																},
																"nativeSrc": "4865:88:7",
																"nodeType": "YulFunctionCall",
																"src": "4865:88:7"
															},
															"nativeSrc": "4865:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "4865:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4969:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4969:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4972:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4972:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4962:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4962:6:7"
																},
																"nativeSrc": "4962:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4962:15:7"
															},
															"nativeSrc": "4962:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4962:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4993:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4993:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4996:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4996:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4986:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4986:6:7"
																},
																"nativeSrc": "4986:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4986:15:7"
															},
															"nativeSrc": "4986:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4986:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4827:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4827:180:7"
											},
											{
												"body": {
													"nativeSrc": "5064:269:7",
													"nodeType": "YulBlock",
													"src": "5064:269:7",
													"statements": [
														{
															"nativeSrc": "5074:22:7",
															"nodeType": "YulAssignment",
															"src": "5074:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5088:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5088:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5094:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5094:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5084:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5084:3:7"
																},
																"nativeSrc": "5084:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5084:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5074:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5074:6:7"
																}
															]
														},
														{
															"nativeSrc": "5105:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5105:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5135:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5135:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5141:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5141:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5131:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5131:3:7"
																},
																"nativeSrc": "5131:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5131:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5109:18:7",
																	"nodeType": "YulTypedName",
																	"src": "5109:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5182:51:7",
																"nodeType": "YulBlock",
																"src": "5182:51:7",
																"statements": [
																	{
																		"nativeSrc": "5196:27:7",
																		"nodeType": "YulAssignment",
																		"src": "5196:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5210:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5210:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5218:4:7",
																					"nodeType": "YulLiteral",
																					"src": "5218:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5206:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5206:3:7"
																			},
																			"nativeSrc": "5206:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5206:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5196:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5196:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5162:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "5162:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5155:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5155:6:7"
																},
																"nativeSrc": "5155:26:7",
																"nodeType": "YulFunctionCall",
																"src": "5155:26:7"
															},
															"nativeSrc": "5152:81:7",
															"nodeType": "YulIf",
															"src": "5152:81:7"
														},
														{
															"body": {
																"nativeSrc": "5285:42:7",
																"nodeType": "YulBlock",
																"src": "5285:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5299:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5299:16:7"
																			},
																			"nativeSrc": "5299:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5299:18:7"
																		},
																		"nativeSrc": "5299:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5299:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5249:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "5249:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5272:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5272:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5280:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5280:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5269:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5269:2:7"
																		},
																		"nativeSrc": "5269:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5269:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5246:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5246:2:7"
																},
																"nativeSrc": "5246:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5246:38:7"
															},
															"nativeSrc": "5243:84:7",
															"nodeType": "YulIf",
															"src": "5243:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5013:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5048:4:7",
														"nodeType": "YulTypedName",
														"src": "5048:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5057:6:7",
														"nodeType": "YulTypedName",
														"src": "5057:6:7",
														"type": ""
													}
												],
												"src": "5013:320:7"
											},
											{
												"body": {
													"nativeSrc": "5393:87:7",
													"nodeType": "YulBlock",
													"src": "5393:87:7",
													"statements": [
														{
															"nativeSrc": "5403:11:7",
															"nodeType": "YulAssignment",
															"src": "5403:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "5411:3:7",
																"nodeType": "YulIdentifier",
																"src": "5411:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5403:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5403:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5431:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5431:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5434:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5434:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5424:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5424:6:7"
																},
																"nativeSrc": "5424:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5424:14:7"
															},
															"nativeSrc": "5424:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "5424:14:7"
														},
														{
															"nativeSrc": "5447:26:7",
															"nodeType": "YulAssignment",
															"src": "5447:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5465:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5465:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5468:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5468:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5455:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5455:9:7"
																},
																"nativeSrc": "5455:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5455:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5447:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5447:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5339:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5380:3:7",
														"nodeType": "YulTypedName",
														"src": "5380:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5388:4:7",
														"nodeType": "YulTypedName",
														"src": "5388:4:7",
														"type": ""
													}
												],
												"src": "5339:141:7"
											},
											{
												"body": {
													"nativeSrc": "5530:49:7",
													"nodeType": "YulBlock",
													"src": "5530:49:7",
													"statements": [
														{
															"nativeSrc": "5540:33:7",
															"nodeType": "YulAssignment",
															"src": "5540:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5558:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5558:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5565:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5565:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5554:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5554:3:7"
																		},
																		"nativeSrc": "5554:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5554:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5570:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5570:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5550:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5550:3:7"
																},
																"nativeSrc": "5550:23:7",
																"nodeType": "YulFunctionCall",
																"src": "5550:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5540:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5540:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5486:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5513:5:7",
														"nodeType": "YulTypedName",
														"src": "5513:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5523:6:7",
														"nodeType": "YulTypedName",
														"src": "5523:6:7",
														"type": ""
													}
												],
												"src": "5486:93:7"
											},
											{
												"body": {
													"nativeSrc": "5638:54:7",
													"nodeType": "YulBlock",
													"src": "5638:54:7",
													"statements": [
														{
															"nativeSrc": "5648:37:7",
															"nodeType": "YulAssignment",
															"src": "5648:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5673:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5673:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5679:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5679:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5669:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5669:3:7"
																},
																"nativeSrc": "5669:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5669:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5648:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5648:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5585:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5613:4:7",
														"nodeType": "YulTypedName",
														"src": "5613:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5619:5:7",
														"nodeType": "YulTypedName",
														"src": "5619:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5629:8:7",
														"nodeType": "YulTypedName",
														"src": "5629:8:7",
														"type": ""
													}
												],
												"src": "5585:107:7"
											},
											{
												"body": {
													"nativeSrc": "5774:317:7",
													"nodeType": "YulBlock",
													"src": "5774:317:7",
													"statements": [
														{
															"nativeSrc": "5784:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5784:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5805:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "5805:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5817:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5817:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5801:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5801:3:7"
																},
																"nativeSrc": "5801:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5801:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5788:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5788:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5828:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5828:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5859:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5859:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5870:66:7",
																		"nodeType": "YulLiteral",
																		"src": "5870:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5840:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5840:18:7"
																},
																"nativeSrc": "5840:97:7",
																"nodeType": "YulFunctionCall",
																"src": "5840:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5832:4:7",
																	"nodeType": "YulTypedName",
																	"src": "5832:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5946:51:7",
															"nodeType": "YulAssignment",
															"src": "5946:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5977:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5977:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5988:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "5988:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5958:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5958:18:7"
																},
																"nativeSrc": "5958:39:7",
																"nodeType": "YulFunctionCall",
																"src": "5958:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5946:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5946:8:7"
																}
															]
														},
														{
															"nativeSrc": "6006:30:7",
															"nodeType": "YulAssignment",
															"src": "6006:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6019:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6019:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "6030:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6030:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6026:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6026:3:7"
																		},
																		"nativeSrc": "6026:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6026:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6015:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6015:3:7"
																},
																"nativeSrc": "6015:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6015:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6006:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6006:5:7"
																}
															]
														},
														{
															"nativeSrc": "6045:40:7",
															"nodeType": "YulAssignment",
															"src": "6045:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6058:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "6069:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "6069:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "6079:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6079:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6065:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6065:3:7"
																		},
																		"nativeSrc": "6065:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6065:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6055:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6055:2:7"
																},
																"nativeSrc": "6055:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6055:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6045:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6045:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5698:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5735:5:7",
														"nodeType": "YulTypedName",
														"src": "5735:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5742:10:7",
														"nodeType": "YulTypedName",
														"src": "5742:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5754:8:7",
														"nodeType": "YulTypedName",
														"src": "5754:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5767:6:7",
														"nodeType": "YulTypedName",
														"src": "5767:6:7",
														"type": ""
													}
												],
												"src": "5698:393:7"
											},
											{
												"body": {
													"nativeSrc": "6129:28:7",
													"nodeType": "YulBlock",
													"src": "6129:28:7",
													"statements": [
														{
															"nativeSrc": "6139:12:7",
															"nodeType": "YulAssignment",
															"src": "6139:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "6146:5:7",
																"nodeType": "YulIdentifier",
																"src": "6146:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6139:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6139:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6097:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6115:5:7",
														"nodeType": "YulTypedName",
														"src": "6115:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6125:3:7",
														"nodeType": "YulTypedName",
														"src": "6125:3:7",
														"type": ""
													}
												],
												"src": "6097:60:7"
											},
											{
												"body": {
													"nativeSrc": "6223:82:7",
													"nodeType": "YulBlock",
													"src": "6223:82:7",
													"statements": [
														{
															"nativeSrc": "6233:66:7",
															"nodeType": "YulAssignment",
															"src": "6233:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6291:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6291:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6273:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "6273:17:7"
																				},
																				"nativeSrc": "6273:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6273:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6264:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "6264:8:7"
																		},
																		"nativeSrc": "6264:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6264:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6246:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6246:17:7"
																},
																"nativeSrc": "6246:53:7",
																"nodeType": "YulFunctionCall",
																"src": "6246:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6233:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "6233:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "6163:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6203:5:7",
														"nodeType": "YulTypedName",
														"src": "6203:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6213:9:7",
														"nodeType": "YulTypedName",
														"src": "6213:9:7",
														"type": ""
													}
												],
												"src": "6163:142:7"
											},
											{
												"body": {
													"nativeSrc": "6358:28:7",
													"nodeType": "YulBlock",
													"src": "6358:28:7",
													"statements": [
														{
															"nativeSrc": "6368:12:7",
															"nodeType": "YulAssignment",
															"src": "6368:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "6375:5:7",
																"nodeType": "YulIdentifier",
																"src": "6375:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6368:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6368:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6311:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6344:5:7",
														"nodeType": "YulTypedName",
														"src": "6344:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6354:3:7",
														"nodeType": "YulTypedName",
														"src": "6354:3:7",
														"type": ""
													}
												],
												"src": "6311:75:7"
											},
											{
												"body": {
													"nativeSrc": "6468:193:7",
													"nodeType": "YulBlock",
													"src": "6468:193:7",
													"statements": [
														{
															"nativeSrc": "6478:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6478:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6533:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "6533:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6502:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6502:30:7"
																},
																"nativeSrc": "6502:39:7",
																"nodeType": "YulFunctionCall",
																"src": "6502:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6482:16:7",
																	"nodeType": "YulTypedName",
																	"src": "6482:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6557:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6557:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6597:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "6597:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6591:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6591:5:7"
																				},
																				"nativeSrc": "6591:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6591:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6604:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6604:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6636:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "6636:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6612:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "6612:23:7"
																				},
																				"nativeSrc": "6612:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6612:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6563:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "6563:27:7"
																		},
																		"nativeSrc": "6563:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6563:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6550:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6550:6:7"
																},
																"nativeSrc": "6550:105:7",
																"nodeType": "YulFunctionCall",
																"src": "6550:105:7"
															},
															"nativeSrc": "6550:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "6550:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6392:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6445:4:7",
														"nodeType": "YulTypedName",
														"src": "6445:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6451:6:7",
														"nodeType": "YulTypedName",
														"src": "6451:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6459:7:7",
														"nodeType": "YulTypedName",
														"src": "6459:7:7",
														"type": ""
													}
												],
												"src": "6392:269:7"
											},
											{
												"body": {
													"nativeSrc": "6716:24:7",
													"nodeType": "YulBlock",
													"src": "6716:24:7",
													"statements": [
														{
															"nativeSrc": "6726:8:7",
															"nodeType": "YulAssignment",
															"src": "6726:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "6733:1:7",
																"nodeType": "YulLiteral",
																"src": "6733:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6726:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6726:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6667:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6712:3:7",
														"nodeType": "YulTypedName",
														"src": "6712:3:7",
														"type": ""
													}
												],
												"src": "6667:73:7"
											},
											{
												"body": {
													"nativeSrc": "6799:136:7",
													"nodeType": "YulBlock",
													"src": "6799:136:7",
													"statements": [
														{
															"nativeSrc": "6809:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6809:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6823:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6823:30:7"
																},
																"nativeSrc": "6823:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6823:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6813:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6813:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6908:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6908:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6914:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6914:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6922:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6922:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6864:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6864:43:7"
																},
																"nativeSrc": "6864:65:7",
																"nodeType": "YulFunctionCall",
																"src": "6864:65:7"
															},
															"nativeSrc": "6864:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "6864:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6746:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6785:4:7",
														"nodeType": "YulTypedName",
														"src": "6785:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6791:6:7",
														"nodeType": "YulTypedName",
														"src": "6791:6:7",
														"type": ""
													}
												],
												"src": "6746:189:7"
											},
											{
												"body": {
													"nativeSrc": "6991:136:7",
													"nodeType": "YulBlock",
													"src": "6991:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7058:63:7",
																"nodeType": "YulBlock",
																"src": "7058:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7102:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "7102:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7109:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7109:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "7072:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "7072:29:7"
																			},
																			"nativeSrc": "7072:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7072:39:7"
																		},
																		"nativeSrc": "7072:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7072:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "7011:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7011:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7018:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7018:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7008:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7008:2:7"
																},
																"nativeSrc": "7008:14:7",
																"nodeType": "YulFunctionCall",
																"src": "7008:14:7"
															},
															"nativeSrc": "7001:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7023:26:7",
																"nodeType": "YulBlock",
																"src": "7023:26:7",
																"statements": [
																	{
																		"nativeSrc": "7025:22:7",
																		"nodeType": "YulAssignment",
																		"src": "7025:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7038:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "7038:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7045:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7045:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7034:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7034:3:7"
																			},
																			"nativeSrc": "7034:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7034:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "7025:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7025:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7005:2:7",
																"nodeType": "YulBlock",
																"src": "7005:2:7",
																"statements": []
															},
															"src": "7001:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6941:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6979:5:7",
														"nodeType": "YulTypedName",
														"src": "6979:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6986:3:7",
														"nodeType": "YulTypedName",
														"src": "6986:3:7",
														"type": ""
													}
												],
												"src": "6941:186:7"
											},
											{
												"body": {
													"nativeSrc": "7212:464:7",
													"nodeType": "YulBlock",
													"src": "7212:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7238:431:7",
																"nodeType": "YulBlock",
																"src": "7238:431:7",
																"statements": [
																	{
																		"nativeSrc": "7252:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7252:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7300:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "7300:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7268:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "7268:31:7"
																			},
																			"nativeSrc": "7268:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7268:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7256:8:7",
																				"nodeType": "YulTypedName",
																				"src": "7256:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7319:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7319:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7342:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "7342:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7370:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "7370:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7352:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "7352:17:7"
																					},
																					"nativeSrc": "7352:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7352:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7338:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7338:3:7"
																			},
																			"nativeSrc": "7338:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7338:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7323:11:7",
																				"nodeType": "YulTypedName",
																				"src": "7323:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7539:27:7",
																			"nodeType": "YulBlock",
																			"src": "7539:27:7",
																			"statements": [
																				{
																					"nativeSrc": "7541:23:7",
																					"nodeType": "YulAssignment",
																					"src": "7541:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7556:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "7556:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7541:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "7541:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7523:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "7523:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7535:2:7",
																					"nodeType": "YulLiteral",
																					"src": "7535:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7520:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7520:2:7"
																			},
																			"nativeSrc": "7520:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7520:18:7"
																		},
																		"nativeSrc": "7517:49:7",
																		"nodeType": "YulIf",
																		"src": "7517:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7608:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "7608:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7625:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "7625:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7653:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "7653:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7635:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "7635:17:7"
																							},
																							"nativeSrc": "7635:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "7635:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7621:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7621:3:7"
																					},
																					"nativeSrc": "7621:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7621:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7579:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "7579:28:7"
																			},
																			"nativeSrc": "7579:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7579:80:7"
																		},
																		"nativeSrc": "7579:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7579:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7229:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7229:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7234:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7234:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7226:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7226:2:7"
																},
																"nativeSrc": "7226:11:7",
																"nodeType": "YulFunctionCall",
																"src": "7226:11:7"
															},
															"nativeSrc": "7223:446:7",
															"nodeType": "YulIf",
															"src": "7223:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "7133:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "7188:5:7",
														"nodeType": "YulTypedName",
														"src": "7188:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7195:3:7",
														"nodeType": "YulTypedName",
														"src": "7195:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "7200:10:7",
														"nodeType": "YulTypedName",
														"src": "7200:10:7",
														"type": ""
													}
												],
												"src": "7133:543:7"
											},
											{
												"body": {
													"nativeSrc": "7745:54:7",
													"nodeType": "YulBlock",
													"src": "7745:54:7",
													"statements": [
														{
															"nativeSrc": "7755:37:7",
															"nodeType": "YulAssignment",
															"src": "7755:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7780:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7780:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7786:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7786:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7776:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7776:3:7"
																},
																"nativeSrc": "7776:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7776:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7755:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "7755:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7682:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7720:4:7",
														"nodeType": "YulTypedName",
														"src": "7720:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7726:5:7",
														"nodeType": "YulTypedName",
														"src": "7726:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7736:8:7",
														"nodeType": "YulTypedName",
														"src": "7736:8:7",
														"type": ""
													}
												],
												"src": "7682:117:7"
											},
											{
												"body": {
													"nativeSrc": "7856:118:7",
													"nodeType": "YulBlock",
													"src": "7856:118:7",
													"statements": [
														{
															"nativeSrc": "7866:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7866:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7915:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7915:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7918:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7918:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7911:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7911:3:7"
																				},
																				"nativeSrc": "7911:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7911:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7930:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7930:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7926:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7926:3:7"
																				},
																				"nativeSrc": "7926:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7926:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7882:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "7882:28:7"
																		},
																		"nativeSrc": "7882:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7878:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7878:3:7"
																},
																"nativeSrc": "7878:56:7",
																"nodeType": "YulFunctionCall",
																"src": "7878:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7870:4:7",
																	"nodeType": "YulTypedName",
																	"src": "7870:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7943:25:7",
															"nodeType": "YulAssignment",
															"src": "7943:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7957:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7957:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7963:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7963:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7953:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7953:3:7"
																},
																"nativeSrc": "7953:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7953:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7943:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7943:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7805:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7833:4:7",
														"nodeType": "YulTypedName",
														"src": "7833:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7839:5:7",
														"nodeType": "YulTypedName",
														"src": "7839:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7849:6:7",
														"nodeType": "YulTypedName",
														"src": "7849:6:7",
														"type": ""
													}
												],
												"src": "7805:169:7"
											},
											{
												"body": {
													"nativeSrc": "8060:214:7",
													"nodeType": "YulBlock",
													"src": "8060:214:7",
													"statements": [
														{
															"nativeSrc": "8193:37:7",
															"nodeType": "YulAssignment",
															"src": "8193:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8220:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8220:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8226:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8226:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "8201:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "8201:18:7"
																},
																"nativeSrc": "8201:29:7",
																"nodeType": "YulFunctionCall",
																"src": "8201:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8193:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8193:4:7"
																}
															]
														},
														{
															"nativeSrc": "8239:29:7",
															"nodeType": "YulAssignment",
															"src": "8239:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8250:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8250:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8260:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8260:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8263:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8263:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8256:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8256:3:7"
																		},
																		"nativeSrc": "8256:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8256:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8247:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8247:2:7"
																},
																"nativeSrc": "8247:21:7",
																"nodeType": "YulFunctionCall",
																"src": "8247:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8239:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8239:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7979:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8041:4:7",
														"nodeType": "YulTypedName",
														"src": "8041:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "8047:3:7",
														"nodeType": "YulTypedName",
														"src": "8047:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "8055:4:7",
														"nodeType": "YulTypedName",
														"src": "8055:4:7",
														"type": ""
													}
												],
												"src": "7979:295:7"
											},
											{
												"body": {
													"nativeSrc": "8371:1303:7",
													"nodeType": "YulBlock",
													"src": "8371:1303:7",
													"statements": [
														{
															"nativeSrc": "8382:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8382:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8429:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8429:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8396:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "8396:32:7"
																},
																"nativeSrc": "8396:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8396:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8386:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8386:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8518:22:7",
																"nodeType": "YulBlock",
																"src": "8518:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8520:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8520:16:7"
																			},
																			"nativeSrc": "8520:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8520:18:7"
																		},
																		"nativeSrc": "8520:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8520:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8490:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8490:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8498:18:7",
																		"nodeType": "YulLiteral",
																		"src": "8498:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8487:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8487:2:7"
																},
																"nativeSrc": "8487:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8487:30:7"
															},
															"nativeSrc": "8484:56:7",
															"nodeType": "YulIf",
															"src": "8484:56:7"
														},
														{
															"nativeSrc": "8550:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8550:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8596:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8596:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8590:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8590:5:7"
																		},
																		"nativeSrc": "8590:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8590:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8564:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "8564:25:7"
																},
																"nativeSrc": "8564:38:7",
																"nodeType": "YulFunctionCall",
																"src": "8564:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8554:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8554:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8695:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8695:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8701:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8701:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8709:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8709:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8649:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "8649:45:7"
																},
																"nativeSrc": "8649:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8649:67:7"
															},
															"nativeSrc": "8649:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "8649:67:7"
														},
														{
															"nativeSrc": "8726:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8726:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8743:1:7",
																"nodeType": "YulLiteral",
																"src": "8743:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8730:9:7",
																	"nodeType": "YulTypedName",
																	"src": "8730:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8754:17:7",
															"nodeType": "YulAssignment",
															"src": "8754:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8767:4:7",
																"nodeType": "YulLiteral",
																"src": "8767:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8754:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "8754:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8818:611:7",
																		"nodeType": "YulBlock",
																		"src": "8818:611:7",
																		"statements": [
																			{
																				"nativeSrc": "8832:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8832:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8851:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8851:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8863:4:7",
																									"nodeType": "YulLiteral",
																									"src": "8863:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8859:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "8859:3:7"
																							},
																							"nativeSrc": "8859:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8859:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8847:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8847:3:7"
																					},
																					"nativeSrc": "8847:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8847:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8836:7:7",
																						"nodeType": "YulTypedName",
																						"src": "8836:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8883:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8883:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8929:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8929:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8897:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "8897:31:7"
																					},
																					"nativeSrc": "8897:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8897:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8887:6:7",
																						"nodeType": "YulTypedName",
																						"src": "8887:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8947:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8947:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8956:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8956:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8951:1:7",
																						"nodeType": "YulTypedName",
																						"src": "8951:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9015:163:7",
																					"nodeType": "YulBlock",
																					"src": "9015:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9040:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "9040:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "9058:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "9058:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "9063:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "9063:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "9054:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "9054:3:7"
																												},
																												"nativeSrc": "9054:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "9054:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "9048:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "9048:5:7"
																										},
																										"nativeSrc": "9048:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9048:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9033:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9033:6:7"
																								},
																								"nativeSrc": "9033:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9033:42:7"
																							},
																							"nativeSrc": "9033:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "9033:42:7"
																						},
																						{
																							"nativeSrc": "9092:24:7",
																							"nodeType": "YulAssignment",
																							"src": "9092:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9106:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "9106:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9114:1:7",
																										"nodeType": "YulLiteral",
																										"src": "9114:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9102:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "9102:3:7"
																								},
																								"nativeSrc": "9102:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9102:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "9092:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9092:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9133:31:7",
																							"nodeType": "YulAssignment",
																							"src": "9133:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9150:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "9150:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9161:2:7",
																										"nodeType": "YulLiteral",
																										"src": "9161:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9146:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "9146:3:7"
																								},
																								"nativeSrc": "9146:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9146:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9133:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "9133:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8981:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "8981:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8984:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8984:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8978:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8978:2:7"
																					},
																					"nativeSrc": "8978:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8978:14:7"
																				},
																				"nativeSrc": "8970:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8993:21:7",
																					"nodeType": "YulBlock",
																					"src": "8993:21:7",
																					"statements": [
																						{
																							"nativeSrc": "8995:17:7",
																							"nodeType": "YulAssignment",
																							"src": "8995:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "9004:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "9004:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9007:4:7",
																										"nodeType": "YulLiteral",
																										"src": "9007:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9000:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "9000:3:7"
																								},
																								"nativeSrc": "9000:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9000:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8995:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "8995:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8974:3:7",
																					"nodeType": "YulBlock",
																					"src": "8974:3:7",
																					"statements": []
																				},
																				"src": "8970:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "9214:156:7",
																					"nodeType": "YulBlock",
																					"src": "9214:156:7",
																					"statements": [
																						{
																							"nativeSrc": "9232:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9232:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9259:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "9259:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9264:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9264:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9255:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "9255:3:7"
																										},
																										"nativeSrc": "9255:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9255:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9249:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9249:5:7"
																								},
																								"nativeSrc": "9249:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9249:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9236:9:7",
																									"nodeType": "YulTypedName",
																									"src": "9236:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9299:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "9299:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9326:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9326:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9341:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "9341:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9349:4:7",
																														"nodeType": "YulLiteral",
																														"src": "9349:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9337:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "9337:3:7"
																												},
																												"nativeSrc": "9337:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "9337:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9307:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "9307:18:7"
																										},
																										"nativeSrc": "9307:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9307:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9292:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9292:6:7"
																								},
																								"nativeSrc": "9292:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9292:64:7"
																							},
																							"nativeSrc": "9292:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "9292:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9197:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "9197:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9206:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "9206:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9194:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "9194:2:7"
																					},
																					"nativeSrc": "9194:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9194:19:7"
																				},
																				"nativeSrc": "9191:179:7",
																				"nodeType": "YulIf",
																				"src": "9191:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9390:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9390:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9404:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "9404:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9412:1:7",
																											"nodeType": "YulLiteral",
																											"src": "9412:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9400:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "9400:3:7"
																									},
																									"nativeSrc": "9400:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "9400:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9416:1:7",
																									"nodeType": "YulLiteral",
																									"src": "9416:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9396:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "9396:3:7"
																							},
																							"nativeSrc": "9396:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9396:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9383:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9383:6:7"
																					},
																					"nativeSrc": "9383:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9383:36:7"
																				},
																				"nativeSrc": "9383:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9383:36:7"
																			}
																		]
																	},
																	"nativeSrc": "8811:618:7",
																	"nodeType": "YulCase",
																	"src": "8811:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8816:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8816:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9446:222:7",
																		"nodeType": "YulBlock",
																		"src": "9446:222:7",
																		"statements": [
																			{
																				"nativeSrc": "9460:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9460:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9473:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9473:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9464:5:7",
																						"nodeType": "YulTypedName",
																						"src": "9464:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9497:67:7",
																					"nodeType": "YulBlock",
																					"src": "9497:67:7",
																					"statements": [
																						{
																							"nativeSrc": "9515:35:7",
																							"nodeType": "YulAssignment",
																							"src": "9515:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9534:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "9534:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9539:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9539:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9530:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "9530:3:7"
																										},
																										"nativeSrc": "9530:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9530:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9524:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9524:5:7"
																								},
																								"nativeSrc": "9524:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9524:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9515:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9515:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9490:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9490:6:7"
																				},
																				"nativeSrc": "9487:77:7",
																				"nodeType": "YulIf",
																				"src": "9487:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9584:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9584:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9643:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9643:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9650:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9650:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9590:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "9590:52:7"
																							},
																							"nativeSrc": "9590:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9590:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9577:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9577:6:7"
																					},
																					"nativeSrc": "9577:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9577:81:7"
																				},
																				"nativeSrc": "9577:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9577:81:7"
																			}
																		]
																	},
																	"nativeSrc": "9438:230:7",
																	"nodeType": "YulCase",
																	"src": "9438:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8791:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8791:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8799:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8799:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8788:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8788:2:7"
																},
																"nativeSrc": "8788:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8788:14:7"
															},
															"nativeSrc": "8781:887:7",
															"nodeType": "YulSwitch",
															"src": "8781:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8279:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8360:4:7",
														"nodeType": "YulTypedName",
														"src": "8360:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8366:3:7",
														"nodeType": "YulTypedName",
														"src": "8366:3:7",
														"type": ""
													}
												],
												"src": "8279:1395:7"
											},
											{
												"body": {
													"nativeSrc": "9745:53:7",
													"nodeType": "YulBlock",
													"src": "9745:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9762:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9762:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9785:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9785:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9767:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "9767:17:7"
																		},
																		"nativeSrc": "9767:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9767:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9755:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9755:6:7"
																},
																"nativeSrc": "9755:37:7",
																"nodeType": "YulFunctionCall",
																"src": "9755:37:7"
															},
															"nativeSrc": "9755:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "9755:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9680:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9733:5:7",
														"nodeType": "YulTypedName",
														"src": "9733:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9740:3:7",
														"nodeType": "YulTypedName",
														"src": "9740:3:7",
														"type": ""
													}
												],
												"src": "9680:118:7"
											},
											{
												"body": {
													"nativeSrc": "9902:124:7",
													"nodeType": "YulBlock",
													"src": "9902:124:7",
													"statements": [
														{
															"nativeSrc": "9912:26:7",
															"nodeType": "YulAssignment",
															"src": "9912:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9924:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9924:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9935:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9935:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9920:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9920:3:7"
																},
																"nativeSrc": "9920:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9920:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9912:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9912:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9992:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9992:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10005:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10005:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10016:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10016:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10001:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10001:3:7"
																		},
																		"nativeSrc": "10001:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10001:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9948:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9948:43:7"
																},
																"nativeSrc": "9948:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9948:71:7"
															},
															"nativeSrc": "9948:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9948:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9804:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9874:9:7",
														"nodeType": "YulTypedName",
														"src": "9874:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9886:6:7",
														"nodeType": "YulTypedName",
														"src": "9886:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9897:4:7",
														"nodeType": "YulTypedName",
														"src": "9897:4:7",
														"type": ""
													}
												],
												"src": "9804:222:7"
											},
											{
												"body": {
													"nativeSrc": "10060:152:7",
													"nodeType": "YulBlock",
													"src": "10060:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10077:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10077:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10080:77:7",
																		"nodeType": "YulLiteral",
																		"src": "10080:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10070:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10070:6:7"
																},
																"nativeSrc": "10070:88:7",
																"nodeType": "YulFunctionCall",
																"src": "10070:88:7"
															},
															"nativeSrc": "10070:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "10070:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10174:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10174:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10177:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10177:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10167:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10167:6:7"
																},
																"nativeSrc": "10167:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10167:15:7"
															},
															"nativeSrc": "10167:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10167:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10198:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10198:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10201:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10201:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10191:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10191:6:7"
																},
																"nativeSrc": "10191:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10191:15:7"
															},
															"nativeSrc": "10191:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10191:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10032:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "10032:180:7"
											},
											{
												"body": {
													"nativeSrc": "10262:147:7",
													"nodeType": "YulBlock",
													"src": "10262:147:7",
													"statements": [
														{
															"nativeSrc": "10272:25:7",
															"nodeType": "YulAssignment",
															"src": "10272:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10295:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10295:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10277:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10277:17:7"
																},
																"nativeSrc": "10277:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10277:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10272:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10272:1:7"
																}
															]
														},
														{
															"nativeSrc": "10306:25:7",
															"nodeType": "YulAssignment",
															"src": "10306:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10329:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10329:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10311:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10311:17:7"
																},
																"nativeSrc": "10311:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10311:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10306:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10306:1:7"
																}
															]
														},
														{
															"nativeSrc": "10340:16:7",
															"nodeType": "YulAssignment",
															"src": "10340:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10351:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10351:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10354:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10354:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10347:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10347:3:7"
																},
																"nativeSrc": "10347:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10347:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10340:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10340:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10380:22:7",
																"nodeType": "YulBlock",
																"src": "10380:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10382:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10382:16:7"
																			},
																			"nativeSrc": "10382:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10382:18:7"
																		},
																		"nativeSrc": "10382:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10382:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10372:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10372:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10375:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10375:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10369:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "10369:2:7"
																},
																"nativeSrc": "10369:10:7",
																"nodeType": "YulFunctionCall",
																"src": "10369:10:7"
															},
															"nativeSrc": "10366:36:7",
															"nodeType": "YulIf",
															"src": "10366:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10218:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10249:1:7",
														"nodeType": "YulTypedName",
														"src": "10249:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10252:1:7",
														"nodeType": "YulTypedName",
														"src": "10252:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10258:3:7",
														"nodeType": "YulTypedName",
														"src": "10258:3:7",
														"type": ""
													}
												],
												"src": "10218:191:7"
											},
											{
												"body": {
													"nativeSrc": "10480:53:7",
													"nodeType": "YulBlock",
													"src": "10480:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10497:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10497:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10520:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10520:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10502:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "10502:17:7"
																		},
																		"nativeSrc": "10502:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10502:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10490:6:7"
																},
																"nativeSrc": "10490:37:7",
																"nodeType": "YulFunctionCall",
																"src": "10490:37:7"
															},
															"nativeSrc": "10490:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "10490:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10415:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10468:5:7",
														"nodeType": "YulTypedName",
														"src": "10468:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10475:3:7",
														"nodeType": "YulTypedName",
														"src": "10475:3:7",
														"type": ""
													}
												],
												"src": "10415:118:7"
											},
											{
												"body": {
													"nativeSrc": "10693:288:7",
													"nodeType": "YulBlock",
													"src": "10693:288:7",
													"statements": [
														{
															"nativeSrc": "10703:26:7",
															"nodeType": "YulAssignment",
															"src": "10703:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10715:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10715:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10726:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10726:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10711:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10711:3:7"
																},
																"nativeSrc": "10711:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10711:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10703:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10703:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10783:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10783:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10796:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10796:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10807:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10807:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10792:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10792:3:7"
																		},
																		"nativeSrc": "10792:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10792:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10739:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10739:43:7"
																},
																"nativeSrc": "10739:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10739:71:7"
															},
															"nativeSrc": "10739:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10739:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10864:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10864:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10877:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10877:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10888:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10888:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10873:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10873:3:7"
																		},
																		"nativeSrc": "10873:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10873:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10820:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10820:43:7"
																},
																"nativeSrc": "10820:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10820:72:7"
															},
															"nativeSrc": "10820:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10820:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10946:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10946:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10959:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10959:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10970:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10970:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10955:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10955:3:7"
																		},
																		"nativeSrc": "10955:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10955:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10902:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10902:43:7"
																},
																"nativeSrc": "10902:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10902:72:7"
															},
															"nativeSrc": "10902:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10902:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10539:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10649:9:7",
														"nodeType": "YulTypedName",
														"src": "10649:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10661:6:7",
														"nodeType": "YulTypedName",
														"src": "10661:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10669:6:7",
														"nodeType": "YulTypedName",
														"src": "10669:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10677:6:7",
														"nodeType": "YulTypedName",
														"src": "10677:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10688:4:7",
														"nodeType": "YulTypedName",
														"src": "10688:4:7",
														"type": ""
													}
												],
												"src": "10539:442:7"
											},
											{
												"body": {
													"nativeSrc": "11085:124:7",
													"nodeType": "YulBlock",
													"src": "11085:124:7",
													"statements": [
														{
															"nativeSrc": "11095:26:7",
															"nodeType": "YulAssignment",
															"src": "11095:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11107:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11107:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11118:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11118:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11103:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11103:3:7"
																},
																"nativeSrc": "11103:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11103:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11095:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11095:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11175:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11175:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11188:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11188:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11199:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11199:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11184:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11184:3:7"
																		},
																		"nativeSrc": "11184:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11184:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11131:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11131:43:7"
																},
																"nativeSrc": "11131:71:7",
																"nodeType": "YulFunctionCall",
																"src": "11131:71:7"
															},
															"nativeSrc": "11131:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "11131:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10987:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11057:9:7",
														"nodeType": "YulTypedName",
														"src": "11057:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11069:6:7",
														"nodeType": "YulTypedName",
														"src": "11069:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11080:4:7",
														"nodeType": "YulTypedName",
														"src": "11080:4:7",
														"type": ""
													}
												],
												"src": "10987:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SSTORE PUSH1 0x2 PUSH1 0x9 SSTORE PUSH1 0xA DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1D78 CODESIZE SUB DUP1 PUSH2 0x1D78 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x47 SWAP2 SWAP1 PUSH2 0x683 JUMP JUMPDEST DUP4 DUP4 DUP4 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x59 SWAP2 SWAP1 PUSH2 0x939 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x69 SWAP2 SWAP1 PUSH2 0x939 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xED DUP2 PUSH2 0x107 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xFE CALLER DUP3 PUSH2 0x1CD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH2 0xAF9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x23F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x251 PUSH1 0x0 DUP4 DUP4 PUSH2 0x255 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2A7 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0xA64 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x37A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x333 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3C3 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x410 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x46D SWAP2 SWAP1 PUSH2 0xADE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B9 DUP3 PUSH2 0x48E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C9 DUP2 PUSH2 0x4AE JUMP JUMPDEST DUP2 EQ PUSH2 0x4D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4E6 DUP2 PUSH2 0x4C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x53F DUP3 PUSH2 0x4F6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x55E JUMPI PUSH2 0x55D PUSH2 0x507 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x571 PUSH2 0x47A JUMP JUMPDEST SWAP1 POP PUSH2 0x57D DUP3 DUP3 PUSH2 0x536 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x59D JUMPI PUSH2 0x59C PUSH2 0x507 JUMP JUMPDEST JUMPDEST PUSH2 0x5A6 DUP3 PUSH2 0x4F6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5D1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F0 PUSH2 0x5EB DUP5 PUSH2 0x582 JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x60C JUMPI PUSH2 0x60B PUSH2 0x4F1 JUMP JUMPDEST JUMPDEST PUSH2 0x617 DUP5 DUP3 DUP6 PUSH2 0x5B3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x634 JUMPI PUSH2 0x633 PUSH2 0x4EC JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x644 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x660 DUP2 PUSH2 0x64D JUMP JUMPDEST DUP2 EQ PUSH2 0x66B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x67D DUP2 PUSH2 0x657 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x69D JUMPI PUSH2 0x69C PUSH2 0x484 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6AB DUP8 DUP3 DUP9 ADD PUSH2 0x4D7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CC JUMPI PUSH2 0x6CB PUSH2 0x489 JUMP JUMPDEST JUMPDEST PUSH2 0x6D8 DUP8 DUP3 DUP9 ADD PUSH2 0x61F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6F9 JUMPI PUSH2 0x6F8 PUSH2 0x489 JUMP JUMPDEST JUMPDEST PUSH2 0x705 DUP8 DUP3 DUP9 ADD PUSH2 0x61F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x716 DUP8 DUP3 DUP9 ADD PUSH2 0x66E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x774 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x787 JUMPI PUSH2 0x786 PUSH2 0x72D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x7EF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x7F9 DUP7 DUP4 PUSH2 0x7B2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x836 PUSH2 0x831 PUSH2 0x82C DUP5 PUSH2 0x64D JUMP JUMPDEST PUSH2 0x811 JUMP JUMPDEST PUSH2 0x64D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x850 DUP4 PUSH2 0x81B JUMP JUMPDEST PUSH2 0x864 PUSH2 0x85C DUP3 PUSH2 0x83D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x7BF JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x879 PUSH2 0x86C JUMP JUMPDEST PUSH2 0x884 DUP2 DUP5 DUP5 PUSH2 0x847 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8A8 JUMPI PUSH2 0x89D PUSH1 0x0 DUP3 PUSH2 0x871 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x88A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x8ED JUMPI PUSH2 0x8BE DUP2 PUSH2 0x78D JUMP JUMPDEST PUSH2 0x8C7 DUP5 PUSH2 0x7A2 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x8D6 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x8EA PUSH2 0x8E2 DUP6 PUSH2 0x7A2 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x889 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x910 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x8F2 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x929 DUP4 DUP4 PUSH2 0x8FF JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x942 DUP3 PUSH2 0x722 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x95B JUMPI PUSH2 0x95A PUSH2 0x507 JUMP JUMPDEST JUMPDEST PUSH2 0x965 DUP3 SLOAD PUSH2 0x75C JUMP JUMPDEST PUSH2 0x970 DUP3 DUP3 DUP6 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x9A3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x991 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x99B DUP6 DUP3 PUSH2 0x91D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x9B1 DUP7 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9D9 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9B4 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x9F6 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x9F2 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x8FF JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA14 DUP2 PUSH2 0x4AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA2F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA6F DUP3 PUSH2 0x64D JUMP JUMPDEST SWAP2 POP PUSH2 0xA7A DUP4 PUSH2 0x64D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA92 JUMPI PUSH2 0xA91 PUSH2 0xA35 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAA1 DUP2 PUSH2 0x64D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xABC PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xA0B JUMP JUMPDEST PUSH2 0xAC9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xAD6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA98 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAF3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1270 DUP1 PUSH2 0xB08 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xC250BED5 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x336 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x7D2D4FEC EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27C JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x3AF57CDB EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x42685D74 EQ PUSH2 0x206 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x1D0806AE EQ PUSH2 0x17C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x352 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xE4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0xFA5 JUMP JUMPDEST PUSH2 0x417 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1014 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x47B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25C PUSH2 0x4C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x266 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0xE4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH2 0x599 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x1100 JUMP JUMPDEST PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32D SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x649 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x361 SWAP1 PUSH2 0x116F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x38D SWAP1 PUSH2 0x116F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3EF PUSH2 0x6CF JUMP JUMPDEST SWAP1 POP PUSH2 0x3FC DUP2 DUP6 DUP6 PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x422 PUSH2 0x6CF JUMP JUMPDEST SWAP1 POP PUSH2 0x42F DUP6 DUP3 DUP6 PUSH2 0x6E9 JUMP JUMPDEST PUSH2 0x43A DUP6 DUP6 DUP6 PUSH2 0x77D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4CB PUSH2 0x871 JUMP JUMPDEST PUSH2 0x4D5 PUSH1 0x0 PUSH2 0x8F8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x516 SWAP1 PUSH2 0x116F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x542 SWAP1 PUSH2 0x116F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x58F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x564 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x58F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x572 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5A4 PUSH2 0x6CF JUMP JUMPDEST SWAP1 POP PUSH2 0x5B1 DUP2 DUP6 DUP6 PUSH2 0x77D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x651 PUSH2 0x871 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6C3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BA SWAP2 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6CC DUP2 PUSH2 0x8F8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6E4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x9BE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F5 DUP5 DUP5 PUSH2 0x5C2 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x777 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x767 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x776 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x9BE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7EF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E6 SWAP2 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x861 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x858 SWAP2 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x86C DUP4 DUP4 DUP4 PUSH2 0xB95 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x879 PUSH2 0x6CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x897 PUSH2 0x4DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8F6 JUMPI PUSH2 0x8BA PUSH2 0x6CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8ED SWAP2 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA30 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA27 SWAP2 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAA2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA99 SWAP2 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB8F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB86 SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBE7 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBDB SWAP2 SWAP1 PUSH2 0x1206 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC73 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD03 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD50 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDAD SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDF4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1C DUP3 PUSH2 0xDBA JUMP JUMPDEST PUSH2 0xE26 DUP2 DUP6 PUSH2 0xDC5 JUMP JUMPDEST SWAP4 POP PUSH2 0xE36 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0xE3F DUP2 PUSH2 0xE00 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE64 DUP2 DUP5 PUSH2 0xE11 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE9C DUP3 PUSH2 0xE71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEAC DUP2 PUSH2 0xE91 JUMP JUMPDEST DUP2 EQ PUSH2 0xEB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEC9 DUP2 PUSH2 0xEA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE2 DUP2 PUSH2 0xECF JUMP JUMPDEST DUP2 EQ PUSH2 0xEED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEFF DUP2 PUSH2 0xED9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF1C JUMPI PUSH2 0xF1B PUSH2 0xE6C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF2A DUP6 DUP3 DUP7 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF3B DUP6 DUP3 DUP7 ADD PUSH2 0xEF0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF5A DUP2 PUSH2 0xF45 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF75 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF84 DUP2 PUSH2 0xECF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF9F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFBE JUMPI PUSH2 0xFBD PUSH2 0xE6C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFCC DUP7 DUP3 DUP8 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xFDD DUP7 DUP3 DUP8 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFEE DUP7 DUP3 DUP8 ADD PUSH2 0xEF0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100E DUP2 PUSH2 0xFF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1029 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1005 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1054 PUSH2 0x104F PUSH2 0x104A DUP5 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x102F JUMP JUMPDEST PUSH2 0xE71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1066 DUP3 PUSH2 0x1039 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1078 DUP3 PUSH2 0x105B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1088 DUP2 PUSH2 0x106D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x107F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10BF JUMPI PUSH2 0x10BE PUSH2 0xE6C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10CD DUP5 DUP3 DUP6 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10DF DUP2 PUSH2 0xE91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10FA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1117 JUMPI PUSH2 0x1116 PUSH2 0xE6C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1125 DUP6 DUP3 DUP7 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1136 DUP6 DUP3 DUP7 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1187 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x119A JUMPI PUSH2 0x1199 PUSH2 0x1140 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x11B5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x10D6 JUMP JUMPDEST PUSH2 0x11C2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF7B JUMP JUMPDEST PUSH2 0x11CF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF7B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1211 DUP3 PUSH2 0xECF JUMP JUMPDEST SWAP2 POP PUSH2 0x121C DUP4 PUSH2 0xECF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1234 JUMPI PUSH2 0x1233 PUSH2 0x11D7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0x1E OR LOG0 DUP12 CALL DUP8 DUP10 PUSH6 0x256510E6B770 0x28 GASLIMIT 0xC0 PUSH22 0xC2A9C5DCCC655D56ADE2FBAD664736F6C634300081C STOP CALLER ",
							"sourceMap": "600:753:6:-:0;;;1037:7;1007:37;;1123:1;1087:37;;1189:2;1160:31;;641:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;806:12;784:4;790:6;1675:5:2;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;831:30:6::2;837:10;849:11;831:5;;;:30;;:::i;:::-;641:228:::0;;;;600:753;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:75:7:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:308::-;1869:4;1959:18;1951:6;1948:30;1945:56;;;1981:18;;:::i;:::-;1945:56;2019:29;2041:6;2019:29;:::i;:::-;2011:37;;2103:4;2097;2093:15;2085:23;;1807:308;;;:::o;2121:248::-;2203:1;2213:113;2227:6;2224:1;2221:13;2213:113;;;2312:1;2307:3;2303:11;2297:18;2293:1;2288:3;2284:11;2277:39;2249:2;2246:1;2242:10;2237:15;;2213:113;;;2360:1;2351:6;2346:3;2342:16;2335:27;2183:186;2121:248;;;:::o;2375:434::-;2464:5;2489:66;2505:49;2547:6;2505:49;:::i;:::-;2489:66;:::i;:::-;2480:75;;2578:6;2571:5;2564:21;2616:4;2609:5;2605:16;2654:3;2645:6;2640:3;2636:16;2633:25;2630:112;;;2661:79;;:::i;:::-;2630:112;2751:52;2796:6;2791:3;2786;2751:52;:::i;:::-;2470:339;2375:434;;;;;:::o;2829:355::-;2896:5;2945:3;2938:4;2930:6;2926:17;2922:27;2912:122;;2953:79;;:::i;:::-;2912:122;3063:6;3057:13;3088:90;3174:3;3166:6;3159:4;3151:6;3147:17;3088:90;:::i;:::-;3079:99;;2902:282;2829:355;;;;:::o;3190:77::-;3227:7;3256:5;3245:16;;3190:77;;;:::o;3273:122::-;3346:24;3364:5;3346:24;:::i;:::-;3339:5;3336:35;3326:63;;3385:1;3382;3375:12;3326:63;3273:122;:::o;3401:143::-;3458:5;3489:6;3483:13;3474:22;;3505:33;3532:5;3505:33;:::i;:::-;3401:143;;;;:::o;3550:1166::-;3667:6;3675;3683;3691;3740:3;3728:9;3719:7;3715:23;3711:33;3708:120;;;3747:79;;:::i;:::-;3708:120;3867:1;3892:64;3948:7;3939:6;3928:9;3924:22;3892:64;:::i;:::-;3882:74;;3838:128;4026:2;4015:9;4011:18;4005:25;4057:18;4049:6;4046:30;4043:117;;;4079:79;;:::i;:::-;4043:117;4184:74;4250:7;4241:6;4230:9;4226:22;4184:74;:::i;:::-;4174:84;;3976:292;4328:2;4317:9;4313:18;4307:25;4359:18;4351:6;4348:30;4345:117;;;4381:79;;:::i;:::-;4345:117;4486:74;4552:7;4543:6;4532:9;4528:22;4486:74;:::i;:::-;4476:84;;4278:292;4609:2;4635:64;4691:7;4682:6;4671:9;4667:22;4635:64;:::i;:::-;4625:74;;4580:129;3550:1166;;;;;;;:::o;4722:99::-;4774:6;4808:5;4802:12;4792:22;;4722:99;;;:::o;4827:180::-;4875:77;4872:1;4865:88;4972:4;4969:1;4962:15;4996:4;4993:1;4986:15;5013:320;5057:6;5094:1;5088:4;5084:12;5074:22;;5141:1;5135:4;5131:12;5162:18;5152:81;;5218:4;5210:6;5206:17;5196:27;;5152:81;5280:2;5272:6;5269:14;5249:18;5246:38;5243:84;;5299:18;;:::i;:::-;5243:84;5064:269;5013:320;;;:::o;5339:141::-;5388:4;5411:3;5403:11;;5434:3;5431:1;5424:14;5468:4;5465:1;5455:18;5447:26;;5339:141;;;:::o;5486:93::-;5523:6;5570:2;5565;5558:5;5554:14;5550:23;5540:33;;5486:93;;;:::o;5585:107::-;5629:8;5679:5;5673:4;5669:16;5648:37;;5585:107;;;;:::o;5698:393::-;5767:6;5817:1;5805:10;5801:18;5840:97;5870:66;5859:9;5840:97;:::i;:::-;5958:39;5988:8;5977:9;5958:39;:::i;:::-;5946:51;;6030:4;6026:9;6019:5;6015:21;6006:30;;6079:4;6069:8;6065:19;6058:5;6055:30;6045:40;;5774:317;;5698:393;;;;;:::o;6097:60::-;6125:3;6146:5;6139:12;;6097:60;;;:::o;6163:142::-;6213:9;6246:53;6264:34;6273:24;6291:5;6273:24;:::i;:::-;6264:34;:::i;:::-;6246:53;:::i;:::-;6233:66;;6163:142;;;:::o;6311:75::-;6354:3;6375:5;6368:12;;6311:75;;;:::o;6392:269::-;6502:39;6533:7;6502:39;:::i;:::-;6563:91;6612:41;6636:16;6612:41;:::i;:::-;6604:6;6597:4;6591:11;6563:91;:::i;:::-;6557:4;6550:105;6468:193;6392:269;;;:::o;6667:73::-;6712:3;6667:73;:::o;6746:189::-;6823:32;;:::i;:::-;6864:65;6922:6;6914;6908:4;6864:65;:::i;:::-;6799:136;6746:189;;:::o;6941:186::-;7001:120;7018:3;7011:5;7008:14;7001:120;;;7072:39;7109:1;7102:5;7072:39;:::i;:::-;7045:1;7038:5;7034:13;7025:22;;7001:120;;;6941:186;;:::o;7133:543::-;7234:2;7229:3;7226:11;7223:446;;;7268:38;7300:5;7268:38;:::i;:::-;7352:29;7370:10;7352:29;:::i;:::-;7342:8;7338:44;7535:2;7523:10;7520:18;7517:49;;;7556:8;7541:23;;7517:49;7579:80;7635:22;7653:3;7635:22;:::i;:::-;7625:8;7621:37;7608:11;7579:80;:::i;:::-;7238:431;;7223:446;7133:543;;;:::o;7682:117::-;7736:8;7786:5;7780:4;7776:16;7755:37;;7682:117;;;;:::o;7805:169::-;7849:6;7882:51;7930:1;7926:6;7918:5;7915:1;7911:13;7882:51;:::i;:::-;7878:56;7963:4;7957;7953:15;7943:25;;7856:118;7805:169;;;;:::o;7979:295::-;8055:4;8201:29;8226:3;8220:4;8201:29;:::i;:::-;8193:37;;8263:3;8260:1;8256:11;8250:4;8247:21;8239:29;;7979:295;;;;:::o;8279:1395::-;8396:37;8429:3;8396:37;:::i;:::-;8498:18;8490:6;8487:30;8484:56;;;8520:18;;:::i;:::-;8484:56;8564:38;8596:4;8590:11;8564:38;:::i;:::-;8649:67;8709:6;8701;8695:4;8649:67;:::i;:::-;8743:1;8767:4;8754:17;;8799:2;8791:6;8788:14;8816:1;8811:618;;;;9473:1;9490:6;9487:77;;;9539:9;9534:3;9530:19;9524:26;9515:35;;9487:77;9590:67;9650:6;9643:5;9590:67;:::i;:::-;9584:4;9577:81;9446:222;8781:887;;8811:618;8863:4;8859:9;8851:6;8847:22;8897:37;8929:4;8897:37;:::i;:::-;8956:1;8970:208;8984:7;8981:1;8978:14;8970:208;;;9063:9;9058:3;9054:19;9048:26;9040:6;9033:42;9114:1;9106:6;9102:14;9092:24;;9161:2;9150:9;9146:18;9133:31;;9007:4;9004:1;9000:12;8995:17;;8970:208;;;9206:6;9197:7;9194:19;9191:179;;;9264:9;9259:3;9255:19;9249:26;9307:48;9349:4;9341:6;9337:17;9326:9;9307:48;:::i;:::-;9299:6;9292:64;9214:156;9191:179;9416:1;9412;9404:6;9400:14;9396:22;9390:4;9383:36;8818:611;;;8781:887;;8371:1303;;;8279:1395;;:::o;9680:118::-;9767:24;9785:5;9767:24;:::i;:::-;9762:3;9755:37;9680:118;;:::o;9804:222::-;9897:4;9935:2;9924:9;9920:18;9912:26;;9948:71;10016:1;10005:9;10001:17;9992:6;9948:71;:::i;:::-;9804:222;;;;:::o;10032:180::-;10080:77;10077:1;10070:88;10177:4;10174:1;10167:15;10201:4;10198:1;10191:15;10218:191;10258:3;10277:20;10295:1;10277:20;:::i;:::-;10272:25;;10311:20;10329:1;10311:20;:::i;:::-;10306:25;;10354:1;10351;10347:9;10340:16;;10375:3;10372:1;10369:10;10366:36;;;10382:18;;:::i;:::-;10366:36;10218:191;;;;:::o;10415:118::-;10502:24;10520:5;10502:24;:::i;:::-;10497:3;10490:37;10415:118;;:::o;10539:442::-;10688:4;10726:2;10715:9;10711:18;10703:26;;10739:71;10807:1;10796:9;10792:17;10783:6;10739:71;:::i;:::-;10820:72;10888:2;10877:9;10873:18;10864:6;10820:72;:::i;:::-;10902;10970:2;10959:9;10955:18;10946:6;10902:72;:::i;:::-;10539:442;;;;;;:::o;10987:222::-;11080:4;11118:2;11107:9;11103:18;11095:26;;11131:71;11199:1;11188:9;11184:17;11175:6;11131:71;:::i;:::-;10987:222;;;;:::o;600:753:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 1751,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 2494,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2161,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 1743,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 1769,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2296,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 1917,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 2965,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 1474,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 996,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1147,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@bondingCoefficient_1022": {
									"entryPoint": 1239,
									"id": 1022,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 1094,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialPrice_1019": {
									"entryPoint": 1041,
									"id": 1019,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@kokoro_1014": {
									"entryPoint": 1103,
									"id": 1014,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 850,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nftFraction_1025": {
									"entryPoint": 1468,
									"id": 1025,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1245,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1219,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1287,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSacrificed_1016": {
									"entryPoint": 1141,
									"id": 1016,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": 1031,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1047,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1609,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1433,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_Kokoro_$1033_to_t_address_fromStack": {
									"entryPoint": 4223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4512,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_Kokoro_$1033__to_t_address__fromStack_reversed": {
									"entryPoint": 4238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_Kokoro_$1033_to_t_address": {
									"entryPoint": 4205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3542,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4567,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4416,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3692,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 3747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8280:7",
										"nodeType": "YulBlock",
										"src": "0:8280:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:186:7",
													"nodeType": "YulBlock",
													"src": "349:186:7",
													"statements": [
														{
															"nativeSrc": "360:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "360:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "369:1:7",
																"nodeType": "YulLiteral",
																"src": "369:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "364:1:7",
																	"nodeType": "YulTypedName",
																	"src": "364:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "429:63:7",
																"nodeType": "YulBlock",
																"src": "429:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "454:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "454:3:7"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "459:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "459:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "450:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "450:3:7"
																					},
																					"nativeSrc": "450:11:7",
																					"nodeType": "YulFunctionCall",
																					"src": "450:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "473:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "473:3:7"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "478:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "478:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "469:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "469:3:7"
																							},
																							"nativeSrc": "469:11:7",
																							"nodeType": "YulFunctionCall",
																							"src": "469:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "463:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "463:5:7"
																					},
																					"nativeSrc": "463:18:7",
																					"nodeType": "YulFunctionCall",
																					"src": "463:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "443:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "443:6:7"
																			},
																			"nativeSrc": "443:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "443:39:7"
																		},
																		"nativeSrc": "443:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "443:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "390:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "390:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "393:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "393:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "387:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "387:2:7"
																},
																"nativeSrc": "387:13:7",
																"nodeType": "YulFunctionCall",
																"src": "387:13:7"
															},
															"nativeSrc": "379:113:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "401:19:7",
																"nodeType": "YulBlock",
																"src": "401:19:7",
																"statements": [
																	{
																		"nativeSrc": "403:15:7",
																		"nodeType": "YulAssignment",
																		"src": "403:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "412:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "412:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "415:2:7",
																					"nodeType": "YulLiteral",
																					"src": "415:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "408:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:3:7"
																			},
																			"nativeSrc": "408:10:7",
																			"nodeType": "YulFunctionCall",
																			"src": "408:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "403:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "383:3:7",
																"nodeType": "YulBlock",
																"src": "383:3:7",
																"statements": []
															},
															"src": "379:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "512:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "512:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "517:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "517:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "508:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "508:3:7"
																		},
																		"nativeSrc": "508:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "508:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "526:1:7",
																		"nodeType": "YulLiteral",
																		"src": "526:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "501:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "501:6:7"
																},
																"nativeSrc": "501:27:7",
																"nodeType": "YulFunctionCall",
																"src": "501:27:7"
															},
															"nativeSrc": "501:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "501:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:248:7"
											},
											{
												"body": {
													"nativeSrc": "589:54:7",
													"nodeType": "YulBlock",
													"src": "589:54:7",
													"statements": [
														{
															"nativeSrc": "599:38:7",
															"nodeType": "YulAssignment",
															"src": "599:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "617:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "617:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "624:2:7",
																				"nodeType": "YulLiteral",
																				"src": "624:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "613:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "613:3:7"
																		},
																		"nativeSrc": "613:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "613:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "633:2:7",
																				"nodeType": "YulLiteral",
																				"src": "633:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "629:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "629:3:7"
																		},
																		"nativeSrc": "629:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "629:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "609:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "609:3:7"
																},
																"nativeSrc": "609:28:7",
																"nodeType": "YulFunctionCall",
																"src": "609:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "599:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "599:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "541:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "572:5:7",
														"nodeType": "YulTypedName",
														"src": "572:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "582:6:7",
														"nodeType": "YulTypedName",
														"src": "582:6:7",
														"type": ""
													}
												],
												"src": "541:102:7"
											},
											{
												"body": {
													"nativeSrc": "741:285:7",
													"nodeType": "YulBlock",
													"src": "741:285:7",
													"statements": [
														{
															"nativeSrc": "751:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "751:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "798:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "798:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "765:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "765:32:7"
																},
																"nativeSrc": "765:39:7",
																"nodeType": "YulFunctionCall",
																"src": "765:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "755:6:7",
																	"nodeType": "YulTypedName",
																	"src": "755:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "813:78:7",
															"nodeType": "YulAssignment",
															"src": "813:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "879:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "879:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "884:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "884:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "820:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "820:58:7"
																},
																"nativeSrc": "820:71:7",
																"nodeType": "YulFunctionCall",
																"src": "820:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "813:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "813:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "939:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "939:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "946:4:7",
																				"nodeType": "YulLiteral",
																				"src": "946:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "935:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "935:3:7"
																		},
																		"nativeSrc": "935:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "935:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "953:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "953:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "958:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "958:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "900:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "900:34:7"
																},
																"nativeSrc": "900:65:7",
																"nodeType": "YulFunctionCall",
																"src": "900:65:7"
															},
															"nativeSrc": "900:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "900:65:7"
														},
														{
															"nativeSrc": "974:46:7",
															"nodeType": "YulAssignment",
															"src": "974:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "985:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "985:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1012:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1012:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "990:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "990:21:7"
																		},
																		"nativeSrc": "990:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "990:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "981:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "981:3:7"
																},
																"nativeSrc": "981:39:7",
																"nodeType": "YulFunctionCall",
																"src": "981:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "974:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "974:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "649:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "722:5:7",
														"nodeType": "YulTypedName",
														"src": "722:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "729:3:7",
														"nodeType": "YulTypedName",
														"src": "729:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "737:3:7",
														"nodeType": "YulTypedName",
														"src": "737:3:7",
														"type": ""
													}
												],
												"src": "649:377:7"
											},
											{
												"body": {
													"nativeSrc": "1150:195:7",
													"nodeType": "YulBlock",
													"src": "1150:195:7",
													"statements": [
														{
															"nativeSrc": "1160:26:7",
															"nodeType": "YulAssignment",
															"src": "1160:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1172:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1172:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1183:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1183:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1168:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1168:3:7"
																},
																"nativeSrc": "1168:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1168:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1160:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1160:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1207:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1207:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1218:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1218:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1203:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1203:3:7"
																		},
																		"nativeSrc": "1203:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1203:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1226:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1226:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1232:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1232:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1222:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1222:3:7"
																		},
																		"nativeSrc": "1222:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1222:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1196:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1196:6:7"
																},
																"nativeSrc": "1196:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1196:47:7"
															},
															"nativeSrc": "1196:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1196:47:7"
														},
														{
															"nativeSrc": "1252:86:7",
															"nodeType": "YulAssignment",
															"src": "1252:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1324:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1324:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1333:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1333:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1260:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1260:63:7"
																},
																"nativeSrc": "1260:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1260:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1252:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1252:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1032:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1122:9:7",
														"nodeType": "YulTypedName",
														"src": "1122:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1134:6:7",
														"nodeType": "YulTypedName",
														"src": "1134:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1145:4:7",
														"nodeType": "YulTypedName",
														"src": "1145:4:7",
														"type": ""
													}
												],
												"src": "1032:313:7"
											},
											{
												"body": {
													"nativeSrc": "1391:35:7",
													"nodeType": "YulBlock",
													"src": "1391:35:7",
													"statements": [
														{
															"nativeSrc": "1401:19:7",
															"nodeType": "YulAssignment",
															"src": "1401:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1417:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1417:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1411:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1411:5:7"
																},
																"nativeSrc": "1411:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1411:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1401:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1351:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1384:6:7",
														"nodeType": "YulTypedName",
														"src": "1384:6:7",
														"type": ""
													}
												],
												"src": "1351:75:7"
											},
											{
												"body": {
													"nativeSrc": "1521:28:7",
													"nodeType": "YulBlock",
													"src": "1521:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1541:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1531:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:7"
																},
																"nativeSrc": "1531:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1531:12:7"
															},
															"nativeSrc": "1531:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1531:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1432:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1432:117:7"
											},
											{
												"body": {
													"nativeSrc": "1644:28:7",
													"nodeType": "YulBlock",
													"src": "1644:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1661:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1661:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1664:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1664:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1654:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1654:6:7"
																},
																"nativeSrc": "1654:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1654:12:7"
															},
															"nativeSrc": "1654:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1654:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1555:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1555:117:7"
											},
											{
												"body": {
													"nativeSrc": "1723:81:7",
													"nodeType": "YulBlock",
													"src": "1723:81:7",
													"statements": [
														{
															"nativeSrc": "1733:65:7",
															"nodeType": "YulAssignment",
															"src": "1733:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1748:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1748:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1755:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1755:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1744:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1744:3:7"
																},
																"nativeSrc": "1744:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1744:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1733:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1733:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1678:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1705:5:7",
														"nodeType": "YulTypedName",
														"src": "1705:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1715:7:7",
														"nodeType": "YulTypedName",
														"src": "1715:7:7",
														"type": ""
													}
												],
												"src": "1678:126:7"
											},
											{
												"body": {
													"nativeSrc": "1855:51:7",
													"nodeType": "YulBlock",
													"src": "1855:51:7",
													"statements": [
														{
															"nativeSrc": "1865:35:7",
															"nodeType": "YulAssignment",
															"src": "1865:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1894:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1894:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1876:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1876:17:7"
																},
																"nativeSrc": "1876:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1876:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1865:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1865:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1810:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1837:5:7",
														"nodeType": "YulTypedName",
														"src": "1837:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1847:7:7",
														"nodeType": "YulTypedName",
														"src": "1847:7:7",
														"type": ""
													}
												],
												"src": "1810:96:7"
											},
											{
												"body": {
													"nativeSrc": "1955:79:7",
													"nodeType": "YulBlock",
													"src": "1955:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2012:16:7",
																"nodeType": "YulBlock",
																"src": "2012:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2021:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2021:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2024:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2024:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2014:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2014:6:7"
																			},
																			"nativeSrc": "2014:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2014:12:7"
																		},
																		"nativeSrc": "2014:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2014:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1978:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1978:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2003:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2003:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1985:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1985:17:7"
																				},
																				"nativeSrc": "1985:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1985:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1975:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1975:2:7"
																		},
																		"nativeSrc": "1975:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1975:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1968:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1968:6:7"
																},
																"nativeSrc": "1968:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1968:43:7"
															},
															"nativeSrc": "1965:63:7",
															"nodeType": "YulIf",
															"src": "1965:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1912:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1948:5:7",
														"nodeType": "YulTypedName",
														"src": "1948:5:7",
														"type": ""
													}
												],
												"src": "1912:122:7"
											},
											{
												"body": {
													"nativeSrc": "2092:87:7",
													"nodeType": "YulBlock",
													"src": "2092:87:7",
													"statements": [
														{
															"nativeSrc": "2102:29:7",
															"nodeType": "YulAssignment",
															"src": "2102:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2124:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2124:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2111:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2111:12:7"
																},
																"nativeSrc": "2111:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2111:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2102:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2102:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2167:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2167:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2140:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2140:26:7"
																},
																"nativeSrc": "2140:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2140:33:7"
															},
															"nativeSrc": "2140:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2140:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2040:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2070:6:7",
														"nodeType": "YulTypedName",
														"src": "2070:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2078:3:7",
														"nodeType": "YulTypedName",
														"src": "2078:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2086:5:7",
														"nodeType": "YulTypedName",
														"src": "2086:5:7",
														"type": ""
													}
												],
												"src": "2040:139:7"
											},
											{
												"body": {
													"nativeSrc": "2230:32:7",
													"nodeType": "YulBlock",
													"src": "2230:32:7",
													"statements": [
														{
															"nativeSrc": "2240:16:7",
															"nodeType": "YulAssignment",
															"src": "2240:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2251:5:7",
																"nodeType": "YulIdentifier",
																"src": "2251:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2240:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2240:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2185:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2212:5:7",
														"nodeType": "YulTypedName",
														"src": "2212:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2222:7:7",
														"nodeType": "YulTypedName",
														"src": "2222:7:7",
														"type": ""
													}
												],
												"src": "2185:77:7"
											},
											{
												"body": {
													"nativeSrc": "2311:79:7",
													"nodeType": "YulBlock",
													"src": "2311:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2368:16:7",
																"nodeType": "YulBlock",
																"src": "2368:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2377:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2377:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2380:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2380:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2370:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2370:6:7"
																			},
																			"nativeSrc": "2370:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2370:12:7"
																		},
																		"nativeSrc": "2370:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2370:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2334:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2334:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2359:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2359:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2341:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2341:17:7"
																				},
																				"nativeSrc": "2341:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2341:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2331:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2331:2:7"
																		},
																		"nativeSrc": "2331:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2331:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2324:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:7"
																},
																"nativeSrc": "2324:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2324:43:7"
															},
															"nativeSrc": "2321:63:7",
															"nodeType": "YulIf",
															"src": "2321:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2268:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2304:5:7",
														"nodeType": "YulTypedName",
														"src": "2304:5:7",
														"type": ""
													}
												],
												"src": "2268:122:7"
											},
											{
												"body": {
													"nativeSrc": "2448:87:7",
													"nodeType": "YulBlock",
													"src": "2448:87:7",
													"statements": [
														{
															"nativeSrc": "2458:29:7",
															"nodeType": "YulAssignment",
															"src": "2458:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2480:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2480:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2467:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2467:12:7"
																},
																"nativeSrc": "2467:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2467:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2458:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2458:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2523:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2523:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2496:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2496:26:7"
																},
																"nativeSrc": "2496:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2496:33:7"
															},
															"nativeSrc": "2496:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2496:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2396:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2426:6:7",
														"nodeType": "YulTypedName",
														"src": "2426:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2434:3:7",
														"nodeType": "YulTypedName",
														"src": "2434:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2442:5:7",
														"nodeType": "YulTypedName",
														"src": "2442:5:7",
														"type": ""
													}
												],
												"src": "2396:139:7"
											},
											{
												"body": {
													"nativeSrc": "2624:391:7",
													"nodeType": "YulBlock",
													"src": "2624:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2670:83:7",
																"nodeType": "YulBlock",
																"src": "2670:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2672:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2672:77:7"
																			},
																			"nativeSrc": "2672:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2672:79:7"
																		},
																		"nativeSrc": "2672:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2672:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2645:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2645:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2654:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2654:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2641:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2641:3:7"
																		},
																		"nativeSrc": "2641:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2641:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2666:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2666:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2637:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2637:3:7"
																},
																"nativeSrc": "2637:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2637:32:7"
															},
															"nativeSrc": "2634:119:7",
															"nodeType": "YulIf",
															"src": "2634:119:7"
														},
														{
															"nativeSrc": "2763:117:7",
															"nodeType": "YulBlock",
															"src": "2763:117:7",
															"statements": [
																{
																	"nativeSrc": "2778:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2778:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2792:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2792:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2782:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2782:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2807:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2807:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2842:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2842:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2853:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2853:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2838:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2838:3:7"
																				},
																				"nativeSrc": "2838:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2838:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2862:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2862:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2817:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2817:20:7"
																		},
																		"nativeSrc": "2817:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2817:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2807:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2807:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2890:118:7",
															"nodeType": "YulBlock",
															"src": "2890:118:7",
															"statements": [
																{
																	"nativeSrc": "2905:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2905:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2919:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2919:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2909:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2909:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2935:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2935:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2970:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2970:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2981:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2981:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2966:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2966:3:7"
																				},
																				"nativeSrc": "2966:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2966:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2990:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2990:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2945:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2945:20:7"
																		},
																		"nativeSrc": "2945:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2945:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2935:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2935:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2541:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2586:9:7",
														"nodeType": "YulTypedName",
														"src": "2586:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2597:7:7",
														"nodeType": "YulTypedName",
														"src": "2597:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2609:6:7",
														"nodeType": "YulTypedName",
														"src": "2609:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2617:6:7",
														"nodeType": "YulTypedName",
														"src": "2617:6:7",
														"type": ""
													}
												],
												"src": "2541:474:7"
											},
											{
												"body": {
													"nativeSrc": "3063:48:7",
													"nodeType": "YulBlock",
													"src": "3063:48:7",
													"statements": [
														{
															"nativeSrc": "3073:32:7",
															"nodeType": "YulAssignment",
															"src": "3073:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3098:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3098:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3091:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3091:6:7"
																		},
																		"nativeSrc": "3091:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3091:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3084:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3084:6:7"
																},
																"nativeSrc": "3084:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3084:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3073:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3073:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3021:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3045:5:7",
														"nodeType": "YulTypedName",
														"src": "3045:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3055:7:7",
														"nodeType": "YulTypedName",
														"src": "3055:7:7",
														"type": ""
													}
												],
												"src": "3021:90:7"
											},
											{
												"body": {
													"nativeSrc": "3176:50:7",
													"nodeType": "YulBlock",
													"src": "3176:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3193:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3193:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3213:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3213:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3198:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3198:14:7"
																		},
																		"nativeSrc": "3198:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3198:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3186:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3186:6:7"
																},
																"nativeSrc": "3186:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3186:34:7"
															},
															"nativeSrc": "3186:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3186:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3117:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3164:5:7",
														"nodeType": "YulTypedName",
														"src": "3164:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3171:3:7",
														"nodeType": "YulTypedName",
														"src": "3171:3:7",
														"type": ""
													}
												],
												"src": "3117:109:7"
											},
											{
												"body": {
													"nativeSrc": "3324:118:7",
													"nodeType": "YulBlock",
													"src": "3324:118:7",
													"statements": [
														{
															"nativeSrc": "3334:26:7",
															"nodeType": "YulAssignment",
															"src": "3334:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3346:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3346:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3357:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3357:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3342:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3342:3:7"
																},
																"nativeSrc": "3342:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3342:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3334:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3334:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3408:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3408:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3421:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3432:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3432:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3417:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:7"
																		},
																		"nativeSrc": "3417:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3417:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3370:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3370:37:7"
																},
																"nativeSrc": "3370:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3370:65:7"
															},
															"nativeSrc": "3370:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3370:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3232:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3296:9:7",
														"nodeType": "YulTypedName",
														"src": "3296:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3308:6:7",
														"nodeType": "YulTypedName",
														"src": "3308:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3319:4:7",
														"nodeType": "YulTypedName",
														"src": "3319:4:7",
														"type": ""
													}
												],
												"src": "3232:210:7"
											},
											{
												"body": {
													"nativeSrc": "3513:53:7",
													"nodeType": "YulBlock",
													"src": "3513:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3530:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3530:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3553:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3553:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3535:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3535:17:7"
																		},
																		"nativeSrc": "3535:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3535:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3523:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:7"
																},
																"nativeSrc": "3523:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3523:37:7"
															},
															"nativeSrc": "3523:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3523:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3448:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3501:5:7",
														"nodeType": "YulTypedName",
														"src": "3501:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3508:3:7",
														"nodeType": "YulTypedName",
														"src": "3508:3:7",
														"type": ""
													}
												],
												"src": "3448:118:7"
											},
											{
												"body": {
													"nativeSrc": "3670:124:7",
													"nodeType": "YulBlock",
													"src": "3670:124:7",
													"statements": [
														{
															"nativeSrc": "3680:26:7",
															"nodeType": "YulAssignment",
															"src": "3680:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3692:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3692:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3703:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3703:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3688:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3688:3:7"
																},
																"nativeSrc": "3688:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3688:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3680:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3680:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3760:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3760:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3773:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3773:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3784:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3784:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3769:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3769:3:7"
																		},
																		"nativeSrc": "3769:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3769:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3716:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3716:43:7"
																},
																"nativeSrc": "3716:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3716:71:7"
															},
															"nativeSrc": "3716:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3716:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3572:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3642:9:7",
														"nodeType": "YulTypedName",
														"src": "3642:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3654:6:7",
														"nodeType": "YulTypedName",
														"src": "3654:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3665:4:7",
														"nodeType": "YulTypedName",
														"src": "3665:4:7",
														"type": ""
													}
												],
												"src": "3572:222:7"
											},
											{
												"body": {
													"nativeSrc": "3900:519:7",
													"nodeType": "YulBlock",
													"src": "3900:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3946:83:7",
																"nodeType": "YulBlock",
																"src": "3946:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3948:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3948:77:7"
																			},
																			"nativeSrc": "3948:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3948:79:7"
																		},
																		"nativeSrc": "3948:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3948:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3921:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3921:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3930:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3930:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3917:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3917:3:7"
																		},
																		"nativeSrc": "3917:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3917:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3942:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3942:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3913:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3913:3:7"
																},
																"nativeSrc": "3913:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3913:32:7"
															},
															"nativeSrc": "3910:119:7",
															"nodeType": "YulIf",
															"src": "3910:119:7"
														},
														{
															"nativeSrc": "4039:117:7",
															"nodeType": "YulBlock",
															"src": "4039:117:7",
															"statements": [
																{
																	"nativeSrc": "4054:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4054:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4068:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4068:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4058:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4058:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4083:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4083:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4118:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4118:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4129:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4129:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4114:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4114:3:7"
																				},
																				"nativeSrc": "4114:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4114:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4138:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4138:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4093:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4093:20:7"
																		},
																		"nativeSrc": "4093:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4083:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4083:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4166:118:7",
															"nodeType": "YulBlock",
															"src": "4166:118:7",
															"statements": [
																{
																	"nativeSrc": "4181:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4181:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4195:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4195:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4185:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4185:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4211:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4211:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4246:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4246:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4257:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4257:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4242:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4242:3:7"
																				},
																				"nativeSrc": "4242:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4242:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4266:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4266:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4221:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4221:20:7"
																		},
																		"nativeSrc": "4221:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4221:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4211:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4211:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4294:118:7",
															"nodeType": "YulBlock",
															"src": "4294:118:7",
															"statements": [
																{
																	"nativeSrc": "4309:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4309:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4323:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4323:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4313:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4313:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4339:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4339:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4374:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4374:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4385:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4385:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4370:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4370:3:7"
																				},
																				"nativeSrc": "4370:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4370:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4394:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4394:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4349:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4349:20:7"
																		},
																		"nativeSrc": "4349:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4339:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4339:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3800:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3854:9:7",
														"nodeType": "YulTypedName",
														"src": "3854:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3865:7:7",
														"nodeType": "YulTypedName",
														"src": "3865:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3877:6:7",
														"nodeType": "YulTypedName",
														"src": "3877:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3885:6:7",
														"nodeType": "YulTypedName",
														"src": "3885:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3893:6:7",
														"nodeType": "YulTypedName",
														"src": "3893:6:7",
														"type": ""
													}
												],
												"src": "3800:619:7"
											},
											{
												"body": {
													"nativeSrc": "4468:43:7",
													"nodeType": "YulBlock",
													"src": "4468:43:7",
													"statements": [
														{
															"nativeSrc": "4478:27:7",
															"nodeType": "YulAssignment",
															"src": "4478:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4493:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4500:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4500:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4489:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4489:3:7"
																},
																"nativeSrc": "4489:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4489:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4478:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4478:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4425:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4450:5:7",
														"nodeType": "YulTypedName",
														"src": "4450:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4460:7:7",
														"nodeType": "YulTypedName",
														"src": "4460:7:7",
														"type": ""
													}
												],
												"src": "4425:86:7"
											},
											{
												"body": {
													"nativeSrc": "4578:51:7",
													"nodeType": "YulBlock",
													"src": "4578:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4595:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4595:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4616:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4616:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4600:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4600:15:7"
																		},
																		"nativeSrc": "4600:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4600:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4588:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4588:6:7"
																},
																"nativeSrc": "4588:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4588:35:7"
															},
															"nativeSrc": "4588:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4588:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4517:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4566:5:7",
														"nodeType": "YulTypedName",
														"src": "4566:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4573:3:7",
														"nodeType": "YulTypedName",
														"src": "4573:3:7",
														"type": ""
													}
												],
												"src": "4517:112:7"
											},
											{
												"body": {
													"nativeSrc": "4729:120:7",
													"nodeType": "YulBlock",
													"src": "4729:120:7",
													"statements": [
														{
															"nativeSrc": "4739:26:7",
															"nodeType": "YulAssignment",
															"src": "4739:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4751:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4751:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4762:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4762:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4747:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4747:3:7"
																},
																"nativeSrc": "4747:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4747:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4739:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4739:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4815:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4815:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4828:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4828:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4839:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4839:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4824:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4824:3:7"
																		},
																		"nativeSrc": "4824:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4824:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4775:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "4775:39:7"
																},
																"nativeSrc": "4775:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4775:67:7"
															},
															"nativeSrc": "4775:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4775:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4635:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4701:9:7",
														"nodeType": "YulTypedName",
														"src": "4701:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4713:6:7",
														"nodeType": "YulTypedName",
														"src": "4713:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4724:4:7",
														"nodeType": "YulTypedName",
														"src": "4724:4:7",
														"type": ""
													}
												],
												"src": "4635:214:7"
											},
											{
												"body": {
													"nativeSrc": "4887:28:7",
													"nodeType": "YulBlock",
													"src": "4887:28:7",
													"statements": [
														{
															"nativeSrc": "4897:12:7",
															"nodeType": "YulAssignment",
															"src": "4897:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "4904:5:7",
																"nodeType": "YulIdentifier",
																"src": "4904:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4897:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4897:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4855:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4873:5:7",
														"nodeType": "YulTypedName",
														"src": "4873:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4883:3:7",
														"nodeType": "YulTypedName",
														"src": "4883:3:7",
														"type": ""
													}
												],
												"src": "4855:60:7"
											},
											{
												"body": {
													"nativeSrc": "4981:82:7",
													"nodeType": "YulBlock",
													"src": "4981:82:7",
													"statements": [
														{
															"nativeSrc": "4991:66:7",
															"nodeType": "YulAssignment",
															"src": "4991:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5049:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5049:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5031:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "5031:17:7"
																				},
																				"nativeSrc": "5031:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5031:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5022:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "5022:8:7"
																		},
																		"nativeSrc": "5022:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5022:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5004:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5004:17:7"
																},
																"nativeSrc": "5004:53:7",
																"nodeType": "YulFunctionCall",
																"src": "5004:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4991:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4991:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4921:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4961:5:7",
														"nodeType": "YulTypedName",
														"src": "4961:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4971:9:7",
														"nodeType": "YulTypedName",
														"src": "4971:9:7",
														"type": ""
													}
												],
												"src": "4921:142:7"
											},
											{
												"body": {
													"nativeSrc": "5129:66:7",
													"nodeType": "YulBlock",
													"src": "5129:66:7",
													"statements": [
														{
															"nativeSrc": "5139:50:7",
															"nodeType": "YulAssignment",
															"src": "5139:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5183:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5183:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5152:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "5152:30:7"
																},
																"nativeSrc": "5152:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5152:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5139:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5139:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5069:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5109:5:7",
														"nodeType": "YulTypedName",
														"src": "5109:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5119:9:7",
														"nodeType": "YulTypedName",
														"src": "5119:9:7",
														"type": ""
													}
												],
												"src": "5069:126:7"
											},
											{
												"body": {
													"nativeSrc": "5276:66:7",
													"nodeType": "YulBlock",
													"src": "5276:66:7",
													"statements": [
														{
															"nativeSrc": "5286:50:7",
															"nodeType": "YulAssignment",
															"src": "5286:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5330:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5330:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5299:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "5299:30:7"
																},
																"nativeSrc": "5299:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5299:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5286:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5286:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_Kokoro_$1033_to_t_address",
												"nativeSrc": "5201:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5256:5:7",
														"nodeType": "YulTypedName",
														"src": "5256:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5266:9:7",
														"nodeType": "YulTypedName",
														"src": "5266:9:7",
														"type": ""
													}
												],
												"src": "5201:141:7"
											},
											{
												"body": {
													"nativeSrc": "5428:81:7",
													"nodeType": "YulBlock",
													"src": "5428:81:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5445:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5445:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5496:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5496:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_Kokoro_$1033_to_t_address",
																			"nativeSrc": "5450:45:7",
																			"nodeType": "YulIdentifier",
																			"src": "5450:45:7"
																		},
																		"nativeSrc": "5450:52:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5450:52:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5438:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5438:6:7"
																},
																"nativeSrc": "5438:65:7",
																"nodeType": "YulFunctionCall",
																"src": "5438:65:7"
															},
															"nativeSrc": "5438:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "5438:65:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_Kokoro_$1033_to_t_address_fromStack",
												"nativeSrc": "5348:161:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5416:5:7",
														"nodeType": "YulTypedName",
														"src": "5416:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5423:3:7",
														"nodeType": "YulTypedName",
														"src": "5423:3:7",
														"type": ""
													}
												],
												"src": "5348:161:7"
											},
											{
												"body": {
													"nativeSrc": "5628:139:7",
													"nodeType": "YulBlock",
													"src": "5628:139:7",
													"statements": [
														{
															"nativeSrc": "5638:26:7",
															"nodeType": "YulAssignment",
															"src": "5638:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5650:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5650:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5661:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5661:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5646:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5646:3:7"
																},
																"nativeSrc": "5646:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5646:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5638:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5638:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5733:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5733:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5746:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5746:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5757:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5757:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5742:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5742:3:7"
																		},
																		"nativeSrc": "5742:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5742:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_Kokoro_$1033_to_t_address_fromStack",
																	"nativeSrc": "5674:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "5674:58:7"
																},
																"nativeSrc": "5674:86:7",
																"nodeType": "YulFunctionCall",
																"src": "5674:86:7"
															},
															"nativeSrc": "5674:86:7",
															"nodeType": "YulExpressionStatement",
															"src": "5674:86:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_Kokoro_$1033__to_t_address__fromStack_reversed",
												"nativeSrc": "5515:252:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5600:9:7",
														"nodeType": "YulTypedName",
														"src": "5600:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5612:6:7",
														"nodeType": "YulTypedName",
														"src": "5612:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5623:4:7",
														"nodeType": "YulTypedName",
														"src": "5623:4:7",
														"type": ""
													}
												],
												"src": "5515:252:7"
											},
											{
												"body": {
													"nativeSrc": "5839:263:7",
													"nodeType": "YulBlock",
													"src": "5839:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5885:83:7",
																"nodeType": "YulBlock",
																"src": "5885:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5887:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5887:77:7"
																			},
																			"nativeSrc": "5887:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5887:79:7"
																		},
																		"nativeSrc": "5887:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5887:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5860:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5860:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5869:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5869:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5856:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5856:3:7"
																		},
																		"nativeSrc": "5856:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5856:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5881:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5881:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5852:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5852:3:7"
																},
																"nativeSrc": "5852:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5852:32:7"
															},
															"nativeSrc": "5849:119:7",
															"nodeType": "YulIf",
															"src": "5849:119:7"
														},
														{
															"nativeSrc": "5978:117:7",
															"nodeType": "YulBlock",
															"src": "5978:117:7",
															"statements": [
																{
																	"nativeSrc": "5993:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5993:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6007:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6007:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5997:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5997:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6022:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6022:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6057:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6057:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6068:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6068:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6053:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6053:3:7"
																				},
																				"nativeSrc": "6053:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6053:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6077:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6077:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6032:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6032:20:7"
																		},
																		"nativeSrc": "6032:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6032:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6022:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6022:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5773:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5809:9:7",
														"nodeType": "YulTypedName",
														"src": "5809:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5820:7:7",
														"nodeType": "YulTypedName",
														"src": "5820:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5832:6:7",
														"nodeType": "YulTypedName",
														"src": "5832:6:7",
														"type": ""
													}
												],
												"src": "5773:329:7"
											},
											{
												"body": {
													"nativeSrc": "6173:53:7",
													"nodeType": "YulBlock",
													"src": "6173:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6190:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6190:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6213:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6213:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6195:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6195:17:7"
																		},
																		"nativeSrc": "6195:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6195:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6183:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6183:6:7"
																},
																"nativeSrc": "6183:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6183:37:7"
															},
															"nativeSrc": "6183:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6183:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6108:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6161:5:7",
														"nodeType": "YulTypedName",
														"src": "6161:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6168:3:7",
														"nodeType": "YulTypedName",
														"src": "6168:3:7",
														"type": ""
													}
												],
												"src": "6108:118:7"
											},
											{
												"body": {
													"nativeSrc": "6330:124:7",
													"nodeType": "YulBlock",
													"src": "6330:124:7",
													"statements": [
														{
															"nativeSrc": "6340:26:7",
															"nodeType": "YulAssignment",
															"src": "6340:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6352:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6352:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6363:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6363:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6348:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6348:3:7"
																},
																"nativeSrc": "6348:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6348:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6340:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6340:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6420:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6420:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6433:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6433:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6444:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6444:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6429:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6429:3:7"
																		},
																		"nativeSrc": "6429:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6429:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6376:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6376:43:7"
																},
																"nativeSrc": "6376:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6376:71:7"
															},
															"nativeSrc": "6376:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6376:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6232:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6302:9:7",
														"nodeType": "YulTypedName",
														"src": "6302:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6314:6:7",
														"nodeType": "YulTypedName",
														"src": "6314:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6325:4:7",
														"nodeType": "YulTypedName",
														"src": "6325:4:7",
														"type": ""
													}
												],
												"src": "6232:222:7"
											},
											{
												"body": {
													"nativeSrc": "6543:391:7",
													"nodeType": "YulBlock",
													"src": "6543:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6589:83:7",
																"nodeType": "YulBlock",
																"src": "6589:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6591:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:7"
																			},
																			"nativeSrc": "6591:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:7"
																		},
																		"nativeSrc": "6591:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6564:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6573:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6560:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:7"
																		},
																		"nativeSrc": "6560:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6585:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6556:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:7"
																},
																"nativeSrc": "6556:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6556:32:7"
															},
															"nativeSrc": "6553:119:7",
															"nodeType": "YulIf",
															"src": "6553:119:7"
														},
														{
															"nativeSrc": "6682:117:7",
															"nodeType": "YulBlock",
															"src": "6682:117:7",
															"statements": [
																{
																	"nativeSrc": "6697:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6711:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6701:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6726:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6726:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6761:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6772:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6757:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:7"
																				},
																				"nativeSrc": "6757:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6781:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6736:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:7"
																		},
																		"nativeSrc": "6736:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6726:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6809:118:7",
															"nodeType": "YulBlock",
															"src": "6809:118:7",
															"statements": [
																{
																	"nativeSrc": "6824:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6838:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6828:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6854:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6854:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6889:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6889:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6900:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6900:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6885:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6885:3:7"
																				},
																				"nativeSrc": "6885:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6885:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6909:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6909:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6864:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6864:20:7"
																		},
																		"nativeSrc": "6864:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6864:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6854:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6460:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6505:9:7",
														"nodeType": "YulTypedName",
														"src": "6505:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6516:7:7",
														"nodeType": "YulTypedName",
														"src": "6516:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6528:6:7",
														"nodeType": "YulTypedName",
														"src": "6528:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6536:6:7",
														"nodeType": "YulTypedName",
														"src": "6536:6:7",
														"type": ""
													}
												],
												"src": "6460:474:7"
											},
											{
												"body": {
													"nativeSrc": "6968:152:7",
													"nodeType": "YulBlock",
													"src": "6968:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6985:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6985:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6988:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6988:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6978:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6978:6:7"
																},
																"nativeSrc": "6978:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6978:88:7"
															},
															"nativeSrc": "6978:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6978:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7082:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7082:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7085:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7085:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7075:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7075:6:7"
																},
																"nativeSrc": "7075:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7075:15:7"
															},
															"nativeSrc": "7075:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7075:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7106:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7106:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7109:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7109:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7099:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7099:6:7"
																},
																"nativeSrc": "7099:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7099:15:7"
															},
															"nativeSrc": "7099:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7099:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6940:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6940:180:7"
											},
											{
												"body": {
													"nativeSrc": "7177:269:7",
													"nodeType": "YulBlock",
													"src": "7177:269:7",
													"statements": [
														{
															"nativeSrc": "7187:22:7",
															"nodeType": "YulAssignment",
															"src": "7187:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7201:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7201:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7207:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7207:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7197:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7197:3:7"
																},
																"nativeSrc": "7197:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7197:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7187:6:7"
																}
															]
														},
														{
															"nativeSrc": "7218:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7218:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7248:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7248:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7254:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7254:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7244:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7244:3:7"
																},
																"nativeSrc": "7244:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7244:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7222:18:7",
																	"nodeType": "YulTypedName",
																	"src": "7222:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7295:51:7",
																"nodeType": "YulBlock",
																"src": "7295:51:7",
																"statements": [
																	{
																		"nativeSrc": "7309:27:7",
																		"nodeType": "YulAssignment",
																		"src": "7309:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7323:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "7323:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7331:4:7",
																					"nodeType": "YulLiteral",
																					"src": "7331:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7319:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7319:3:7"
																			},
																			"nativeSrc": "7319:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7319:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7309:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7309:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7275:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "7275:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7268:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7268:6:7"
																},
																"nativeSrc": "7268:26:7",
																"nodeType": "YulFunctionCall",
																"src": "7268:26:7"
															},
															"nativeSrc": "7265:81:7",
															"nodeType": "YulIf",
															"src": "7265:81:7"
														},
														{
															"body": {
																"nativeSrc": "7398:42:7",
																"nodeType": "YulBlock",
																"src": "7398:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7412:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7412:16:7"
																			},
																			"nativeSrc": "7412:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7412:18:7"
																		},
																		"nativeSrc": "7412:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7412:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7362:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "7362:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7385:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7385:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7393:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7393:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7382:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7382:2:7"
																		},
																		"nativeSrc": "7382:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7382:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7359:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7359:2:7"
																},
																"nativeSrc": "7359:38:7",
																"nodeType": "YulFunctionCall",
																"src": "7359:38:7"
															},
															"nativeSrc": "7356:84:7",
															"nodeType": "YulIf",
															"src": "7356:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7126:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7161:4:7",
														"nodeType": "YulTypedName",
														"src": "7161:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7170:6:7",
														"nodeType": "YulTypedName",
														"src": "7170:6:7",
														"type": ""
													}
												],
												"src": "7126:320:7"
											},
											{
												"body": {
													"nativeSrc": "7606:288:7",
													"nodeType": "YulBlock",
													"src": "7606:288:7",
													"statements": [
														{
															"nativeSrc": "7616:26:7",
															"nodeType": "YulAssignment",
															"src": "7616:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7628:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7628:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7639:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7639:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7624:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7624:3:7"
																},
																"nativeSrc": "7624:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7624:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7616:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7616:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7696:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7696:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7709:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7709:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7720:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7720:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7705:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7705:3:7"
																		},
																		"nativeSrc": "7705:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7705:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7652:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7652:43:7"
																},
																"nativeSrc": "7652:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7652:71:7"
															},
															"nativeSrc": "7652:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7652:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7777:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7777:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7790:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7790:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7801:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7801:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7786:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7786:3:7"
																		},
																		"nativeSrc": "7786:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7786:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7733:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7733:43:7"
																},
																"nativeSrc": "7733:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7733:72:7"
															},
															"nativeSrc": "7733:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7733:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7859:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7859:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7872:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7872:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7883:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7883:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7868:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7868:3:7"
																		},
																		"nativeSrc": "7868:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7868:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7815:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7815:43:7"
																},
																"nativeSrc": "7815:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7815:72:7"
															},
															"nativeSrc": "7815:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7815:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7452:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7562:9:7",
														"nodeType": "YulTypedName",
														"src": "7562:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7574:6:7",
														"nodeType": "YulTypedName",
														"src": "7574:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7582:6:7",
														"nodeType": "YulTypedName",
														"src": "7582:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7590:6:7",
														"nodeType": "YulTypedName",
														"src": "7590:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7601:4:7",
														"nodeType": "YulTypedName",
														"src": "7601:4:7",
														"type": ""
													}
												],
												"src": "7452:442:7"
											},
											{
												"body": {
													"nativeSrc": "7928:152:7",
													"nodeType": "YulBlock",
													"src": "7928:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7945:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7945:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7948:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7948:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7938:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7938:6:7"
																},
																"nativeSrc": "7938:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7938:88:7"
															},
															"nativeSrc": "7938:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7938:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8042:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8042:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8045:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8045:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8035:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8035:6:7"
																},
																"nativeSrc": "8035:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8035:15:7"
															},
															"nativeSrc": "8035:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8035:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8066:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8066:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8069:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8069:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8059:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8059:6:7"
																},
																"nativeSrc": "8059:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8059:15:7"
															},
															"nativeSrc": "8059:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8059:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7900:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7900:180:7"
											},
											{
												"body": {
													"nativeSrc": "8130:147:7",
													"nodeType": "YulBlock",
													"src": "8130:147:7",
													"statements": [
														{
															"nativeSrc": "8140:25:7",
															"nodeType": "YulAssignment",
															"src": "8140:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8163:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8163:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8145:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8145:17:7"
																},
																"nativeSrc": "8145:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8145:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8140:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8140:1:7"
																}
															]
														},
														{
															"nativeSrc": "8174:25:7",
															"nodeType": "YulAssignment",
															"src": "8174:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8197:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8197:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8179:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8179:17:7"
																},
																"nativeSrc": "8179:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8179:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8174:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8174:1:7"
																}
															]
														},
														{
															"nativeSrc": "8208:16:7",
															"nodeType": "YulAssignment",
															"src": "8208:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8219:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8219:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8222:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8222:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8215:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8215:3:7"
																},
																"nativeSrc": "8215:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8215:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8208:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8208:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8248:22:7",
																"nodeType": "YulBlock",
																"src": "8248:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8250:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8250:16:7"
																			},
																			"nativeSrc": "8250:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8250:18:7"
																		},
																		"nativeSrc": "8250:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8250:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8240:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8240:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8243:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8243:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8237:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8237:2:7"
																},
																"nativeSrc": "8237:10:7",
																"nodeType": "YulFunctionCall",
																"src": "8237:10:7"
															},
															"nativeSrc": "8234:36:7",
															"nodeType": "YulIf",
															"src": "8234:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8086:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8117:1:7",
														"nodeType": "YulTypedName",
														"src": "8117:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8120:1:7",
														"nodeType": "YulTypedName",
														"src": "8120:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8126:3:7",
														"nodeType": "YulTypedName",
														"src": "8126:3:7",
														"type": ""
													}
												],
												"src": "8086:191:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Kokoro_$1033_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Kokoro_$1033_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Kokoro_$1033_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Kokoro_$1033__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Kokoro_$1033_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a257806395d89b411161007157806395d89b411461029a578063a9059cbb146102b8578063c250bed5146102e8578063dd62ed3e14610306578063f2fde38b146103365761010b565b806370a0823114610224578063715018a6146102545780637d2d4fec1461025e5780638da5cb5b1461027c5761010b565b806323b872dd116100de57806323b872dd1461019a578063313ce567146101ca5780633af57cdb146101e857806342685d74146102065761010b565b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015e5780631d0806ae1461017c575b600080fd5b610118610352565b6040516101259190610e4a565b60405180910390f35b61014860048036038101906101439190610f05565b6103e4565b6040516101559190610f60565b60405180910390f35b610166610407565b6040516101739190610f8a565b60405180910390f35b610184610411565b6040516101919190610f8a565b60405180910390f35b6101b460048036038101906101af9190610fa5565b610417565b6040516101c19190610f60565b60405180910390f35b6101d2610446565b6040516101df9190611014565b60405180910390f35b6101f061044f565b6040516101fd919061108e565b60405180910390f35b61020e610475565b60405161021b9190610f8a565b60405180910390f35b61023e600480360381019061023991906110a9565b61047b565b60405161024b9190610f8a565b60405180910390f35b61025c6104c3565b005b6102666104d7565b6040516102739190610f8a565b60405180910390f35b6102846104dd565b60405161029191906110e5565b60405180910390f35b6102a2610507565b6040516102af9190610e4a565b60405180910390f35b6102d260048036038101906102cd9190610f05565b610599565b6040516102df9190610f60565b60405180910390f35b6102f06105bc565b6040516102fd9190610f8a565b60405180910390f35b610320600480360381019061031b9190611100565b6105c2565b60405161032d9190610f8a565b60405180910390f35b610350600480360381019061034b91906110a9565b610649565b005b6060600380546103619061116f565b80601f016020809104026020016040519081016040528092919081815260200182805461038d9061116f565b80156103da5780601f106103af576101008083540402835291602001916103da565b820191906000526020600020905b8154815290600101906020018083116103bd57829003601f168201915b5050505050905090565b6000806103ef6106cf565b90506103fc8185856106d7565b600191505092915050565b6000600254905090565b60085481565b6000806104226106cf565b905061042f8582856106e9565b61043a85858561077d565b60019150509392505050565b60006012905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104cb610871565b6104d560006108f8565b565b60095481565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105169061116f565b80601f01602080910402602001604051908101604052809291908181526020018280546105429061116f565b801561058f5780601f106105645761010080835404028352916020019161058f565b820191906000526020600020905b81548152906001019060200180831161057257829003601f168201915b5050505050905090565b6000806105a46106cf565b90506105b181858561077d565b600191505092915050565b600a5481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610651610871565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106c35760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106ba91906110e5565b60405180910390fd5b6106cc816108f8565b50565b600033905090565b6106e483838360016109be565b505050565b60006106f584846105c2565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107775781811015610767578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161075e939291906111a0565b60405180910390fd5b610776848484840360006109be565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107ef5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107e691906110e5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108615760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161085891906110e5565b60405180910390fd5b61086c838383610b95565b505050565b6108796106cf565b73ffffffffffffffffffffffffffffffffffffffff166108976104dd565b73ffffffffffffffffffffffffffffffffffffffff16146108f6576108ba6106cf565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108ed91906110e5565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a305760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610a2791906110e5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610aa25760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a9991906110e5565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b8f578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b869190610f8a565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610be7578060026000828254610bdb9190611206565b92505081905550610cba565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c73578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c6a939291906111a0565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d035780600260008282540392505081905550610d50565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610dad9190610f8a565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610df4578082015181840152602081019050610dd9565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e1c82610dba565b610e268185610dc5565b9350610e36818560208601610dd6565b610e3f81610e00565b840191505092915050565b60006020820190508181036000830152610e648184610e11565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e9c82610e71565b9050919050565b610eac81610e91565b8114610eb757600080fd5b50565b600081359050610ec981610ea3565b92915050565b6000819050919050565b610ee281610ecf565b8114610eed57600080fd5b50565b600081359050610eff81610ed9565b92915050565b60008060408385031215610f1c57610f1b610e6c565b5b6000610f2a85828601610eba565b9250506020610f3b85828601610ef0565b9150509250929050565b60008115159050919050565b610f5a81610f45565b82525050565b6000602082019050610f756000830184610f51565b92915050565b610f8481610ecf565b82525050565b6000602082019050610f9f6000830184610f7b565b92915050565b600080600060608486031215610fbe57610fbd610e6c565b5b6000610fcc86828701610eba565b9350506020610fdd86828701610eba565b9250506040610fee86828701610ef0565b9150509250925092565b600060ff82169050919050565b61100e81610ff8565b82525050565b60006020820190506110296000830184611005565b92915050565b6000819050919050565b600061105461104f61104a84610e71565b61102f565b610e71565b9050919050565b600061106682611039565b9050919050565b60006110788261105b565b9050919050565b6110888161106d565b82525050565b60006020820190506110a3600083018461107f565b92915050565b6000602082840312156110bf576110be610e6c565b5b60006110cd84828501610eba565b91505092915050565b6110df81610e91565b82525050565b60006020820190506110fa60008301846110d6565b92915050565b6000806040838503121561111757611116610e6c565b5b600061112585828601610eba565b925050602061113685828601610eba565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061118757607f821691505b60208210810361119a57611199611140565b5b50919050565b60006060820190506111b560008301866110d6565b6111c26020830185610f7b565b6111cf6040830184610f7b565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061121182610ecf565b915061121c83610ecf565b9250828201905080821115611234576112336111d7565b5b9291505056fea2646970667358221220b41e17a08bf1878965256510e6b7702845c0750c2a9c5dccc655d56ade2fbad664736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xC250BED5 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x336 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x7D2D4FEC EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27C JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x3AF57CDB EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x42685D74 EQ PUSH2 0x206 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x1D0806AE EQ PUSH2 0x17C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x352 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xE4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x191 SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0xFA5 JUMP JUMPDEST PUSH2 0x417 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1014 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x47B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25C PUSH2 0x4C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x266 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0xE4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH2 0x599 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x1100 JUMP JUMPDEST PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32D SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST PUSH2 0x649 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x361 SWAP1 PUSH2 0x116F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x38D SWAP1 PUSH2 0x116F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3DA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3DA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3BD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3EF PUSH2 0x6CF JUMP JUMPDEST SWAP1 POP PUSH2 0x3FC DUP2 DUP6 DUP6 PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x422 PUSH2 0x6CF JUMP JUMPDEST SWAP1 POP PUSH2 0x42F DUP6 DUP3 DUP6 PUSH2 0x6E9 JUMP JUMPDEST PUSH2 0x43A DUP6 DUP6 DUP6 PUSH2 0x77D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4CB PUSH2 0x871 JUMP JUMPDEST PUSH2 0x4D5 PUSH1 0x0 PUSH2 0x8F8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x516 SWAP1 PUSH2 0x116F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x542 SWAP1 PUSH2 0x116F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x58F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x564 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x58F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x572 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5A4 PUSH2 0x6CF JUMP JUMPDEST SWAP1 POP PUSH2 0x5B1 DUP2 DUP6 DUP6 PUSH2 0x77D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x651 PUSH2 0x871 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6C3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BA SWAP2 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6CC DUP2 PUSH2 0x8F8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6E4 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x9BE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F5 DUP5 DUP5 PUSH2 0x5C2 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x777 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x767 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x776 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x9BE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7EF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E6 SWAP2 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x861 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x858 SWAP2 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x86C DUP4 DUP4 DUP4 PUSH2 0xB95 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x879 PUSH2 0x6CF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x897 PUSH2 0x4DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8F6 JUMPI PUSH2 0x8BA PUSH2 0x6CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8ED SWAP2 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA30 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA27 SWAP2 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAA2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA99 SWAP2 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB8F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB86 SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBE7 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBDB SWAP2 SWAP1 PUSH2 0x1206 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC73 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD03 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD50 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDAD SWAP2 SWAP1 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDF4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1C DUP3 PUSH2 0xDBA JUMP JUMPDEST PUSH2 0xE26 DUP2 DUP6 PUSH2 0xDC5 JUMP JUMPDEST SWAP4 POP PUSH2 0xE36 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDD6 JUMP JUMPDEST PUSH2 0xE3F DUP2 PUSH2 0xE00 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE64 DUP2 DUP5 PUSH2 0xE11 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE9C DUP3 PUSH2 0xE71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEAC DUP2 PUSH2 0xE91 JUMP JUMPDEST DUP2 EQ PUSH2 0xEB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEC9 DUP2 PUSH2 0xEA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE2 DUP2 PUSH2 0xECF JUMP JUMPDEST DUP2 EQ PUSH2 0xEED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEFF DUP2 PUSH2 0xED9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF1C JUMPI PUSH2 0xF1B PUSH2 0xE6C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF2A DUP6 DUP3 DUP7 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF3B DUP6 DUP3 DUP7 ADD PUSH2 0xEF0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF5A DUP2 PUSH2 0xF45 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF75 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF84 DUP2 PUSH2 0xECF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF9F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFBE JUMPI PUSH2 0xFBD PUSH2 0xE6C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFCC DUP7 DUP3 DUP8 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xFDD DUP7 DUP3 DUP8 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFEE DUP7 DUP3 DUP8 ADD PUSH2 0xEF0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100E DUP2 PUSH2 0xFF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1029 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1005 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1054 PUSH2 0x104F PUSH2 0x104A DUP5 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x102F JUMP JUMPDEST PUSH2 0xE71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1066 DUP3 PUSH2 0x1039 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1078 DUP3 PUSH2 0x105B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1088 DUP2 PUSH2 0x106D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x107F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10BF JUMPI PUSH2 0x10BE PUSH2 0xE6C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10CD DUP5 DUP3 DUP6 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10DF DUP2 PUSH2 0xE91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10FA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1117 JUMPI PUSH2 0x1116 PUSH2 0xE6C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1125 DUP6 DUP3 DUP7 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1136 DUP6 DUP3 DUP7 ADD PUSH2 0xEBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1187 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x119A JUMPI PUSH2 0x1199 PUSH2 0x1140 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x11B5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x10D6 JUMP JUMPDEST PUSH2 0x11C2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF7B JUMP JUMPDEST PUSH2 0x11CF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF7B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1211 DUP3 PUSH2 0xECF JUMP JUMPDEST SWAP2 POP PUSH2 0x121C DUP4 PUSH2 0xECF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1234 JUMPI PUSH2 0x1233 PUSH2 0x11D7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0x1E OR LOG0 DUP12 CALL DUP8 DUP10 PUSH6 0x256510E6B770 0x28 GASLIMIT 0xC0 PUSH22 0xC2A9C5DCCC655D56ADE2FBAD664736F6C634300081C STOP CALLER ",
							"sourceMap": "600:753:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1007:37:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;877:20:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;933:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1087:37:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1160:31:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:2;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;1007:37:6:-;;;;:::o;4776:244:2:-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;877:20:6:-;;;;;;;;;;;;;:::o;933:30::-;;;;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1087:37:6:-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;1160:31:6:-;;;;:::o;3551:140:2:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9701:432:2:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1432:117::-;1541:1;1538;1531:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:118::-;3535:24;3553:5;3535:24;:::i;:::-;3530:3;3523:37;3448:118;;:::o;3572:222::-;3665:4;3703:2;3692:9;3688:18;3680:26;;3716:71;3784:1;3773:9;3769:17;3760:6;3716:71;:::i;:::-;3572:222;;;;:::o;3800:619::-;3877:6;3885;3893;3942:2;3930:9;3921:7;3917:23;3913:32;3910:119;;;3948:79;;:::i;:::-;3910:119;4068:1;4093:53;4138:7;4129:6;4118:9;4114:22;4093:53;:::i;:::-;4083:63;;4039:117;4195:2;4221:53;4266:7;4257:6;4246:9;4242:22;4221:53;:::i;:::-;4211:63;;4166:118;4323:2;4349:53;4394:7;4385:6;4374:9;4370:22;4349:53;:::i;:::-;4339:63;;4294:118;3800:619;;;;;:::o;4425:86::-;4460:7;4500:4;4493:5;4489:16;4478:27;;4425:86;;;:::o;4517:112::-;4600:22;4616:5;4600:22;:::i;:::-;4595:3;4588:35;4517:112;;:::o;4635:214::-;4724:4;4762:2;4751:9;4747:18;4739:26;;4775:67;4839:1;4828:9;4824:17;4815:6;4775:67;:::i;:::-;4635:214;;;;:::o;4855:60::-;4883:3;4904:5;4897:12;;4855:60;;;:::o;4921:142::-;4971:9;5004:53;5022:34;5031:24;5049:5;5031:24;:::i;:::-;5022:34;:::i;:::-;5004:53;:::i;:::-;4991:66;;4921:142;;;:::o;5069:126::-;5119:9;5152:37;5183:5;5152:37;:::i;:::-;5139:50;;5069:126;;;:::o;5201:141::-;5266:9;5299:37;5330:5;5299:37;:::i;:::-;5286:50;;5201:141;;;:::o;5348:161::-;5450:52;5496:5;5450:52;:::i;:::-;5445:3;5438:65;5348:161;;:::o;5515:252::-;5623:4;5661:2;5650:9;5646:18;5638:26;;5674:86;5757:1;5746:9;5742:17;5733:6;5674:86;:::i;:::-;5515:252;;;;:::o;5773:329::-;5832:6;5881:2;5869:9;5860:7;5856:23;5852:32;5849:119;;;5887:79;;:::i;:::-;5849:119;6007:1;6032:53;6077:7;6068:6;6057:9;6053:22;6032:53;:::i;:::-;6022:63;;5978:117;5773:329;;;;:::o;6108:118::-;6195:24;6213:5;6195:24;:::i;:::-;6190:3;6183:37;6108:118;;:::o;6232:222::-;6325:4;6363:2;6352:9;6348:18;6340:26;;6376:71;6444:1;6433:9;6429:17;6420:6;6376:71;:::i;:::-;6232:222;;;;:::o;6460:474::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:53;6909:7;6900:6;6889:9;6885:22;6864:53;:::i;:::-;6854:63;;6809:118;6460:474;;;;;:::o;6940:180::-;6988:77;6985:1;6978:88;7085:4;7082:1;7075:15;7109:4;7106:1;7099:15;7126:320;7170:6;7207:1;7201:4;7197:12;7187:22;;7254:1;7248:4;7244:12;7275:18;7265:81;;7331:4;7323:6;7319:17;7309:27;;7265:81;7393:2;7385:6;7382:14;7362:18;7359:38;7356:84;;7412:18;;:::i;:::-;7356:84;7177:269;7126:320;;;:::o;7452:442::-;7601:4;7639:2;7628:9;7624:18;7616:26;;7652:71;7720:1;7709:9;7705:17;7696:6;7652:71;:::i;:::-;7733:72;7801:2;7790:9;7786:18;7777:6;7733:72;:::i;:::-;7815;7883:2;7872:9;7868:18;7859:6;7815:72;:::i;:::-;7452:442;;;;;;:::o;7900:180::-;7948:77;7945:1;7938:88;8045:4;8042:1;8035:15;8069:4;8066:1;8059:15;8086:191;8126:3;8145:20;8163:1;8145:20;:::i;:::-;8140:25;;8179:20;8197:1;8179:20;:::i;:::-;8174:25;;8222:1;8219;8215:9;8208:16;;8243:3;8240:1;8237:10;8234:36;;;8250:18;;:::i;:::-;8234:36;8086:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "944000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "964",
								"bondingCoefficient()": "596",
								"decimals()": "388",
								"initialPrice()": "619",
								"kokoro()": "infinite",
								"name()": "infinite",
								"nftFraction()": "595",
								"owner()": "711",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSacrificed()": "618",
								"totalSupply()": "605",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 600,
									"end": 1353,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 600,
									"end": 1353,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 600,
									"end": 1353,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1037,
									"end": 1044,
									"name": "PUSH",
									"source": 6,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 1007,
									"end": 1044,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1007,
									"end": 1044,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1123,
									"end": 1124,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1087,
									"end": 1124,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1087,
									"end": 1124,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1189,
									"end": 1191,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1160,
									"end": 1191,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1191,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 641,
									"end": 869,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 641,
									"end": 869,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 641,
									"end": 869,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 641,
									"end": 869,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 641,
									"end": 869,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 641,
									"end": 869,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 641,
									"end": 869,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 641,
									"end": 869,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 806,
									"end": 818,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 784,
									"end": 788,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 790,
									"end": 796,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 831,
									"end": 861,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 837,
									"end": 847,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 849,
									"end": 860,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 831,
									"end": 836,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 831,
									"end": 836,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 831,
									"end": 836,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 831,
									"end": 861,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 831,
									"end": 861,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 831,
									"end": 861,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 831,
									"end": 861,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 831,
									"end": 861,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 869,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 600,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 600,
									"end": 1353,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 962,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 845,
									"end": 962,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 952,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 944,
									"end": 956,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1075,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1067,
									"end": 1079,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1132,
									"end": 1138,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1185,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1179,
									"end": 1186,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1174,
									"end": 1176,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1167,
									"end": 1172,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1163,
									"end": 1177,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1159,
									"end": 1187,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1247,
									"end": 1324,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1244,
									"end": 1245,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1237,
									"end": 1325,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1344,
									"end": 1348,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1341,
									"end": 1342,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1334,
									"end": 1349,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1368,
									"end": 1372,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1365,
									"end": 1366,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1373,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 1490,
									"end": 1494,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1468,
									"end": 1495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1460,
									"end": 1466,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1598,
									"end": 1604,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1586,
									"end": 1596,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1583,
									"end": 1605,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1562,
									"end": 1580,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1550,
									"end": 1560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1547,
									"end": 1581,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1544,
									"end": 1606,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1609,
									"end": 1627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1649,
									"end": 1659,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1645,
									"end": 1647,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1638,
									"end": 1660,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1428,
									"end": 1666,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1385,
									"end": 1666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1706,
									"end": 1712,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1733,
									"end": 1753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 1790,
									"end": 1794,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1782,
									"end": 1788,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1762,
									"end": 1795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1869,
									"end": 1873,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1959,
									"end": 1977,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1951,
									"end": 1957,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1948,
									"end": 1978,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1981,
									"end": 1999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 2041,
									"end": 2047,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 2019,
									"end": 2048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2011,
									"end": 2048,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2011,
									"end": 2048,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2097,
									"end": 2101,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2093,
									"end": 2108,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2085,
									"end": 2108,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2085,
									"end": 2108,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2369,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2121,
									"end": 2369,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2203,
									"end": 2204,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2213,
									"end": 2326,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 2213,
									"end": 2326,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2227,
									"end": 2233,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2224,
									"end": 2225,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2234,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2326,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2326,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 2213,
									"end": 2326,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2312,
									"end": 2313,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2307,
									"end": 2310,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2303,
									"end": 2314,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2315,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2293,
									"end": 2294,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2288,
									"end": 2291,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2284,
									"end": 2295,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2277,
									"end": 2316,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2249,
									"end": 2251,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2246,
									"end": 2247,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2242,
									"end": 2252,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2237,
									"end": 2252,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2237,
									"end": 2252,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2326,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 2213,
									"end": 2326,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2326,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 2213,
									"end": 2326,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2360,
									"end": 2361,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2351,
									"end": 2357,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2346,
									"end": 2349,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2342,
									"end": 2358,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2335,
									"end": 2362,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2183,
									"end": 2369,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2369,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2369,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2369,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2369,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2375,
									"end": 2809,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2375,
									"end": 2809,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2464,
									"end": 2469,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2489,
									"end": 2555,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 2505,
									"end": 2554,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 2547,
									"end": 2553,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2505,
									"end": 2554,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2505,
									"end": 2554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2505,
									"end": 2554,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 2505,
									"end": 2554,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2489,
									"end": 2555,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2489,
									"end": 2555,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2489,
									"end": 2555,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 2489,
									"end": 2555,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2480,
									"end": 2555,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2480,
									"end": 2555,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2578,
									"end": 2584,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2571,
									"end": 2576,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2564,
									"end": 2585,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2616,
									"end": 2620,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2609,
									"end": 2614,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2605,
									"end": 2621,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2654,
									"end": 2657,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2645,
									"end": 2651,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2640,
									"end": 2643,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2636,
									"end": 2652,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2658,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2630,
									"end": 2742,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2630,
									"end": 2742,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 2630,
									"end": 2742,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2661,
									"end": 2740,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 2661,
									"end": 2740,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2661,
									"end": 2740,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2661,
									"end": 2740,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 2661,
									"end": 2740,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2630,
									"end": 2742,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 2630,
									"end": 2742,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2751,
									"end": 2803,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 2796,
									"end": 2802,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2791,
									"end": 2794,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2786,
									"end": 2789,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2751,
									"end": 2803,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2751,
									"end": 2803,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2751,
									"end": 2803,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 2751,
									"end": 2803,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2470,
									"end": 2809,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2375,
									"end": 2809,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2375,
									"end": 2809,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2375,
									"end": 2809,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2375,
									"end": 2809,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2375,
									"end": 2809,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2375,
									"end": 2809,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2829,
									"end": 3184,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2829,
									"end": 3184,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2901,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2945,
									"end": 2948,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2938,
									"end": 2942,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2930,
									"end": 2936,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2926,
									"end": 2943,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3034,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 2912,
									"end": 3034,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2953,
									"end": 3032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 2953,
									"end": 3032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 2953,
									"end": 3032,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2953,
									"end": 3032,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 2953,
									"end": 3032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3034,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 2912,
									"end": 3034,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3063,
									"end": 3069,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3057,
									"end": 3070,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3088,
									"end": 3178,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3174,
									"end": 3177,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3166,
									"end": 3172,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3159,
									"end": 3163,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3151,
									"end": 3157,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3147,
									"end": 3164,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3088,
									"end": 3178,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 3088,
									"end": 3178,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3088,
									"end": 3178,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3088,
									"end": 3178,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3079,
									"end": 3178,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3079,
									"end": 3178,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2902,
									"end": 3184,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2829,
									"end": 3184,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2829,
									"end": 3184,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2829,
									"end": 3184,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2829,
									"end": 3184,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2829,
									"end": 3184,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3190,
									"end": 3267,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 3190,
									"end": 3267,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3227,
									"end": 3234,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3256,
									"end": 3261,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3245,
									"end": 3261,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3245,
									"end": 3261,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3190,
									"end": 3267,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3190,
									"end": 3267,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3190,
									"end": 3267,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3190,
									"end": 3267,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3273,
									"end": 3395,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3273,
									"end": 3395,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3346,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 3364,
									"end": 3369,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3346,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 3346,
									"end": 3370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3346,
									"end": 3370,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 3346,
									"end": 3370,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3339,
									"end": 3344,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3336,
									"end": 3371,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3326,
									"end": 3389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 3326,
									"end": 3389,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3385,
									"end": 3386,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3382,
									"end": 3383,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3375,
									"end": 3387,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3326,
									"end": 3389,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 3326,
									"end": 3389,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3273,
									"end": 3395,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3273,
									"end": 3395,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3401,
									"end": 3544,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3401,
									"end": 3544,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3458,
									"end": 3463,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3489,
									"end": 3495,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3483,
									"end": 3496,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3474,
									"end": 3496,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3474,
									"end": 3496,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3505,
									"end": 3538,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 3532,
									"end": 3537,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3505,
									"end": 3538,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3505,
									"end": 3538,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3505,
									"end": 3538,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 3505,
									"end": 3538,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3401,
									"end": 3544,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3401,
									"end": 3544,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3401,
									"end": 3544,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3401,
									"end": 3544,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3401,
									"end": 3544,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 4716,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3550,
									"end": 4716,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3667,
									"end": 3673,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3675,
									"end": 3681,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3683,
									"end": 3689,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3691,
									"end": 3697,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3740,
									"end": 3743,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3728,
									"end": 3737,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3719,
									"end": 3726,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3715,
									"end": 3738,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3711,
									"end": 3744,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 3708,
									"end": 3828,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3708,
									"end": 3828,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 3708,
									"end": 3828,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 3747,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3747,
									"end": 3826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3826,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 3747,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3708,
									"end": 3828,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 3708,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3867,
									"end": 3868,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3892,
									"end": 3956,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 3948,
									"end": 3955,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3939,
									"end": 3945,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3928,
									"end": 3937,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3924,
									"end": 3946,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3892,
									"end": 3956,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 3892,
									"end": 3956,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3892,
									"end": 3956,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 3892,
									"end": 3956,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3882,
									"end": 3956,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3882,
									"end": 3956,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3838,
									"end": 3966,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4026,
									"end": 4028,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4015,
									"end": 4024,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4011,
									"end": 4029,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4005,
									"end": 4030,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4057,
									"end": 4075,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4049,
									"end": 4055,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4046,
									"end": 4076,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4043,
									"end": 4160,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4043,
									"end": 4160,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 4043,
									"end": 4160,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4079,
									"end": 4158,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 4079,
									"end": 4158,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 4079,
									"end": 4158,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4079,
									"end": 4158,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 4079,
									"end": 4158,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4043,
									"end": 4160,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 4043,
									"end": 4160,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4184,
									"end": 4258,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4250,
									"end": 4257,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4241,
									"end": 4247,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4230,
									"end": 4239,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4226,
									"end": 4248,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4184,
									"end": 4258,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 4184,
									"end": 4258,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4184,
									"end": 4258,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4184,
									"end": 4258,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4174,
									"end": 4258,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 4174,
									"end": 4258,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3976,
									"end": 4268,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4328,
									"end": 4330,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4317,
									"end": 4326,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4313,
									"end": 4331,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4307,
									"end": 4332,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4359,
									"end": 4377,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4351,
									"end": 4357,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4348,
									"end": 4378,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4345,
									"end": 4462,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4345,
									"end": 4462,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4345,
									"end": 4462,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4381,
									"end": 4460,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 4381,
									"end": 4460,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 4381,
									"end": 4460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4381,
									"end": 4460,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 4381,
									"end": 4460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4345,
									"end": 4462,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4345,
									"end": 4462,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4486,
									"end": 4560,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 4552,
									"end": 4559,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4543,
									"end": 4549,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4532,
									"end": 4541,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4528,
									"end": 4550,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4486,
									"end": 4560,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 4486,
									"end": 4560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4486,
									"end": 4560,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 4486,
									"end": 4560,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4476,
									"end": 4560,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4476,
									"end": 4560,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4278,
									"end": 4570,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4609,
									"end": 4611,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 4635,
									"end": 4699,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 4691,
									"end": 4698,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4682,
									"end": 4688,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 4680,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4667,
									"end": 4689,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4635,
									"end": 4699,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 4635,
									"end": 4699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4635,
									"end": 4699,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 4635,
									"end": 4699,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4625,
									"end": 4699,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4625,
									"end": 4699,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4580,
									"end": 4709,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 4716,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 4716,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 4716,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 4716,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 4716,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 4716,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 4716,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 4716,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4722,
									"end": 4821,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 4722,
									"end": 4821,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4774,
									"end": 4780,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4808,
									"end": 4813,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4802,
									"end": 4814,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4792,
									"end": 4814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4792,
									"end": 4814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4722,
									"end": 4821,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4722,
									"end": 4821,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4722,
									"end": 4821,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4722,
									"end": 4821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4827,
									"end": 5007,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 4827,
									"end": 5007,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4875,
									"end": 4952,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4872,
									"end": 4873,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4865,
									"end": 4953,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4972,
									"end": 4976,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 4969,
									"end": 4970,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4962,
									"end": 4977,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4996,
									"end": 5000,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4993,
									"end": 4994,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4986,
									"end": 5001,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5013,
									"end": 5333,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 5013,
									"end": 5333,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5057,
									"end": 5063,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5094,
									"end": 5095,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 5088,
									"end": 5092,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5084,
									"end": 5096,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 5074,
									"end": 5096,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5074,
									"end": 5096,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5141,
									"end": 5142,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5135,
									"end": 5139,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5131,
									"end": 5143,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5162,
									"end": 5180,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5152,
									"end": 5233,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5152,
									"end": 5233,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5218,
									"end": 5222,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 5210,
									"end": 5216,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5206,
									"end": 5223,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5196,
									"end": 5223,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5196,
									"end": 5223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5152,
									"end": 5233,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5152,
									"end": 5233,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5280,
									"end": 5282,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5272,
									"end": 5278,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5269,
									"end": 5283,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5249,
									"end": 5267,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5246,
									"end": 5284,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 5243,
									"end": 5327,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 5243,
									"end": 5327,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5299,
									"end": 5317,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 5299,
									"end": 5317,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 5299,
									"end": 5317,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5299,
									"end": 5317,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 5299,
									"end": 5317,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5243,
									"end": 5327,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 5243,
									"end": 5327,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5064,
									"end": 5333,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5013,
									"end": 5333,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5013,
									"end": 5333,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5013,
									"end": 5333,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5013,
									"end": 5333,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5339,
									"end": 5480,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 5339,
									"end": 5480,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5388,
									"end": 5392,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5411,
									"end": 5414,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5403,
									"end": 5414,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5403,
									"end": 5414,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5434,
									"end": 5437,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5431,
									"end": 5432,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5424,
									"end": 5438,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5472,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5465,
									"end": 5466,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5455,
									"end": 5473,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 5447,
									"end": 5473,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5447,
									"end": 5473,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5339,
									"end": 5480,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5339,
									"end": 5480,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5339,
									"end": 5480,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5339,
									"end": 5480,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5486,
									"end": 5579,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 5486,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5523,
									"end": 5529,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5570,
									"end": 5572,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5565,
									"end": 5567,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5558,
									"end": 5563,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5554,
									"end": 5568,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5550,
									"end": 5573,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 5540,
									"end": 5573,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5540,
									"end": 5573,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5486,
									"end": 5579,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5486,
									"end": 5579,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5486,
									"end": 5579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5486,
									"end": 5579,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5585,
									"end": 5692,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5585,
									"end": 5692,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5629,
									"end": 5637,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5679,
									"end": 5684,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5673,
									"end": 5677,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5669,
									"end": 5685,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 5648,
									"end": 5685,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5648,
									"end": 5685,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5585,
									"end": 5692,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5585,
									"end": 5692,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5585,
									"end": 5692,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5585,
									"end": 5692,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5585,
									"end": 5692,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5698,
									"end": 6091,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 5698,
									"end": 6091,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5767,
									"end": 5773,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5817,
									"end": 5818,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5805,
									"end": 5815,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5801,
									"end": 5819,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5840,
									"end": 5937,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 5870,
									"end": 5936,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5859,
									"end": 5868,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5840,
									"end": 5937,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5840,
									"end": 5937,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5840,
									"end": 5937,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 5840,
									"end": 5937,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5958,
									"end": 5997,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 5988,
									"end": 5996,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5977,
									"end": 5986,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5958,
									"end": 5997,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5958,
									"end": 5997,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5958,
									"end": 5997,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 5958,
									"end": 5997,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5946,
									"end": 5997,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 5946,
									"end": 5997,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6030,
									"end": 6034,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6026,
									"end": 6035,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 6019,
									"end": 6024,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6015,
									"end": 6036,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6006,
									"end": 6036,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 6006,
									"end": 6036,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6079,
									"end": 6083,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6069,
									"end": 6077,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6065,
									"end": 6084,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6058,
									"end": 6063,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6055,
									"end": 6085,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 6045,
									"end": 6085,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6045,
									"end": 6085,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5774,
									"end": 6091,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5774,
									"end": 6091,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5698,
									"end": 6091,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5698,
									"end": 6091,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5698,
									"end": 6091,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5698,
									"end": 6091,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5698,
									"end": 6091,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5698,
									"end": 6091,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6097,
									"end": 6157,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 6097,
									"end": 6157,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6125,
									"end": 6128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6146,
									"end": 6151,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6139,
									"end": 6151,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6139,
									"end": 6151,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6097,
									"end": 6157,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6097,
									"end": 6157,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6097,
									"end": 6157,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6097,
									"end": 6157,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6163,
									"end": 6305,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 6163,
									"end": 6305,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6213,
									"end": 6222,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6246,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 6264,
									"end": 6298,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 6273,
									"end": 6297,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 6291,
									"end": 6296,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6273,
									"end": 6297,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 6273,
									"end": 6297,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6273,
									"end": 6297,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 6273,
									"end": 6297,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6264,
									"end": 6298,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 6264,
									"end": 6298,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6264,
									"end": 6298,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 6264,
									"end": 6298,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6246,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 6246,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6246,
									"end": 6299,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 6246,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6233,
									"end": 6299,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6233,
									"end": 6299,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6163,
									"end": 6305,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6163,
									"end": 6305,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6163,
									"end": 6305,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6163,
									"end": 6305,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6311,
									"end": 6386,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 6311,
									"end": 6386,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6354,
									"end": 6357,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6375,
									"end": 6380,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6368,
									"end": 6380,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6368,
									"end": 6380,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6311,
									"end": 6386,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6311,
									"end": 6386,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6311,
									"end": 6386,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6311,
									"end": 6386,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6392,
									"end": 6661,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6392,
									"end": 6661,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6502,
									"end": 6541,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 6533,
									"end": 6540,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6502,
									"end": 6541,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 6502,
									"end": 6541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6502,
									"end": 6541,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 6502,
									"end": 6541,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6563,
									"end": 6654,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 6612,
									"end": 6653,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 6636,
									"end": 6652,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6612,
									"end": 6653,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 6612,
									"end": 6653,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6612,
									"end": 6653,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 6612,
									"end": 6653,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6604,
									"end": 6610,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6597,
									"end": 6601,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6591,
									"end": 6602,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6563,
									"end": 6654,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 6563,
									"end": 6654,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6563,
									"end": 6654,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 6563,
									"end": 6654,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6557,
									"end": 6561,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6550,
									"end": 6655,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6468,
									"end": 6661,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6392,
									"end": 6661,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6392,
									"end": 6661,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6392,
									"end": 6661,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6392,
									"end": 6661,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6667,
									"end": 6740,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 6667,
									"end": 6740,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6712,
									"end": 6715,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6667,
									"end": 6740,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6667,
									"end": 6740,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6746,
									"end": 6935,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 6746,
									"end": 6935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6823,
									"end": 6855,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 6823,
									"end": 6855,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 6823,
									"end": 6855,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6823,
									"end": 6855,
									"name": "tag",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 6823,
									"end": 6855,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6864,
									"end": 6929,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 6922,
									"end": 6928,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6914,
									"end": 6920,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6908,
									"end": 6912,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6864,
									"end": 6929,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6864,
									"end": 6929,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6864,
									"end": 6929,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 6864,
									"end": 6929,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6799,
									"end": 6935,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6746,
									"end": 6935,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6746,
									"end": 6935,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6746,
									"end": 6935,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6941,
									"end": 7127,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 6941,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7001,
									"end": 7121,
									"name": "tag",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 7001,
									"end": 7121,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7018,
									"end": 7021,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7011,
									"end": 7016,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7008,
									"end": 7022,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7001,
									"end": 7121,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7001,
									"end": 7121,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 7001,
									"end": 7121,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7072,
									"end": 7111,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 7109,
									"end": 7110,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7072,
									"end": 7111,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 7072,
									"end": 7111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7072,
									"end": 7111,
									"name": "tag",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 7072,
									"end": 7111,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7045,
									"end": 7046,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7034,
									"end": 7047,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7025,
									"end": 7047,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7025,
									"end": 7047,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7001,
									"end": 7121,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 7001,
									"end": 7121,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7001,
									"end": 7121,
									"name": "tag",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 7001,
									"end": 7121,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6941,
									"end": 7127,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6941,
									"end": 7127,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6941,
									"end": 7127,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7133,
									"end": 7676,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 7133,
									"end": 7676,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7234,
									"end": 7236,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 7229,
									"end": 7232,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7226,
									"end": 7237,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7223,
									"end": 7669,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7223,
									"end": 7669,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 7223,
									"end": 7669,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7268,
									"end": 7306,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 7300,
									"end": 7305,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7268,
									"end": 7306,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 7268,
									"end": 7306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7268,
									"end": 7306,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 7268,
									"end": 7306,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7352,
									"end": 7381,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 7370,
									"end": 7380,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7352,
									"end": 7381,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 7352,
									"end": 7381,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7352,
									"end": 7381,
									"name": "tag",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 7352,
									"end": 7381,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7342,
									"end": 7350,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7338,
									"end": 7382,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7535,
									"end": 7537,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7523,
									"end": 7533,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7520,
									"end": 7538,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7517,
									"end": 7566,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7517,
									"end": 7566,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 7517,
									"end": 7566,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7556,
									"end": 7564,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7541,
									"end": 7564,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7541,
									"end": 7564,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7517,
									"end": 7566,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 7517,
									"end": 7566,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7579,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 7635,
									"end": 7657,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 7653,
									"end": 7656,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7635,
									"end": 7657,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 7635,
									"end": 7657,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7635,
									"end": 7657,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 7635,
									"end": 7657,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7625,
									"end": 7633,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7621,
									"end": 7658,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7608,
									"end": 7619,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7579,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 7579,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7579,
									"end": 7659,
									"name": "tag",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 7579,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7238,
									"end": 7669,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7238,
									"end": 7669,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7223,
									"end": 7669,
									"name": "tag",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 7223,
									"end": 7669,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7133,
									"end": 7676,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7133,
									"end": 7676,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7133,
									"end": 7676,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7133,
									"end": 7676,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7682,
									"end": 7799,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 7682,
									"end": 7799,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 7744,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7786,
									"end": 7791,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7780,
									"end": 7784,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7776,
									"end": 7792,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 7755,
									"end": 7792,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7755,
									"end": 7792,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7682,
									"end": 7799,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7682,
									"end": 7799,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7682,
									"end": 7799,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7682,
									"end": 7799,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7682,
									"end": 7799,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7805,
									"end": 7974,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 7805,
									"end": 7974,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7849,
									"end": 7855,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7882,
									"end": 7933,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 7930,
									"end": 7931,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7926,
									"end": 7932,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7918,
									"end": 7923,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7915,
									"end": 7916,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 7911,
									"end": 7924,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7882,
									"end": 7933,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 7882,
									"end": 7933,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7882,
									"end": 7933,
									"name": "tag",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 7882,
									"end": 7933,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7878,
									"end": 7934,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7963,
									"end": 7967,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7957,
									"end": 7961,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7953,
									"end": 7968,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7943,
									"end": 7968,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7943,
									"end": 7968,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7856,
									"end": 7974,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7805,
									"end": 7974,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7805,
									"end": 7974,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7805,
									"end": 7974,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7805,
									"end": 7974,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7805,
									"end": 7974,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7979,
									"end": 8274,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 7979,
									"end": 8274,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8055,
									"end": 8059,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8201,
									"end": 8230,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8226,
									"end": 8229,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8220,
									"end": 8224,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8201,
									"end": 8230,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 8201,
									"end": 8230,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8201,
									"end": 8230,
									"name": "tag",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8201,
									"end": 8230,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8193,
									"end": 8230,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8193,
									"end": 8230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8263,
									"end": 8266,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8260,
									"end": 8261,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 8256,
									"end": 8267,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8250,
									"end": 8254,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8247,
									"end": 8268,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 8239,
									"end": 8268,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8239,
									"end": 8268,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7979,
									"end": 8274,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7979,
									"end": 8274,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7979,
									"end": 8274,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7979,
									"end": 8274,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7979,
									"end": 8274,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8279,
									"end": 9674,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 8279,
									"end": 9674,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8396,
									"end": 8433,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8429,
									"end": 8432,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8396,
									"end": 8433,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 8396,
									"end": 8433,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8396,
									"end": 8433,
									"name": "tag",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8396,
									"end": 8433,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8498,
									"end": 8516,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8490,
									"end": 8496,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8487,
									"end": 8517,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8484,
									"end": 8540,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8484,
									"end": 8540,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 8484,
									"end": 8540,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8520,
									"end": 8538,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 8520,
									"end": 8538,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 8520,
									"end": 8538,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8520,
									"end": 8538,
									"name": "tag",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 8520,
									"end": 8538,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8484,
									"end": 8540,
									"name": "tag",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 8484,
									"end": 8540,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8564,
									"end": 8602,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 8596,
									"end": 8600,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8590,
									"end": 8601,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 8564,
									"end": 8602,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 8564,
									"end": 8602,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8564,
									"end": 8602,
									"name": "tag",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 8564,
									"end": 8602,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8649,
									"end": 8716,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 8709,
									"end": 8715,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8701,
									"end": 8707,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8695,
									"end": 8699,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8649,
									"end": 8716,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 8649,
									"end": 8716,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8649,
									"end": 8716,
									"name": "tag",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 8649,
									"end": 8716,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8743,
									"end": 8744,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8767,
									"end": 8771,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8754,
									"end": 8771,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8754,
									"end": 8771,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8799,
									"end": 8801,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8791,
									"end": 8797,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8788,
									"end": 8802,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8816,
									"end": 8817,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8811,
									"end": 9429,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8811,
									"end": 9429,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8811,
									"end": 9429,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 8811,
									"end": 9429,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9473,
									"end": 9474,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9490,
									"end": 9496,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9487,
									"end": 9564,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9487,
									"end": 9564,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 9487,
									"end": 9564,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9539,
									"end": 9548,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9534,
									"end": 9537,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 9530,
									"end": 9549,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9524,
									"end": 9550,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9515,
									"end": 9550,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9515,
									"end": 9550,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9487,
									"end": 9564,
									"name": "tag",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 9487,
									"end": 9564,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9590,
									"end": 9657,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 9650,
									"end": 9656,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9643,
									"end": 9648,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9590,
									"end": 9657,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 9590,
									"end": 9657,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9590,
									"end": 9657,
									"name": "tag",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 9590,
									"end": 9657,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9584,
									"end": 9588,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9577,
									"end": 9658,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9446,
									"end": 9668,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8781,
									"end": 9668,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 8781,
									"end": 9668,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8811,
									"end": 9429,
									"name": "tag",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 8811,
									"end": 9429,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8863,
									"end": 8867,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8859,
									"end": 8868,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 8851,
									"end": 8857,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8847,
									"end": 8869,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8897,
									"end": 8934,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 8929,
									"end": 8933,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8897,
									"end": 8934,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 8897,
									"end": 8934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8897,
									"end": 8934,
									"name": "tag",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 8897,
									"end": 8934,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8956,
									"end": 8957,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8970,
									"end": 9178,
									"name": "tag",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 8970,
									"end": 9178,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8984,
									"end": 8991,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8981,
									"end": 8982,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8978,
									"end": 8992,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8970,
									"end": 9178,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8970,
									"end": 9178,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 8970,
									"end": 9178,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9063,
									"end": 9072,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9058,
									"end": 9061,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 9054,
									"end": 9073,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9048,
									"end": 9074,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9040,
									"end": 9046,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9033,
									"end": 9075,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9114,
									"end": 9115,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9106,
									"end": 9112,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9102,
									"end": 9116,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9092,
									"end": 9116,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9092,
									"end": 9116,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9161,
									"end": 9163,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9150,
									"end": 9159,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9146,
									"end": 9164,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9133,
									"end": 9164,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 9133,
									"end": 9164,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9007,
									"end": 9011,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9004,
									"end": 9005,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9000,
									"end": 9012,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8995,
									"end": 9012,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8995,
									"end": 9012,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8970,
									"end": 9178,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 8970,
									"end": 9178,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8970,
									"end": 9178,
									"name": "tag",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 8970,
									"end": 9178,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9206,
									"end": 9212,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9197,
									"end": 9204,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9194,
									"end": 9213,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 9191,
									"end": 9370,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9191,
									"end": 9370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 9191,
									"end": 9370,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9264,
									"end": 9273,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9259,
									"end": 9262,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 9255,
									"end": 9274,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9249,
									"end": 9275,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9307,
									"end": 9355,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 9349,
									"end": 9353,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 9341,
									"end": 9347,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 9337,
									"end": 9354,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9326,
									"end": 9335,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9307,
									"end": 9355,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 9307,
									"end": 9355,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9307,
									"end": 9355,
									"name": "tag",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 9307,
									"end": 9355,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9299,
									"end": 9305,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9292,
									"end": 9356,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9214,
									"end": 9370,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9191,
									"end": 9370,
									"name": "tag",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 9191,
									"end": 9370,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9416,
									"end": 9417,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9412,
									"end": 9413,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 9404,
									"end": 9410,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 9400,
									"end": 9414,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 9396,
									"end": 9418,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9390,
									"end": 9394,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 9383,
									"end": 9419,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8818,
									"end": 9429,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8818,
									"end": 9429,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8818,
									"end": 9429,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8781,
									"end": 9668,
									"name": "tag",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 8781,
									"end": 9668,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8781,
									"end": 9668,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8371,
									"end": 9674,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8371,
									"end": 9674,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8371,
									"end": 9674,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8279,
									"end": 9674,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8279,
									"end": 9674,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8279,
									"end": 9674,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9680,
									"end": 9798,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 9680,
									"end": 9798,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9767,
									"end": 9791,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 9785,
									"end": 9790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9767,
									"end": 9791,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 9767,
									"end": 9791,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9767,
									"end": 9791,
									"name": "tag",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 9767,
									"end": 9791,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9762,
									"end": 9765,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9755,
									"end": 9792,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9680,
									"end": 9798,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9680,
									"end": 9798,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9680,
									"end": 9798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9804,
									"end": 10026,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 9804,
									"end": 10026,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9897,
									"end": 9901,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9935,
									"end": 9937,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9924,
									"end": 9933,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9920,
									"end": 9938,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9912,
									"end": 9938,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9912,
									"end": 9938,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9948,
									"end": 10019,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 10016,
									"end": 10017,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10005,
									"end": 10014,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10001,
									"end": 10018,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9992,
									"end": 9998,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9948,
									"end": 10019,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 9948,
									"end": 10019,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9948,
									"end": 10019,
									"name": "tag",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 9948,
									"end": 10019,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9804,
									"end": 10026,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9804,
									"end": 10026,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9804,
									"end": 10026,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9804,
									"end": 10026,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9804,
									"end": 10026,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10032,
									"end": 10212,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 10032,
									"end": 10212,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10080,
									"end": 10157,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10077,
									"end": 10078,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10070,
									"end": 10158,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10177,
									"end": 10181,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 10174,
									"end": 10175,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 10167,
									"end": 10182,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10201,
									"end": 10205,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 10198,
									"end": 10199,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10191,
									"end": 10206,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 10218,
									"end": 10409,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 10218,
									"end": 10409,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10258,
									"end": 10261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10277,
									"end": 10297,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 10295,
									"end": 10296,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10277,
									"end": 10297,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 10277,
									"end": 10297,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10277,
									"end": 10297,
									"name": "tag",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 10277,
									"end": 10297,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10272,
									"end": 10297,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10272,
									"end": 10297,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10311,
									"end": 10331,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 10329,
									"end": 10330,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10311,
									"end": 10331,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 10311,
									"end": 10331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10311,
									"end": 10331,
									"name": "tag",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 10311,
									"end": 10331,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10306,
									"end": 10331,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10306,
									"end": 10331,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10354,
									"end": 10355,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10351,
									"end": 10352,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10347,
									"end": 10356,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10340,
									"end": 10356,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10340,
									"end": 10356,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10375,
									"end": 10378,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 10372,
									"end": 10373,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10369,
									"end": 10379,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 10366,
									"end": 10402,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10366,
									"end": 10402,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 10366,
									"end": 10402,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10382,
									"end": 10400,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 10382,
									"end": 10400,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 10382,
									"end": 10400,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10382,
									"end": 10400,
									"name": "tag",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 10382,
									"end": 10400,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10366,
									"end": 10402,
									"name": "tag",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 10366,
									"end": 10402,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10218,
									"end": 10409,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10218,
									"end": 10409,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10218,
									"end": 10409,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10218,
									"end": 10409,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10218,
									"end": 10409,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10415,
									"end": 10533,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 10415,
									"end": 10533,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10502,
									"end": 10526,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 10520,
									"end": 10525,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10502,
									"end": 10526,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 10502,
									"end": 10526,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10502,
									"end": 10526,
									"name": "tag",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 10502,
									"end": 10526,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10497,
									"end": 10500,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10490,
									"end": 10527,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10415,
									"end": 10533,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10415,
									"end": 10533,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10415,
									"end": 10533,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10539,
									"end": 10981,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 10539,
									"end": 10981,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10688,
									"end": 10692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10726,
									"end": 10728,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 10715,
									"end": 10724,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10711,
									"end": 10729,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10703,
									"end": 10729,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10703,
									"end": 10729,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10739,
									"end": 10810,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 10807,
									"end": 10808,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10796,
									"end": 10805,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10792,
									"end": 10809,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10783,
									"end": 10789,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 10739,
									"end": 10810,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 10739,
									"end": 10810,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10739,
									"end": 10810,
									"name": "tag",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 10739,
									"end": 10810,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10820,
									"end": 10892,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 10888,
									"end": 10890,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10877,
									"end": 10886,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10873,
									"end": 10891,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10864,
									"end": 10870,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 10820,
									"end": 10892,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 10820,
									"end": 10892,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10820,
									"end": 10892,
									"name": "tag",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 10820,
									"end": 10892,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10902,
									"end": 10974,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 10970,
									"end": 10972,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 10959,
									"end": 10968,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10955,
									"end": 10973,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10946,
									"end": 10952,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10902,
									"end": 10974,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 10902,
									"end": 10974,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10902,
									"end": 10974,
									"name": "tag",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 10902,
									"end": 10974,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10539,
									"end": 10981,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 10539,
									"end": 10981,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 10539,
									"end": 10981,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10539,
									"end": 10981,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10539,
									"end": 10981,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10539,
									"end": 10981,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10539,
									"end": 10981,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10987,
									"end": 11209,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 10987,
									"end": 11209,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11080,
									"end": 11084,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11118,
									"end": 11120,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 11107,
									"end": 11116,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11103,
									"end": 11121,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11095,
									"end": 11121,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11095,
									"end": 11121,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11131,
									"end": 11202,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "214"
								},
								{
									"begin": 11199,
									"end": 11200,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11188,
									"end": 11197,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11184,
									"end": 11201,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11175,
									"end": 11181,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11131,
									"end": 11202,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 11131,
									"end": 11202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11131,
									"end": 11202,
									"name": "tag",
									"source": 7,
									"value": "214"
								},
								{
									"begin": 11131,
									"end": 11202,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10987,
									"end": 11209,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10987,
									"end": 11209,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10987,
									"end": 11209,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10987,
									"end": 11209,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10987,
									"end": 11209,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 600,
									"end": 1353,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 600,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 600,
									"end": 1353,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 600,
									"end": 1353,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 600,
									"end": 1353,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 600,
									"end": 1353,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 600,
									"end": 1353,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 600,
									"end": 1353,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 600,
									"end": 1353,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b41e17a08bf1878965256510e6b7702845c0750c2a9c5dccc655d56ade2fbad664736f6c634300081c0033",
									".code": [
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "C250BED5"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "7D2D4FEC"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "3AF57CDB"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "42685D74"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "1D0806AE"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 1353,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1007,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1007,
											"end": 1044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 877,
											"end": 897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 877,
											"end": 897,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 877,
											"end": 897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 877,
											"end": 897,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 877,
											"end": 897,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 877,
											"end": 897,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 933,
											"end": 963,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 933,
											"end": 963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 933,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 933,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 933,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 933,
											"end": 963,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 933,
											"end": 963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 933,
											"end": 963,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 963,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 933,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 933,
											"end": 963,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 933,
											"end": 963,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 933,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 933,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 933,
											"end": 963,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 933,
											"end": 963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 933,
											"end": 963,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 933,
											"end": 963,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 933,
											"end": 963,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 933,
											"end": 963,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 933,
											"end": 963,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 933,
											"end": 963,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 933,
											"end": 963,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1087,
											"end": 1124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1087,
											"end": 1124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1160,
											"end": 1191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1160,
											"end": 1191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1007,
											"end": 1044,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1007,
											"end": 1044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 877,
											"end": 897,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 877,
											"end": 897,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 877,
											"end": 897,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 877,
											"end": 897,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 877,
											"end": 897,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 877,
											"end": 897,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 877,
											"end": 897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 933,
											"end": 963,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 933,
											"end": 963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 933,
											"end": 963,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 933,
											"end": 963,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 933,
											"end": 963,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 933,
											"end": 963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1124,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1191,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1160,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 535,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 287,
											"end": 535,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 370,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 393,
											"end": 399,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 390,
											"end": 391,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 387,
											"end": 400,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 379,
											"end": 492,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 379,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 478,
											"end": 479,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 473,
											"end": 476,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 469,
											"end": 480,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 463,
											"end": 481,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 459,
											"end": 460,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 454,
											"end": 457,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 450,
											"end": 461,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 443,
											"end": 482,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 415,
											"end": 417,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 408,
											"end": 418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 403,
											"end": 418,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 403,
											"end": 418,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 379,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 379,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 523,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 512,
											"end": 515,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 508,
											"end": 524,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 501,
											"end": 528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 349,
											"end": 535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 541,
											"end": 643,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 541,
											"end": 643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 582,
											"end": 588,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 629,
											"end": 636,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 617,
											"end": 622,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 613,
											"end": 627,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 609,
											"end": 637,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 599,
											"end": 637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 599,
											"end": 637,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 541,
											"end": 643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 541,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 737,
											"end": 740,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 798,
											"end": 803,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 765,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 765,
											"end": 804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 765,
											"end": 804,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 765,
											"end": 804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 820,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 879,
											"end": 882,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 820,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 820,
											"end": 891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 820,
											"end": 891,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 820,
											"end": 891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 813,
											"end": 891,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 813,
											"end": 891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 900,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 958,
											"end": 964,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 953,
											"end": 956,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 946,
											"end": 950,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 939,
											"end": 944,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 935,
											"end": 951,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 900,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 900,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 900,
											"end": 965,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 900,
											"end": 965,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 990,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 985,
											"end": 988,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 981,
											"end": 1020,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 741,
											"end": 1026,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1185,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1186,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1186,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1216,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1203,
											"end": 1220,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1243,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1333,
											"end": 1337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1324,
											"end": 1330,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 1260,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1252,
											"end": 1338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1252,
											"end": 1338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1549,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 1432,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1542,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1539,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1543,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1797,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1798,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1733,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1733,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 1854,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 1985,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2010,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2022,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2026,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 2034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2086,
											"end": 2091,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2130,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2131,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2167,
											"end": 2172,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 2140,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2229,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2256,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 2341,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2334,
											"end": 2339,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2366,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 2523,
											"end": 2528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 2496,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2615,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 2668,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2654,
											"end": 2663,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2645,
											"end": 2652,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 2664,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2637,
											"end": 2669,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2672,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2862,
											"end": 2869,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 2859,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2842,
											"end": 2851,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2838,
											"end": 2860,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 2817,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2807,
											"end": 2870,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2807,
											"end": 2870,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 2880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2921,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2981,
											"end": 2987,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 2979,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 2988,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 2945,
											"end": 2998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3062,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3103,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3091,
											"end": 3104,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3105,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3073,
											"end": 3105,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3073,
											"end": 3105,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 3213,
											"end": 3218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3198,
											"end": 3219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3193,
											"end": 3196,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3186,
											"end": 3220,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3319,
											"end": 3323,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3359,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3355,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3360,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3360,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 3432,
											"end": 3433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3430,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3434,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3414,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 3370,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 3553,
											"end": 3558,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 3535,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3530,
											"end": 3533,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3560,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3665,
											"end": 3669,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3703,
											"end": 3705,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3692,
											"end": 3701,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3688,
											"end": 3706,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 3784,
											"end": 3785,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3782,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3760,
											"end": 3766,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 3716,
											"end": 3787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3891,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3893,
											"end": 3899,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3944,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3930,
											"end": 3939,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 3928,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3917,
											"end": 3940,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3945,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3948,
											"end": 4027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 4138,
											"end": 4145,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4135,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4118,
											"end": 4127,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4136,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 4093,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4156,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4197,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4263,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4246,
											"end": 4255,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4242,
											"end": 4264,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 4221,
											"end": 4274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4211,
											"end": 4274,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4211,
											"end": 4274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4284,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4325,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 4394,
											"end": 4401,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4374,
											"end": 4383,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4370,
											"end": 4392,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 4349,
											"end": 4402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4339,
											"end": 4402,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4339,
											"end": 4402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4460,
											"end": 4467,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4500,
											"end": 4504,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4493,
											"end": 4498,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4489,
											"end": 4505,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4478,
											"end": 4505,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4478,
											"end": 4505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 4616,
											"end": 4621,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 4600,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4598,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4623,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4724,
											"end": 4728,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4764,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4751,
											"end": 4760,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4747,
											"end": 4765,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4739,
											"end": 4765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4739,
											"end": 4765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4837,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4824,
											"end": 4841,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4815,
											"end": 4821,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 4775,
											"end": 4842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4915,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 4855,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4883,
											"end": 4886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4915,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4915,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4921,
											"end": 5063,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 4921,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4971,
											"end": 4980,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5004,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 5022,
											"end": 5056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 5031,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 5049,
											"end": 5054,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 5031,
											"end": 5055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5031,
											"end": 5055,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 5031,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5022,
											"end": 5056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 5022,
											"end": 5056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5022,
											"end": 5056,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 5022,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5004,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 5004,
											"end": 5057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5004,
											"end": 5057,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 5004,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4991,
											"end": 5057,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4991,
											"end": 5057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4921,
											"end": 5063,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4921,
											"end": 5063,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4921,
											"end": 5063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4921,
											"end": 5063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5069,
											"end": 5195,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 5069,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5119,
											"end": 5128,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 5183,
											"end": 5188,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5152,
											"end": 5189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 5152,
											"end": 5189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5152,
											"end": 5189,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 5152,
											"end": 5189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5069,
											"end": 5195,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5069,
											"end": 5195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5069,
											"end": 5195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5069,
											"end": 5195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5201,
											"end": 5342,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 5201,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5275,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5299,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 5330,
											"end": 5335,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 5299,
											"end": 5336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5336,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 5299,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5286,
											"end": 5336,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5286,
											"end": 5336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5201,
											"end": 5342,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5201,
											"end": 5342,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5201,
											"end": 5342,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5201,
											"end": 5342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5348,
											"end": 5509,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 5348,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5450,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 5496,
											"end": 5501,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5450,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 5450,
											"end": 5502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5450,
											"end": 5502,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 5450,
											"end": 5502,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5448,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5503,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5348,
											"end": 5509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5348,
											"end": 5509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5348,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5767,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 5515,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5623,
											"end": 5627,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5661,
											"end": 5663,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5650,
											"end": 5659,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5646,
											"end": 5664,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5638,
											"end": 5664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5638,
											"end": 5664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 5757,
											"end": 5758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5746,
											"end": 5755,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5759,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5733,
											"end": 5739,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 5674,
											"end": 5760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5760,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 5674,
											"end": 5760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5767,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5767,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5767,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5767,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5773,
											"end": 6102,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 5773,
											"end": 6102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5838,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5881,
											"end": 5883,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5869,
											"end": 5878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5867,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5856,
											"end": 5879,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5852,
											"end": 5884,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5887,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 5887,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 5887,
											"end": 5966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5887,
											"end": 5966,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 5887,
											"end": 5966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6007,
											"end": 6008,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6032,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 6077,
											"end": 6084,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6068,
											"end": 6074,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6066,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6053,
											"end": 6075,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6032,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 6032,
											"end": 6085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6032,
											"end": 6085,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 6032,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6022,
											"end": 6085,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6022,
											"end": 6085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5978,
											"end": 6095,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5773,
											"end": 6102,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5773,
											"end": 6102,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5773,
											"end": 6102,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5773,
											"end": 6102,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5773,
											"end": 6102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6108,
											"end": 6226,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 6108,
											"end": 6226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6195,
											"end": 6219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 6213,
											"end": 6218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6195,
											"end": 6219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 6195,
											"end": 6219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6195,
											"end": 6219,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 6195,
											"end": 6219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6190,
											"end": 6193,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6183,
											"end": 6220,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6108,
											"end": 6226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6108,
											"end": 6226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6108,
											"end": 6226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6232,
											"end": 6454,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 6232,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6325,
											"end": 6329,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6363,
											"end": 6365,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6352,
											"end": 6361,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6348,
											"end": 6366,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6340,
											"end": 6366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6340,
											"end": 6366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 6444,
											"end": 6445,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6433,
											"end": 6442,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6420,
											"end": 6426,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 6376,
											"end": 6447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6376,
											"end": 6447,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 6376,
											"end": 6447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6232,
											"end": 6454,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6232,
											"end": 6454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6232,
											"end": 6454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6232,
											"end": 6454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6232,
											"end": 6454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6460,
											"end": 6934,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 6460,
											"end": 6934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 6909,
											"end": 6916,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 6906,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6898,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6885,
											"end": 6907,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6864,
											"end": 6917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 6864,
											"end": 6917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6864,
											"end": 6917,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 6864,
											"end": 6917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6854,
											"end": 6917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6854,
											"end": 6917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6809,
											"end": 6927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6460,
											"end": 6934,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6460,
											"end": 6934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6460,
											"end": 6934,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6460,
											"end": 6934,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6460,
											"end": 6934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6460,
											"end": 6934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6940,
											"end": 7120,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 6940,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6988,
											"end": 7065,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6985,
											"end": 6986,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6978,
											"end": 7066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7085,
											"end": 7089,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 7082,
											"end": 7083,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7075,
											"end": 7090,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7109,
											"end": 7113,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7106,
											"end": 7107,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7099,
											"end": 7114,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7446,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 7126,
											"end": 7446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7170,
											"end": 7176,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7207,
											"end": 7208,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7201,
											"end": 7205,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7197,
											"end": 7209,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7187,
											"end": 7209,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7187,
											"end": 7209,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7254,
											"end": 7255,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7248,
											"end": 7252,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7244,
											"end": 7256,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7275,
											"end": 7293,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7346,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 7265,
											"end": 7346,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7331,
											"end": 7335,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 7323,
											"end": 7329,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7319,
											"end": 7336,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7309,
											"end": 7336,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7309,
											"end": 7336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7346,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 7265,
											"end": 7346,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7393,
											"end": 7395,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7385,
											"end": 7391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7382,
											"end": 7396,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7359,
											"end": 7397,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7356,
											"end": 7440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 7356,
											"end": 7440,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 7412,
											"end": 7430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 7412,
											"end": 7430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7356,
											"end": 7440,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 7356,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7177,
											"end": 7446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7446,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7126,
											"end": 7446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7452,
											"end": 7894,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 7452,
											"end": 7894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7601,
											"end": 7605,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7639,
											"end": 7641,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7628,
											"end": 7637,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7624,
											"end": 7642,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7616,
											"end": 7642,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7616,
											"end": 7642,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7652,
											"end": 7723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 7720,
											"end": 7721,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7709,
											"end": 7718,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7705,
											"end": 7722,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7696,
											"end": 7702,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7652,
											"end": 7723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 7652,
											"end": 7723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7652,
											"end": 7723,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 7652,
											"end": 7723,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7733,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 7801,
											"end": 7803,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7790,
											"end": 7799,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7786,
											"end": 7804,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7777,
											"end": 7783,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7733,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 7733,
											"end": 7805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7733,
											"end": 7805,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 7733,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7815,
											"end": 7887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 7883,
											"end": 7885,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7872,
											"end": 7881,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 7886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7865,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7815,
											"end": 7887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 7815,
											"end": 7887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7815,
											"end": 7887,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 7815,
											"end": 7887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7452,
											"end": 7894,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7452,
											"end": 7894,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7452,
											"end": 7894,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7452,
											"end": 7894,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7452,
											"end": 7894,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7452,
											"end": 7894,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7452,
											"end": 7894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7900,
											"end": 8080,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 7900,
											"end": 8080,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7948,
											"end": 8025,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7945,
											"end": 7946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7938,
											"end": 8026,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8045,
											"end": 8049,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8042,
											"end": 8043,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8035,
											"end": 8050,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8069,
											"end": 8073,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8066,
											"end": 8067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8059,
											"end": 8074,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8086,
											"end": 8277,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 8086,
											"end": 8277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8126,
											"end": 8129,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8145,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 8163,
											"end": 8164,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8145,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 8145,
											"end": 8165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8145,
											"end": 8165,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 8145,
											"end": 8165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8140,
											"end": 8165,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8140,
											"end": 8165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8179,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 8197,
											"end": 8198,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8179,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 8179,
											"end": 8199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8179,
											"end": 8199,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 8179,
											"end": 8199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8174,
											"end": 8199,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8174,
											"end": 8199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8222,
											"end": 8223,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8219,
											"end": 8220,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8215,
											"end": 8224,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8208,
											"end": 8224,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8208,
											"end": 8224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8243,
											"end": 8246,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8240,
											"end": 8241,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8237,
											"end": 8247,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8234,
											"end": 8270,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8234,
											"end": 8270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 8234,
											"end": 8270,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8250,
											"end": 8268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 8250,
											"end": 8268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 8250,
											"end": 8268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8250,
											"end": 8268,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 8250,
											"end": 8268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8234,
											"end": 8270,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 8234,
											"end": 8270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8086,
											"end": 8277,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8086,
											"end": 8277,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8086,
											"end": 8277,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8086,
											"end": 8277,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8086,
											"end": 8277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"token-factory/Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"bondingCoefficient()": "7d2d4fec",
							"decimals()": "313ce567",
							"initialPrice()": "1d0806ae",
							"kokoro()": "3af57cdb",
							"name()": "06fdde03",
							"nftFraction()": "c250bed5",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSacrificed()": "42685d74",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ticker\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialMint\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bondingCoefficient\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kokoro\",\"outputs\":[{\"internalType\":\"contract Kokoro\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftFraction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSacrificed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"token-factory/Token.sol\":\"Kokoro\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"token-factory/Token.sol\":{\"keccak256\":\"0x89de20370e0be165378c5f8e89ab9c2e02ff9269c541dac5dde6e04f3fb36ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746a7252fc83ee25d5c0d8a71dfb2351c7d267d3075eedc850ac0842034bb188\",\"dweb:/ipfs/QmWAwzbQHJTyuga8kWmg2CMxZyrEdesBmEMrVWnu5Kjovm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "token-factory/Token.sol:Kokoro",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "token-factory/Token.sol:Kokoro",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "token-factory/Token.sol:Kokoro",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "token-factory/Token.sol:Kokoro",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "token-factory/Token.sol:Kokoro",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "token-factory/Token.sol:Kokoro",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1014,
								"contract": "token-factory/Token.sol:Kokoro",
								"label": "kokoro",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(Kokoro)1033"
							},
							{
								"astId": 1016,
								"contract": "token-factory/Token.sol:Kokoro",
								"label": "totalSacrificed",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1019,
								"contract": "token-factory/Token.sol:Kokoro",
								"label": "initialPrice",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1022,
								"contract": "token-factory/Token.sol:Kokoro",
								"label": "bondingCoefficient",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1025,
								"contract": "token-factory/Token.sol:Kokoro",
								"label": "nftFraction",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(Kokoro)1033": {
								"encoding": "inplace",
								"label": "contract Kokoro",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "ticker",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "initialMint",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"token-factory/Token.sol\":224:596  contract Token is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"token-factory/Token.sol\":264:492  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"token-factory/Token.sol\":429:441  initialOwner */\n  dup4\n    /* \"token-factory/Token.sol\":407:411  name */\n  dup4\n    /* \"token-factory/Token.sol\":413:419  ticker */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"token-factory/Token.sol\":454:484  _mint(msg.sender, initialMint) */\n  tag_18\n    /* \"token-factory/Token.sol\":460:470  msg.sender */\n  caller\n    /* \"token-factory/Token.sol\":472:483  initialMint */\n  dup3\n    /* \"token-factory/Token.sol\":454:459  _mint */\n  shl(0x20, tag_19)\n    /* \"token-factory/Token.sol\":454:484  _mint(msg.sender, initialMint) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"token-factory/Token.sol\":264:492  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"token-factory/Token.sol\":224:596  contract Token is ERC20, Ownable {... */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_19:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_23\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_25\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_26)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_31)\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_39:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_40:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_41:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_42:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_43:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_86\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_42\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_44:\n    /* \"#utility.yul\":641:665   */\n  tag_88\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_43\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_89\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_89:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_45:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_91\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_44\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:962   */\ntag_46:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":951:952   */\n  dup1\n    /* \"#utility.yul\":944:956   */\n  revert\n    /* \"#utility.yul\":968:1085   */\ntag_47:\n    /* \"#utility.yul\":1077:1078   */\n  0x00\n    /* \"#utility.yul\":1074:1075   */\n  dup1\n    /* \"#utility.yul\":1067:1079   */\n  revert\n    /* \"#utility.yul\":1091:1193   */\ntag_48:\n    /* \"#utility.yul\":1132:1138   */\n  0x00\n    /* \"#utility.yul\":1183:1185   */\n  0x1f\n    /* \"#utility.yul\":1179:1186   */\n  not\n    /* \"#utility.yul\":1174:1176   */\n  0x1f\n    /* \"#utility.yul\":1167:1172   */\n  dup4\n    /* \"#utility.yul\":1163:1177   */\n  add\n    /* \"#utility.yul\":1159:1187   */\n  and\n    /* \"#utility.yul\":1149:1187   */\n  swap1\n  pop\n    /* \"#utility.yul\":1091:1193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1199:1379   */\ntag_49:\n    /* \"#utility.yul\":1247:1324   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1244:1245   */\n  0x00\n    /* \"#utility.yul\":1237:1325   */\n  mstore\n    /* \"#utility.yul\":1344:1348   */\n  0x41\n    /* \"#utility.yul\":1341:1342   */\n  0x04\n    /* \"#utility.yul\":1334:1349   */\n  mstore\n    /* \"#utility.yul\":1368:1372   */\n  0x24\n    /* \"#utility.yul\":1365:1366   */\n  0x00\n    /* \"#utility.yul\":1358:1373   */\n  revert\n    /* \"#utility.yul\":1385:1666   */\ntag_50:\n    /* \"#utility.yul\":1468:1495   */\n  tag_97\n    /* \"#utility.yul\":1490:1494   */\n  dup3\n    /* \"#utility.yul\":1468:1495   */\n  tag_48\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1460:1466   */\n  dup2\n    /* \"#utility.yul\":1456:1496   */\n  add\n    /* \"#utility.yul\":1598:1604   */\n  dup2\n    /* \"#utility.yul\":1586:1596   */\n  dup2\n    /* \"#utility.yul\":1583:1605   */\n  lt\n    /* \"#utility.yul\":1562:1580   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1550:1560   */\n  dup3\n    /* \"#utility.yul\":1547:1581   */\n  gt\n    /* \"#utility.yul\":1544:1606   */\n  or\n    /* \"#utility.yul\":1541:1629   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":1609:1627   */\n  tag_99\n  tag_49\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1541:1629   */\ntag_98:\n    /* \"#utility.yul\":1649:1659   */\n  dup1\n    /* \"#utility.yul\":1645:1647   */\n  0x40\n    /* \"#utility.yul\":1638:1660   */\n  mstore\n    /* \"#utility.yul\":1428:1666   */\n  pop\n    /* \"#utility.yul\":1385:1666   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1672:1801   */\ntag_51:\n    /* \"#utility.yul\":1706:1712   */\n  0x00\n    /* \"#utility.yul\":1733:1753   */\n  tag_101\n  tag_39\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":1723:1753   */\n  swap1\n  pop\n    /* \"#utility.yul\":1762:1795   */\n  tag_102\n    /* \"#utility.yul\":1790:1794   */\n  dup3\n    /* \"#utility.yul\":1782:1788   */\n  dup3\n    /* \"#utility.yul\":1762:1795   */\n  tag_50\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":1672:1801   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1807:2115   */\ntag_52:\n    /* \"#utility.yul\":1869:1873   */\n  0x00\n    /* \"#utility.yul\":1959:1977   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1951:1957   */\n  dup3\n    /* \"#utility.yul\":1948:1978   */\n  gt\n    /* \"#utility.yul\":1945:2001   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":1981:1999   */\n  tag_105\n  tag_49\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":1945:2001   */\ntag_104:\n    /* \"#utility.yul\":2019:2048   */\n  tag_106\n    /* \"#utility.yul\":2041:2047   */\n  dup3\n    /* \"#utility.yul\":2019:2048   */\n  tag_48\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":2011:2048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2097:2101   */\n  dup2\n    /* \"#utility.yul\":2093:2108   */\n  add\n    /* \"#utility.yul\":2085:2108   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:2115   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2121:2369   */\ntag_53:\n    /* \"#utility.yul\":2203:2204   */\n  0x00\n    /* \"#utility.yul\":2213:2326   */\ntag_108:\n    /* \"#utility.yul\":2227:2233   */\n  dup4\n    /* \"#utility.yul\":2224:2225   */\n  dup2\n    /* \"#utility.yul\":2221:2234   */\n  lt\n    /* \"#utility.yul\":2213:2326   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":2312:2313   */\n  dup1\n    /* \"#utility.yul\":2307:2310   */\n  dup3\n    /* \"#utility.yul\":2303:2314   */\n  add\n    /* \"#utility.yul\":2297:2315   */\n  mload\n    /* \"#utility.yul\":2293:2294   */\n  dup2\n    /* \"#utility.yul\":2288:2291   */\n  dup5\n    /* \"#utility.yul\":2284:2295   */\n  add\n    /* \"#utility.yul\":2277:2316   */\n  mstore\n    /* \"#utility.yul\":2249:2251   */\n  0x20\n    /* \"#utility.yul\":2246:2247   */\n  dup2\n    /* \"#utility.yul\":2242:2252   */\n  add\n    /* \"#utility.yul\":2237:2252   */\n  swap1\n  pop\n    /* \"#utility.yul\":2213:2326   */\n  jump(tag_108)\ntag_110:\n    /* \"#utility.yul\":2360:2361   */\n  0x00\n    /* \"#utility.yul\":2351:2357   */\n  dup5\n    /* \"#utility.yul\":2346:2349   */\n  dup5\n    /* \"#utility.yul\":2342:2358   */\n  add\n    /* \"#utility.yul\":2335:2362   */\n  mstore\n    /* \"#utility.yul\":2183:2369   */\n  pop\n    /* \"#utility.yul\":2121:2369   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2375:2809   */\ntag_54:\n    /* \"#utility.yul\":2464:2469   */\n  0x00\n    /* \"#utility.yul\":2489:2555   */\n  tag_112\n    /* \"#utility.yul\":2505:2554   */\n  tag_113\n    /* \"#utility.yul\":2547:2553   */\n  dup5\n    /* \"#utility.yul\":2505:2554   */\n  tag_52\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":2489:2555   */\n  tag_51\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":2480:2555   */\n  swap1\n  pop\n    /* \"#utility.yul\":2578:2584   */\n  dup3\n    /* \"#utility.yul\":2571:2576   */\n  dup2\n    /* \"#utility.yul\":2564:2585   */\n  mstore\n    /* \"#utility.yul\":2616:2620   */\n  0x20\n    /* \"#utility.yul\":2609:2614   */\n  dup2\n    /* \"#utility.yul\":2605:2621   */\n  add\n    /* \"#utility.yul\":2654:2657   */\n  dup5\n    /* \"#utility.yul\":2645:2651   */\n  dup5\n    /* \"#utility.yul\":2640:2643   */\n  dup5\n    /* \"#utility.yul\":2636:2652   */\n  add\n    /* \"#utility.yul\":2633:2658   */\n  gt\n    /* \"#utility.yul\":2630:2742   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":2661:2740   */\n  tag_115\n  tag_47\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":2630:2742   */\ntag_114:\n    /* \"#utility.yul\":2751:2803   */\n  tag_116\n    /* \"#utility.yul\":2796:2802   */\n  dup5\n    /* \"#utility.yul\":2791:2794   */\n  dup3\n    /* \"#utility.yul\":2786:2789   */\n  dup6\n    /* \"#utility.yul\":2751:2803   */\n  tag_53\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":2470:2809   */\n  pop\n    /* \"#utility.yul\":2375:2809   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2829:3184   */\ntag_55:\n    /* \"#utility.yul\":2896:2901   */\n  0x00\n    /* \"#utility.yul\":2945:2948   */\n  dup3\n    /* \"#utility.yul\":2938:2942   */\n  0x1f\n    /* \"#utility.yul\":2930:2936   */\n  dup4\n    /* \"#utility.yul\":2926:2943   */\n  add\n    /* \"#utility.yul\":2922:2949   */\n  slt\n    /* \"#utility.yul\":2912:3034   */\n  tag_118\n  jumpi\n    /* \"#utility.yul\":2953:3032   */\n  tag_119\n  tag_46\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":2912:3034   */\ntag_118:\n    /* \"#utility.yul\":3063:3069   */\n  dup2\n    /* \"#utility.yul\":3057:3070   */\n  mload\n    /* \"#utility.yul\":3088:3178   */\n  tag_120\n    /* \"#utility.yul\":3174:3177   */\n  dup5\n    /* \"#utility.yul\":3166:3172   */\n  dup3\n    /* \"#utility.yul\":3159:3163   */\n  0x20\n    /* \"#utility.yul\":3151:3157   */\n  dup7\n    /* \"#utility.yul\":3147:3164   */\n  add\n    /* \"#utility.yul\":3088:3178   */\n  tag_54\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3079:3178   */\n  swap2\n  pop\n    /* \"#utility.yul\":2902:3184   */\n  pop\n    /* \"#utility.yul\":2829:3184   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3190:3267   */\ntag_56:\n    /* \"#utility.yul\":3227:3234   */\n  0x00\n    /* \"#utility.yul\":3256:3261   */\n  dup2\n    /* \"#utility.yul\":3245:3261   */\n  swap1\n  pop\n    /* \"#utility.yul\":3190:3267   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3273:3395   */\ntag_57:\n    /* \"#utility.yul\":3346:3370   */\n  tag_123\n    /* \"#utility.yul\":3364:3369   */\n  dup2\n    /* \"#utility.yul\":3346:3370   */\n  tag_56\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":3339:3344   */\n  dup2\n    /* \"#utility.yul\":3336:3371   */\n  eq\n    /* \"#utility.yul\":3326:3389   */\n  tag_124\n  jumpi\n    /* \"#utility.yul\":3385:3386   */\n  0x00\n    /* \"#utility.yul\":3382:3383   */\n  dup1\n    /* \"#utility.yul\":3375:3387   */\n  revert\n    /* \"#utility.yul\":3326:3389   */\ntag_124:\n    /* \"#utility.yul\":3273:3395   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3401:3544   */\ntag_58:\n    /* \"#utility.yul\":3458:3463   */\n  0x00\n    /* \"#utility.yul\":3489:3495   */\n  dup2\n    /* \"#utility.yul\":3483:3496   */\n  mload\n    /* \"#utility.yul\":3474:3496   */\n  swap1\n  pop\n    /* \"#utility.yul\":3505:3538   */\n  tag_126\n    /* \"#utility.yul\":3532:3537   */\n  dup2\n    /* \"#utility.yul\":3505:3538   */\n  tag_57\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3401:3544   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3550:4716   */\ntag_3:\n    /* \"#utility.yul\":3667:3673   */\n  0x00\n    /* \"#utility.yul\":3675:3681   */\n  dup1\n    /* \"#utility.yul\":3683:3689   */\n  0x00\n    /* \"#utility.yul\":3691:3697   */\n  dup1\n    /* \"#utility.yul\":3740:3743   */\n  0x80\n    /* \"#utility.yul\":3728:3737   */\n  dup6\n    /* \"#utility.yul\":3719:3726   */\n  dup8\n    /* \"#utility.yul\":3715:3738   */\n  sub\n    /* \"#utility.yul\":3711:3744   */\n  slt\n    /* \"#utility.yul\":3708:3828   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":3747:3826   */\n  tag_129\n  tag_40\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":3708:3828   */\ntag_128:\n    /* \"#utility.yul\":3867:3868   */\n  0x00\n    /* \"#utility.yul\":3892:3956   */\n  tag_130\n    /* \"#utility.yul\":3948:3955   */\n  dup8\n    /* \"#utility.yul\":3939:3945   */\n  dup3\n    /* \"#utility.yul\":3928:3937   */\n  dup9\n    /* \"#utility.yul\":3924:3946   */\n  add\n    /* \"#utility.yul\":3892:3956   */\n  tag_45\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":3882:3956   */\n  swap5\n  pop\n    /* \"#utility.yul\":3838:3966   */\n  pop\n    /* \"#utility.yul\":4026:4028   */\n  0x20\n    /* \"#utility.yul\":4015:4024   */\n  dup6\n    /* \"#utility.yul\":4011:4029   */\n  add\n    /* \"#utility.yul\":4005:4030   */\n  mload\n    /* \"#utility.yul\":4057:4075   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4049:4055   */\n  dup2\n    /* \"#utility.yul\":4046:4076   */\n  gt\n    /* \"#utility.yul\":4043:4160   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":4079:4158   */\n  tag_132\n  tag_41\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4043:4160   */\ntag_131:\n    /* \"#utility.yul\":4184:4258   */\n  tag_133\n    /* \"#utility.yul\":4250:4257   */\n  dup8\n    /* \"#utility.yul\":4241:4247   */\n  dup3\n    /* \"#utility.yul\":4230:4239   */\n  dup9\n    /* \"#utility.yul\":4226:4248   */\n  add\n    /* \"#utility.yul\":4184:4258   */\n  tag_55\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":4174:4258   */\n  swap4\n  pop\n    /* \"#utility.yul\":3976:4268   */\n  pop\n    /* \"#utility.yul\":4328:4330   */\n  0x40\n    /* \"#utility.yul\":4317:4326   */\n  dup6\n    /* \"#utility.yul\":4313:4331   */\n  add\n    /* \"#utility.yul\":4307:4332   */\n  mload\n    /* \"#utility.yul\":4359:4377   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4351:4357   */\n  dup2\n    /* \"#utility.yul\":4348:4378   */\n  gt\n    /* \"#utility.yul\":4345:4462   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":4381:4460   */\n  tag_135\n  tag_41\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":4345:4462   */\ntag_134:\n    /* \"#utility.yul\":4486:4560   */\n  tag_136\n    /* \"#utility.yul\":4552:4559   */\n  dup8\n    /* \"#utility.yul\":4543:4549   */\n  dup3\n    /* \"#utility.yul\":4532:4541   */\n  dup9\n    /* \"#utility.yul\":4528:4550   */\n  add\n    /* \"#utility.yul\":4486:4560   */\n  tag_55\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":4476:4560   */\n  swap3\n  pop\n    /* \"#utility.yul\":4278:4570   */\n  pop\n    /* \"#utility.yul\":4609:4611   */\n  0x60\n    /* \"#utility.yul\":4635:4699   */\n  tag_137\n    /* \"#utility.yul\":4691:4698   */\n  dup8\n    /* \"#utility.yul\":4682:4688   */\n  dup3\n    /* \"#utility.yul\":4671:4680   */\n  dup9\n    /* \"#utility.yul\":4667:4689   */\n  add\n    /* \"#utility.yul\":4635:4699   */\n  tag_58\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":4625:4699   */\n  swap2\n  pop\n    /* \"#utility.yul\":4580:4709   */\n  pop\n    /* \"#utility.yul\":3550:4716   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4722:4821   */\ntag_59:\n    /* \"#utility.yul\":4774:4780   */\n  0x00\n    /* \"#utility.yul\":4808:4813   */\n  dup2\n    /* \"#utility.yul\":4802:4814   */\n  mload\n    /* \"#utility.yul\":4792:4814   */\n  swap1\n  pop\n    /* \"#utility.yul\":4722:4821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4827:5007   */\ntag_60:\n    /* \"#utility.yul\":4875:4952   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4872:4873   */\n  0x00\n    /* \"#utility.yul\":4865:4953   */\n  mstore\n    /* \"#utility.yul\":4972:4976   */\n  0x22\n    /* \"#utility.yul\":4969:4970   */\n  0x04\n    /* \"#utility.yul\":4962:4977   */\n  mstore\n    /* \"#utility.yul\":4996:5000   */\n  0x24\n    /* \"#utility.yul\":4993:4994   */\n  0x00\n    /* \"#utility.yul\":4986:5001   */\n  revert\n    /* \"#utility.yul\":5013:5333   */\ntag_61:\n    /* \"#utility.yul\":5057:5063   */\n  0x00\n    /* \"#utility.yul\":5094:5095   */\n  0x02\n    /* \"#utility.yul\":5088:5092   */\n  dup3\n    /* \"#utility.yul\":5084:5096   */\n  div\n    /* \"#utility.yul\":5074:5096   */\n  swap1\n  pop\n    /* \"#utility.yul\":5141:5142   */\n  0x01\n    /* \"#utility.yul\":5135:5139   */\n  dup3\n    /* \"#utility.yul\":5131:5143   */\n  and\n    /* \"#utility.yul\":5162:5180   */\n  dup1\n    /* \"#utility.yul\":5152:5233   */\n  tag_141\n  jumpi\n    /* \"#utility.yul\":5218:5222   */\n  0x7f\n    /* \"#utility.yul\":5210:5216   */\n  dup3\n    /* \"#utility.yul\":5206:5223   */\n  and\n    /* \"#utility.yul\":5196:5223   */\n  swap2\n  pop\n    /* \"#utility.yul\":5152:5233   */\ntag_141:\n    /* \"#utility.yul\":5280:5282   */\n  0x20\n    /* \"#utility.yul\":5272:5278   */\n  dup3\n    /* \"#utility.yul\":5269:5283   */\n  lt\n    /* \"#utility.yul\":5249:5267   */\n  dup2\n    /* \"#utility.yul\":5246:5284   */\n  sub\n    /* \"#utility.yul\":5243:5327   */\n  tag_142\n  jumpi\n    /* \"#utility.yul\":5299:5317   */\n  tag_143\n  tag_60\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":5243:5327   */\ntag_142:\n    /* \"#utility.yul\":5064:5333   */\n  pop\n    /* \"#utility.yul\":5013:5333   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5339:5480   */\ntag_62:\n    /* \"#utility.yul\":5388:5392   */\n  0x00\n    /* \"#utility.yul\":5411:5414   */\n  dup2\n    /* \"#utility.yul\":5403:5414   */\n  swap1\n  pop\n    /* \"#utility.yul\":5434:5437   */\n  dup2\n    /* \"#utility.yul\":5431:5432   */\n  0x00\n    /* \"#utility.yul\":5424:5438   */\n  mstore\n    /* \"#utility.yul\":5468:5472   */\n  0x20\n    /* \"#utility.yul\":5465:5466   */\n  0x00\n    /* \"#utility.yul\":5455:5473   */\n  keccak256\n    /* \"#utility.yul\":5447:5473   */\n  swap1\n  pop\n    /* \"#utility.yul\":5339:5480   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5486:5579   */\ntag_63:\n    /* \"#utility.yul\":5523:5529   */\n  0x00\n    /* \"#utility.yul\":5570:5572   */\n  0x20\n    /* \"#utility.yul\":5565:5567   */\n  0x1f\n    /* \"#utility.yul\":5558:5563   */\n  dup4\n    /* \"#utility.yul\":5554:5568   */\n  add\n    /* \"#utility.yul\":5550:5573   */\n  div\n    /* \"#utility.yul\":5540:5573   */\n  swap1\n  pop\n    /* \"#utility.yul\":5486:5579   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5585:5692   */\ntag_64:\n    /* \"#utility.yul\":5629:5637   */\n  0x00\n    /* \"#utility.yul\":5679:5684   */\n  dup3\n    /* \"#utility.yul\":5673:5677   */\n  dup3\n    /* \"#utility.yul\":5669:5685   */\n  shl\n    /* \"#utility.yul\":5648:5685   */\n  swap1\n  pop\n    /* \"#utility.yul\":5585:5692   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5698:6091   */\ntag_65:\n    /* \"#utility.yul\":5767:5773   */\n  0x00\n    /* \"#utility.yul\":5817:5818   */\n  0x08\n    /* \"#utility.yul\":5805:5815   */\n  dup4\n    /* \"#utility.yul\":5801:5819   */\n  mul\n    /* \"#utility.yul\":5840:5937   */\n  tag_148\n    /* \"#utility.yul\":5870:5936   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5859:5868   */\n  dup3\n    /* \"#utility.yul\":5840:5937   */\n  tag_64\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":5958:5997   */\n  tag_149\n    /* \"#utility.yul\":5988:5996   */\n  dup7\n    /* \"#utility.yul\":5977:5986   */\n  dup4\n    /* \"#utility.yul\":5958:5997   */\n  tag_64\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":5946:5997   */\n  swap6\n  pop\n    /* \"#utility.yul\":6030:6034   */\n  dup1\n    /* \"#utility.yul\":6026:6035   */\n  not\n    /* \"#utility.yul\":6019:6024   */\n  dup5\n    /* \"#utility.yul\":6015:6036   */\n  and\n    /* \"#utility.yul\":6006:6036   */\n  swap4\n  pop\n    /* \"#utility.yul\":6079:6083   */\n  dup1\n    /* \"#utility.yul\":6069:6077   */\n  dup7\n    /* \"#utility.yul\":6065:6084   */\n  and\n    /* \"#utility.yul\":6058:6063   */\n  dup5\n    /* \"#utility.yul\":6055:6085   */\n  or\n    /* \"#utility.yul\":6045:6085   */\n  swap3\n  pop\n    /* \"#utility.yul\":5774:6091   */\n  pop\n  pop\n    /* \"#utility.yul\":5698:6091   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6097:6157   */\ntag_66:\n    /* \"#utility.yul\":6125:6128   */\n  0x00\n    /* \"#utility.yul\":6146:6151   */\n  dup2\n    /* \"#utility.yul\":6139:6151   */\n  swap1\n  pop\n    /* \"#utility.yul\":6097:6157   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6163:6305   */\ntag_67:\n    /* \"#utility.yul\":6213:6222   */\n  0x00\n    /* \"#utility.yul\":6246:6299   */\n  tag_152\n    /* \"#utility.yul\":6264:6298   */\n  tag_153\n    /* \"#utility.yul\":6273:6297   */\n  tag_154\n    /* \"#utility.yul\":6291:6296   */\n  dup5\n    /* \"#utility.yul\":6273:6297   */\n  tag_56\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":6264:6298   */\n  tag_66\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6246:6299   */\n  tag_56\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6233:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6163:6305   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6311:6386   */\ntag_68:\n    /* \"#utility.yul\":6354:6357   */\n  0x00\n    /* \"#utility.yul\":6375:6380   */\n  dup2\n    /* \"#utility.yul\":6368:6380   */\n  swap1\n  pop\n    /* \"#utility.yul\":6311:6386   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6392:6661   */\ntag_69:\n    /* \"#utility.yul\":6502:6541   */\n  tag_157\n    /* \"#utility.yul\":6533:6540   */\n  dup4\n    /* \"#utility.yul\":6502:6541   */\n  tag_67\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6563:6654   */\n  tag_158\n    /* \"#utility.yul\":6612:6653   */\n  tag_159\n    /* \"#utility.yul\":6636:6652   */\n  dup3\n    /* \"#utility.yul\":6612:6653   */\n  tag_68\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":6604:6610   */\n  dup5\n    /* \"#utility.yul\":6597:6601   */\n  dup5\n    /* \"#utility.yul\":6591:6602   */\n  sload\n    /* \"#utility.yul\":6563:6654   */\n  tag_65\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6557:6561   */\n  dup3\n    /* \"#utility.yul\":6550:6655   */\n  sstore\n    /* \"#utility.yul\":6468:6661   */\n  pop\n    /* \"#utility.yul\":6392:6661   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6667:6740   */\ntag_70:\n    /* \"#utility.yul\":6712:6715   */\n  0x00\n    /* \"#utility.yul\":6667:6740   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6746:6935   */\ntag_71:\n    /* \"#utility.yul\":6823:6855   */\n  tag_162\n  tag_70\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":6864:6929   */\n  tag_163\n    /* \"#utility.yul\":6922:6928   */\n  dup2\n    /* \"#utility.yul\":6914:6920   */\n  dup5\n    /* \"#utility.yul\":6908:6912   */\n  dup5\n    /* \"#utility.yul\":6864:6929   */\n  tag_69\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":6799:6935   */\n  pop\n    /* \"#utility.yul\":6746:6935   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6941:7127   */\ntag_72:\n    /* \"#utility.yul\":7001:7121   */\ntag_165:\n    /* \"#utility.yul\":7018:7021   */\n  dup2\n    /* \"#utility.yul\":7011:7016   */\n  dup2\n    /* \"#utility.yul\":7008:7022   */\n  lt\n    /* \"#utility.yul\":7001:7121   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":7072:7111   */\n  tag_168\n    /* \"#utility.yul\":7109:7110   */\n  0x00\n    /* \"#utility.yul\":7102:7107   */\n  dup3\n    /* \"#utility.yul\":7072:7111   */\n  tag_71\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7045:7046   */\n  0x01\n    /* \"#utility.yul\":7038:7043   */\n  dup2\n    /* \"#utility.yul\":7034:7047   */\n  add\n    /* \"#utility.yul\":7025:7047   */\n  swap1\n  pop\n    /* \"#utility.yul\":7001:7121   */\n  jump(tag_165)\ntag_167:\n    /* \"#utility.yul\":6941:7127   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7133:7676   */\ntag_73:\n    /* \"#utility.yul\":7234:7236   */\n  0x1f\n    /* \"#utility.yul\":7229:7232   */\n  dup3\n    /* \"#utility.yul\":7226:7237   */\n  gt\n    /* \"#utility.yul\":7223:7669   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":7268:7306   */\n  tag_171\n    /* \"#utility.yul\":7300:7305   */\n  dup2\n    /* \"#utility.yul\":7268:7306   */\n  tag_62\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":7352:7381   */\n  tag_172\n    /* \"#utility.yul\":7370:7380   */\n  dup5\n    /* \"#utility.yul\":7352:7381   */\n  tag_63\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":7342:7350   */\n  dup2\n    /* \"#utility.yul\":7338:7382   */\n  add\n    /* \"#utility.yul\":7535:7537   */\n  0x20\n    /* \"#utility.yul\":7523:7533   */\n  dup6\n    /* \"#utility.yul\":7520:7538   */\n  lt\n    /* \"#utility.yul\":7517:7566   */\n  iszero\n  tag_173\n  jumpi\n    /* \"#utility.yul\":7556:7564   */\n  dup2\n    /* \"#utility.yul\":7541:7564   */\n  swap1\n  pop\n    /* \"#utility.yul\":7517:7566   */\ntag_173:\n    /* \"#utility.yul\":7579:7659   */\n  tag_174\n    /* \"#utility.yul\":7635:7657   */\n  tag_175\n    /* \"#utility.yul\":7653:7656   */\n  dup6\n    /* \"#utility.yul\":7635:7657   */\n  tag_63\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":7625:7633   */\n  dup4\n    /* \"#utility.yul\":7621:7658   */\n  add\n    /* \"#utility.yul\":7608:7619   */\n  dup3\n    /* \"#utility.yul\":7579:7659   */\n  tag_72\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":7238:7669   */\n  pop\n  pop\n    /* \"#utility.yul\":7223:7669   */\ntag_170:\n    /* \"#utility.yul\":7133:7676   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7682:7799   */\ntag_74:\n    /* \"#utility.yul\":7736:7744   */\n  0x00\n    /* \"#utility.yul\":7786:7791   */\n  dup3\n    /* \"#utility.yul\":7780:7784   */\n  dup3\n    /* \"#utility.yul\":7776:7792   */\n  shr\n    /* \"#utility.yul\":7755:7792   */\n  swap1\n  pop\n    /* \"#utility.yul\":7682:7799   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7805:7974   */\ntag_75:\n    /* \"#utility.yul\":7849:7855   */\n  0x00\n    /* \"#utility.yul\":7882:7933   */\n  tag_178\n    /* \"#utility.yul\":7930:7931   */\n  0x00\n    /* \"#utility.yul\":7926:7932   */\n  not\n    /* \"#utility.yul\":7918:7923   */\n  dup5\n    /* \"#utility.yul\":7915:7916   */\n  0x08\n    /* \"#utility.yul\":7911:7924   */\n  mul\n    /* \"#utility.yul\":7882:7933   */\n  tag_74\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":7878:7934   */\n  not\n    /* \"#utility.yul\":7963:7967   */\n  dup1\n    /* \"#utility.yul\":7957:7961   */\n  dup4\n    /* \"#utility.yul\":7953:7968   */\n  and\n    /* \"#utility.yul\":7943:7968   */\n  swap2\n  pop\n    /* \"#utility.yul\":7856:7974   */\n  pop\n    /* \"#utility.yul\":7805:7974   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7979:8274   */\ntag_76:\n    /* \"#utility.yul\":8055:8059   */\n  0x00\n    /* \"#utility.yul\":8201:8230   */\n  tag_180\n    /* \"#utility.yul\":8226:8229   */\n  dup4\n    /* \"#utility.yul\":8220:8224   */\n  dup4\n    /* \"#utility.yul\":8201:8230   */\n  tag_75\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8193:8230   */\n  swap2\n  pop\n    /* \"#utility.yul\":8263:8266   */\n  dup3\n    /* \"#utility.yul\":8260:8261   */\n  0x02\n    /* \"#utility.yul\":8256:8267   */\n  mul\n    /* \"#utility.yul\":8250:8254   */\n  dup3\n    /* \"#utility.yul\":8247:8268   */\n  or\n    /* \"#utility.yul\":8239:8268   */\n  swap1\n  pop\n    /* \"#utility.yul\":7979:8274   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8279:9674   */\ntag_9:\n    /* \"#utility.yul\":8396:8433   */\n  tag_182\n    /* \"#utility.yul\":8429:8432   */\n  dup3\n    /* \"#utility.yul\":8396:8433   */\n  tag_59\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":8498:8516   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8490:8496   */\n  dup2\n    /* \"#utility.yul\":8487:8517   */\n  gt\n    /* \"#utility.yul\":8484:8540   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":8520:8538   */\n  tag_184\n  tag_49\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":8484:8540   */\ntag_183:\n    /* \"#utility.yul\":8564:8602   */\n  tag_185\n    /* \"#utility.yul\":8596:8600   */\n  dup3\n    /* \"#utility.yul\":8590:8601   */\n  sload\n    /* \"#utility.yul\":8564:8602   */\n  tag_61\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":8649:8716   */\n  tag_186\n    /* \"#utility.yul\":8709:8715   */\n  dup3\n    /* \"#utility.yul\":8701:8707   */\n  dup3\n    /* \"#utility.yul\":8695:8699   */\n  dup6\n    /* \"#utility.yul\":8649:8716   */\n  tag_73\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":8743:8744   */\n  0x00\n    /* \"#utility.yul\":8767:8771   */\n  0x20\n    /* \"#utility.yul\":8754:8771   */\n  swap1\n  pop\n    /* \"#utility.yul\":8799:8801   */\n  0x1f\n    /* \"#utility.yul\":8791:8797   */\n  dup4\n    /* \"#utility.yul\":8788:8802   */\n  gt\n    /* \"#utility.yul\":8816:8817   */\n  0x01\n    /* \"#utility.yul\":8811:9429   */\n  dup2\n  eq\n  tag_188\n  jumpi\n    /* \"#utility.yul\":9473:9474   */\n  0x00\n    /* \"#utility.yul\":9490:9496   */\n  dup5\n    /* \"#utility.yul\":9487:9564   */\n  iszero\n  tag_189\n  jumpi\n    /* \"#utility.yul\":9539:9548   */\n  dup3\n    /* \"#utility.yul\":9534:9537   */\n  dup8\n    /* \"#utility.yul\":9530:9549   */\n  add\n    /* \"#utility.yul\":9524:9550   */\n  mload\n    /* \"#utility.yul\":9515:9550   */\n  swap1\n  pop\n    /* \"#utility.yul\":9487:9564   */\ntag_189:\n    /* \"#utility.yul\":9590:9657   */\n  tag_190\n    /* \"#utility.yul\":9650:9656   */\n  dup6\n    /* \"#utility.yul\":9643:9648   */\n  dup3\n    /* \"#utility.yul\":9590:9657   */\n  tag_76\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9584:9588   */\n  dup7\n    /* \"#utility.yul\":9577:9658   */\n  sstore\n    /* \"#utility.yul\":9446:9668   */\n  pop\n    /* \"#utility.yul\":8781:9668   */\n  jump(tag_187)\n    /* \"#utility.yul\":8811:9429   */\ntag_188:\n    /* \"#utility.yul\":8863:8867   */\n  0x1f\n    /* \"#utility.yul\":8859:8868   */\n  not\n    /* \"#utility.yul\":8851:8857   */\n  dup5\n    /* \"#utility.yul\":8847:8869   */\n  and\n    /* \"#utility.yul\":8897:8934   */\n  tag_191\n    /* \"#utility.yul\":8929:8933   */\n  dup7\n    /* \"#utility.yul\":8897:8934   */\n  tag_62\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":8956:8957   */\n  0x00\n    /* \"#utility.yul\":8970:9178   */\ntag_192:\n    /* \"#utility.yul\":8984:8991   */\n  dup3\n    /* \"#utility.yul\":8981:8982   */\n  dup2\n    /* \"#utility.yul\":8978:8992   */\n  lt\n    /* \"#utility.yul\":8970:9178   */\n  iszero\n  tag_194\n  jumpi\n    /* \"#utility.yul\":9063:9072   */\n  dup5\n    /* \"#utility.yul\":9058:9061   */\n  dup10\n    /* \"#utility.yul\":9054:9073   */\n  add\n    /* \"#utility.yul\":9048:9074   */\n  mload\n    /* \"#utility.yul\":9040:9046   */\n  dup3\n    /* \"#utility.yul\":9033:9075   */\n  sstore\n    /* \"#utility.yul\":9114:9115   */\n  0x01\n    /* \"#utility.yul\":9106:9112   */\n  dup3\n    /* \"#utility.yul\":9102:9116   */\n  add\n    /* \"#utility.yul\":9092:9116   */\n  swap2\n  pop\n    /* \"#utility.yul\":9161:9163   */\n  0x20\n    /* \"#utility.yul\":9150:9159   */\n  dup6\n    /* \"#utility.yul\":9146:9164   */\n  add\n    /* \"#utility.yul\":9133:9164   */\n  swap5\n  pop\n    /* \"#utility.yul\":9007:9011   */\n  0x20\n    /* \"#utility.yul\":9004:9005   */\n  dup2\n    /* \"#utility.yul\":9000:9012   */\n  add\n    /* \"#utility.yul\":8995:9012   */\n  swap1\n  pop\n    /* \"#utility.yul\":8970:9178   */\n  jump(tag_192)\ntag_194:\n    /* \"#utility.yul\":9206:9212   */\n  dup7\n    /* \"#utility.yul\":9197:9204   */\n  dup4\n    /* \"#utility.yul\":9194:9213   */\n  lt\n    /* \"#utility.yul\":9191:9370   */\n  iszero\n  tag_195\n  jumpi\n    /* \"#utility.yul\":9264:9273   */\n  dup5\n    /* \"#utility.yul\":9259:9262   */\n  dup10\n    /* \"#utility.yul\":9255:9274   */\n  add\n    /* \"#utility.yul\":9249:9275   */\n  mload\n    /* \"#utility.yul\":9307:9355   */\n  tag_196\n    /* \"#utility.yul\":9349:9353   */\n  0x1f\n    /* \"#utility.yul\":9341:9347   */\n  dup10\n    /* \"#utility.yul\":9337:9354   */\n  and\n    /* \"#utility.yul\":9326:9335   */\n  dup3\n    /* \"#utility.yul\":9307:9355   */\n  tag_75\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":9299:9305   */\n  dup4\n    /* \"#utility.yul\":9292:9356   */\n  sstore\n    /* \"#utility.yul\":9214:9370   */\n  pop\n    /* \"#utility.yul\":9191:9370   */\ntag_195:\n    /* \"#utility.yul\":9416:9417   */\n  0x01\n    /* \"#utility.yul\":9412:9413   */\n  0x02\n    /* \"#utility.yul\":9404:9410   */\n  dup9\n    /* \"#utility.yul\":9400:9414   */\n  mul\n    /* \"#utility.yul\":9396:9418   */\n  add\n    /* \"#utility.yul\":9390:9394   */\n  dup9\n    /* \"#utility.yul\":9383:9419   */\n  sstore\n    /* \"#utility.yul\":8818:9429   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8781:9668   */\ntag_187:\n  pop\n    /* \"#utility.yul\":8371:9674   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8279:9674   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9680:9798   */\ntag_77:\n    /* \"#utility.yul\":9767:9791   */\n  tag_198\n    /* \"#utility.yul\":9785:9790   */\n  dup2\n    /* \"#utility.yul\":9767:9791   */\n  tag_43\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":9762:9765   */\n  dup3\n    /* \"#utility.yul\":9755:9792   */\n  mstore\n    /* \"#utility.yul\":9680:9798   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9804:10026   */\ntag_14:\n    /* \"#utility.yul\":9897:9901   */\n  0x00\n    /* \"#utility.yul\":9935:9937   */\n  0x20\n    /* \"#utility.yul\":9924:9933   */\n  dup3\n    /* \"#utility.yul\":9920:9938   */\n  add\n    /* \"#utility.yul\":9912:9938   */\n  swap1\n  pop\n    /* \"#utility.yul\":9948:10019   */\n  tag_200\n    /* \"#utility.yul\":10016:10017   */\n  0x00\n    /* \"#utility.yul\":10005:10014   */\n  dup4\n    /* \"#utility.yul\":10001:10018   */\n  add\n    /* \"#utility.yul\":9992:9998   */\n  dup5\n    /* \"#utility.yul\":9948:10019   */\n  tag_77\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":9804:10026   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10032:10212   */\ntag_78:\n    /* \"#utility.yul\":10080:10157   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10077:10078   */\n  0x00\n    /* \"#utility.yul\":10070:10158   */\n  mstore\n    /* \"#utility.yul\":10177:10181   */\n  0x11\n    /* \"#utility.yul\":10174:10175   */\n  0x04\n    /* \"#utility.yul\":10167:10182   */\n  mstore\n    /* \"#utility.yul\":10201:10205   */\n  0x24\n    /* \"#utility.yul\":10198:10199   */\n  0x00\n    /* \"#utility.yul\":10191:10206   */\n  revert\n    /* \"#utility.yul\":10218:10409   */\ntag_30:\n    /* \"#utility.yul\":10258:10261   */\n  0x00\n    /* \"#utility.yul\":10277:10297   */\n  tag_203\n    /* \"#utility.yul\":10295:10296   */\n  dup3\n    /* \"#utility.yul\":10277:10297   */\n  tag_56\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":10272:10297   */\n  swap2\n  pop\n    /* \"#utility.yul\":10311:10331   */\n  tag_204\n    /* \"#utility.yul\":10329:10330   */\n  dup4\n    /* \"#utility.yul\":10311:10331   */\n  tag_56\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":10306:10331   */\n  swap3\n  pop\n    /* \"#utility.yul\":10354:10355   */\n  dup3\n    /* \"#utility.yul\":10351:10352   */\n  dup3\n    /* \"#utility.yul\":10347:10356   */\n  add\n    /* \"#utility.yul\":10340:10356   */\n  swap1\n  pop\n    /* \"#utility.yul\":10375:10378   */\n  dup1\n    /* \"#utility.yul\":10372:10373   */\n  dup3\n    /* \"#utility.yul\":10369:10379   */\n  gt\n    /* \"#utility.yul\":10366:10402   */\n  iszero\n  tag_205\n  jumpi\n    /* \"#utility.yul\":10382:10400   */\n  tag_206\n  tag_78\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":10366:10402   */\ntag_205:\n    /* \"#utility.yul\":10218:10409   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10415:10533   */\ntag_79:\n    /* \"#utility.yul\":10502:10526   */\n  tag_208\n    /* \"#utility.yul\":10520:10525   */\n  dup2\n    /* \"#utility.yul\":10502:10526   */\n  tag_56\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":10497:10500   */\n  dup3\n    /* \"#utility.yul\":10490:10527   */\n  mstore\n    /* \"#utility.yul\":10415:10533   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10539:10981   */\ntag_34:\n    /* \"#utility.yul\":10688:10692   */\n  0x00\n    /* \"#utility.yul\":10726:10728   */\n  0x60\n    /* \"#utility.yul\":10715:10724   */\n  dup3\n    /* \"#utility.yul\":10711:10729   */\n  add\n    /* \"#utility.yul\":10703:10729   */\n  swap1\n  pop\n    /* \"#utility.yul\":10739:10810   */\n  tag_210\n    /* \"#utility.yul\":10807:10808   */\n  0x00\n    /* \"#utility.yul\":10796:10805   */\n  dup4\n    /* \"#utility.yul\":10792:10809   */\n  add\n    /* \"#utility.yul\":10783:10789   */\n  dup7\n    /* \"#utility.yul\":10739:10810   */\n  tag_77\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":10820:10892   */\n  tag_211\n    /* \"#utility.yul\":10888:10890   */\n  0x20\n    /* \"#utility.yul\":10877:10886   */\n  dup4\n    /* \"#utility.yul\":10873:10891   */\n  add\n    /* \"#utility.yul\":10864:10870   */\n  dup6\n    /* \"#utility.yul\":10820:10892   */\n  tag_79\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":10902:10974   */\n  tag_212\n    /* \"#utility.yul\":10970:10972   */\n  0x40\n    /* \"#utility.yul\":10959:10968   */\n  dup4\n    /* \"#utility.yul\":10955:10973   */\n  add\n    /* \"#utility.yul\":10946:10952   */\n  dup5\n    /* \"#utility.yul\":10902:10974   */\n  tag_79\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":10539:10981   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10987:11209   */\ntag_38:\n    /* \"#utility.yul\":11080:11084   */\n  0x00\n    /* \"#utility.yul\":11118:11120   */\n  0x20\n    /* \"#utility.yul\":11107:11116   */\n  dup3\n    /* \"#utility.yul\":11103:11121   */\n  add\n    /* \"#utility.yul\":11095:11121   */\n  swap1\n  pop\n    /* \"#utility.yul\":11131:11202   */\n  tag_214\n    /* \"#utility.yul\":11199:11200   */\n  0x00\n    /* \"#utility.yul\":11188:11197   */\n  dup4\n    /* \"#utility.yul\":11184:11201   */\n  add\n    /* \"#utility.yul\":11175:11181   */\n  dup5\n    /* \"#utility.yul\":11131:11202   */\n  tag_79\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":10987:11209   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"token-factory/Token.sol\":224:596  contract Token is ERC20, Ownable {... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"token-factory/Token.sol\":224:596  contract Token is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token-factory/Token.sol\":498:593  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_8:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_73\n      swap1\n      tag_72\n      jump\t// in\n    tag_73:\n      dup1\n      iszero\n      tag_74\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_75\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_74)\n    tag_75:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_76:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_76\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"token-factory/Token.sol\":498:593  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_91:\n        /* \"token-factory/Token.sol\":568:585  _mint(to, amount) */\n      tag_94\n        /* \"token-factory/Token.sol\":574:576  to */\n      dup3\n        /* \"token-factory/Token.sol\":578:584  amount */\n      dup3\n        /* \"token-factory/Token.sol\":568:573  _mint */\n      tag_95\n        /* \"token-factory/Token.sol\":568:585  _mint(to, amount) */\n      jump\t// in\n    tag_94:\n        /* \"token-factory/Token.sol\":498:593  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_72\n      jump\t// in\n    tag_104:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_72\n      jump\t// in\n    tag_105:\n      dup1\n      iszero\n      tag_106\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_107\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_106)\n    tag_107:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_108:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_108\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_116\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_125\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_131\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_133\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_140\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_154\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_159)\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_163)\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_164\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_165:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_166:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:535   */\n    tag_167:\n        /* \"#utility.yul\":369:370   */\n      0x00\n        /* \"#utility.yul\":379:492   */\n    tag_192:\n        /* \"#utility.yul\":393:399   */\n      dup4\n        /* \"#utility.yul\":390:391   */\n      dup2\n        /* \"#utility.yul\":387:400   */\n      lt\n        /* \"#utility.yul\":379:492   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":478:479   */\n      dup1\n        /* \"#utility.yul\":473:476   */\n      dup3\n        /* \"#utility.yul\":469:480   */\n      add\n        /* \"#utility.yul\":463:481   */\n      mload\n        /* \"#utility.yul\":459:460   */\n      dup2\n        /* \"#utility.yul\":454:457   */\n      dup5\n        /* \"#utility.yul\":450:461   */\n      add\n        /* \"#utility.yul\":443:482   */\n      mstore\n        /* \"#utility.yul\":415:417   */\n      0x20\n        /* \"#utility.yul\":412:413   */\n      dup2\n        /* \"#utility.yul\":408:418   */\n      add\n        /* \"#utility.yul\":403:418   */\n      swap1\n      pop\n        /* \"#utility.yul\":379:492   */\n      jump(tag_192)\n    tag_194:\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":517:523   */\n      dup5\n        /* \"#utility.yul\":512:515   */\n      dup5\n        /* \"#utility.yul\":508:524   */\n      add\n        /* \"#utility.yul\":501:528   */\n      mstore\n        /* \"#utility.yul\":349:535   */\n      pop\n        /* \"#utility.yul\":287:535   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":541:643   */\n    tag_168:\n        /* \"#utility.yul\":582:588   */\n      0x00\n        /* \"#utility.yul\":633:635   */\n      0x1f\n        /* \"#utility.yul\":629:636   */\n      not\n        /* \"#utility.yul\":624:626   */\n      0x1f\n        /* \"#utility.yul\":617:622   */\n      dup4\n        /* \"#utility.yul\":613:627   */\n      add\n        /* \"#utility.yul\":609:637   */\n      and\n        /* \"#utility.yul\":599:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":541:643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":649:1026   */\n    tag_169:\n        /* \"#utility.yul\":737:740   */\n      0x00\n        /* \"#utility.yul\":765:804   */\n      tag_197\n        /* \"#utility.yul\":798:803   */\n      dup3\n        /* \"#utility.yul\":765:804   */\n      tag_165\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":820:891   */\n      tag_198\n        /* \"#utility.yul\":884:890   */\n      dup2\n        /* \"#utility.yul\":879:882   */\n      dup6\n        /* \"#utility.yul\":820:891   */\n      tag_166\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":813:891   */\n      swap4\n      pop\n        /* \"#utility.yul\":900:965   */\n      tag_199\n        /* \"#utility.yul\":958:964   */\n      dup2\n        /* \"#utility.yul\":953:956   */\n      dup6\n        /* \"#utility.yul\":946:950   */\n      0x20\n        /* \"#utility.yul\":939:944   */\n      dup7\n        /* \"#utility.yul\":935:951   */\n      add\n        /* \"#utility.yul\":900:965   */\n      tag_167\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":990:1019   */\n      tag_200\n        /* \"#utility.yul\":1012:1018   */\n      dup2\n        /* \"#utility.yul\":990:1019   */\n      tag_168\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":985:988   */\n      dup5\n        /* \"#utility.yul\":981:1020   */\n      add\n        /* \"#utility.yul\":974:1020   */\n      swap2\n      pop\n        /* \"#utility.yul\":741:1026   */\n      pop\n        /* \"#utility.yul\":649:1026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1032:1345   */\n    tag_21:\n        /* \"#utility.yul\":1145:1149   */\n      0x00\n        /* \"#utility.yul\":1183:1185   */\n      0x20\n        /* \"#utility.yul\":1172:1181   */\n      dup3\n        /* \"#utility.yul\":1168:1186   */\n      add\n        /* \"#utility.yul\":1160:1186   */\n      swap1\n      pop\n        /* \"#utility.yul\":1232:1241   */\n      dup2\n        /* \"#utility.yul\":1226:1230   */\n      dup2\n        /* \"#utility.yul\":1222:1242   */\n      sub\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1207:1216   */\n      dup4\n        /* \"#utility.yul\":1203:1220   */\n      add\n        /* \"#utility.yul\":1196:1243   */\n      mstore\n        /* \"#utility.yul\":1260:1338   */\n      tag_202\n        /* \"#utility.yul\":1333:1337   */\n      dup2\n        /* \"#utility.yul\":1324:1330   */\n      dup5\n        /* \"#utility.yul\":1260:1338   */\n      tag_169\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1252:1338   */\n      swap1\n      pop\n        /* \"#utility.yul\":1032:1345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1432:1549   */\n    tag_171:\n        /* \"#utility.yul\":1541:1542   */\n      0x00\n        /* \"#utility.yul\":1538:1539   */\n      dup1\n        /* \"#utility.yul\":1531:1543   */\n      revert\n        /* \"#utility.yul\":1678:1804   */\n    tag_173:\n        /* \"#utility.yul\":1715:1722   */\n      0x00\n        /* \"#utility.yul\":1755:1797   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1748:1753   */\n      dup3\n        /* \"#utility.yul\":1744:1798   */\n      and\n        /* \"#utility.yul\":1733:1798   */\n      swap1\n      pop\n        /* \"#utility.yul\":1678:1804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1810:1906   */\n    tag_174:\n        /* \"#utility.yul\":1847:1854   */\n      0x00\n        /* \"#utility.yul\":1876:1900   */\n      tag_208\n        /* \"#utility.yul\":1894:1899   */\n      dup3\n        /* \"#utility.yul\":1876:1900   */\n      tag_173\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":1865:1900   */\n      swap1\n      pop\n        /* \"#utility.yul\":1810:1906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1912:2034   */\n    tag_175:\n        /* \"#utility.yul\":1985:2009   */\n      tag_210\n        /* \"#utility.yul\":2003:2008   */\n      dup2\n        /* \"#utility.yul\":1985:2009   */\n      tag_174\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1978:1983   */\n      dup2\n        /* \"#utility.yul\":1975:2010   */\n      eq\n        /* \"#utility.yul\":1965:2028   */\n      tag_211\n      jumpi\n        /* \"#utility.yul\":2024:2025   */\n      0x00\n        /* \"#utility.yul\":2021:2022   */\n      dup1\n        /* \"#utility.yul\":2014:2026   */\n      revert\n        /* \"#utility.yul\":1965:2028   */\n    tag_211:\n        /* \"#utility.yul\":1912:2034   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2040:2179   */\n    tag_176:\n        /* \"#utility.yul\":2086:2091   */\n      0x00\n        /* \"#utility.yul\":2124:2130   */\n      dup2\n        /* \"#utility.yul\":2111:2131   */\n      calldataload\n        /* \"#utility.yul\":2102:2131   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2173   */\n      tag_213\n        /* \"#utility.yul\":2167:2172   */\n      dup2\n        /* \"#utility.yul\":2140:2173   */\n      tag_175\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2040:2179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2185:2262   */\n    tag_177:\n        /* \"#utility.yul\":2222:2229   */\n      0x00\n        /* \"#utility.yul\":2251:2256   */\n      dup2\n        /* \"#utility.yul\":2240:2256   */\n      swap1\n      pop\n        /* \"#utility.yul\":2185:2262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2268:2390   */\n    tag_178:\n        /* \"#utility.yul\":2341:2365   */\n      tag_216\n        /* \"#utility.yul\":2359:2364   */\n      dup2\n        /* \"#utility.yul\":2341:2365   */\n      tag_177\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":2334:2339   */\n      dup2\n        /* \"#utility.yul\":2331:2366   */\n      eq\n        /* \"#utility.yul\":2321:2384   */\n      tag_217\n      jumpi\n        /* \"#utility.yul\":2380:2381   */\n      0x00\n        /* \"#utility.yul\":2377:2378   */\n      dup1\n        /* \"#utility.yul\":2370:2382   */\n      revert\n        /* \"#utility.yul\":2321:2384   */\n    tag_217:\n        /* \"#utility.yul\":2268:2390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2396:2535   */\n    tag_179:\n        /* \"#utility.yul\":2442:2447   */\n      0x00\n        /* \"#utility.yul\":2480:2486   */\n      dup2\n        /* \"#utility.yul\":2467:2487   */\n      calldataload\n        /* \"#utility.yul\":2458:2487   */\n      swap1\n      pop\n        /* \"#utility.yul\":2496:2529   */\n      tag_219\n        /* \"#utility.yul\":2523:2528   */\n      dup2\n        /* \"#utility.yul\":2496:2529   */\n      tag_178\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2396:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:3015   */\n    tag_24:\n        /* \"#utility.yul\":2609:2615   */\n      0x00\n        /* \"#utility.yul\":2617:2623   */\n      dup1\n        /* \"#utility.yul\":2666:2668   */\n      0x40\n        /* \"#utility.yul\":2654:2663   */\n      dup4\n        /* \"#utility.yul\":2645:2652   */\n      dup6\n        /* \"#utility.yul\":2641:2664   */\n      sub\n        /* \"#utility.yul\":2637:2669   */\n      slt\n        /* \"#utility.yul\":2634:2753   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":2672:2751   */\n      tag_222\n      tag_171\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2634:2753   */\n    tag_221:\n        /* \"#utility.yul\":2792:2793   */\n      0x00\n        /* \"#utility.yul\":2817:2870   */\n      tag_223\n        /* \"#utility.yul\":2862:2869   */\n      dup6\n        /* \"#utility.yul\":2853:2859   */\n      dup3\n        /* \"#utility.yul\":2842:2851   */\n      dup7\n        /* \"#utility.yul\":2838:2860   */\n      add\n        /* \"#utility.yul\":2817:2870   */\n      tag_176\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2807:2870   */\n      swap3\n      pop\n        /* \"#utility.yul\":2763:2880   */\n      pop\n        /* \"#utility.yul\":2919:2921   */\n      0x20\n        /* \"#utility.yul\":2945:2998   */\n      tag_224\n        /* \"#utility.yul\":2990:2997   */\n      dup6\n        /* \"#utility.yul\":2981:2987   */\n      dup3\n        /* \"#utility.yul\":2970:2979   */\n      dup7\n        /* \"#utility.yul\":2966:2988   */\n      add\n        /* \"#utility.yul\":2945:2998   */\n      tag_179\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":2935:2998   */\n      swap2\n      pop\n        /* \"#utility.yul\":2890:3008   */\n      pop\n        /* \"#utility.yul\":2541:3015   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3021:3111   */\n    tag_180:\n        /* \"#utility.yul\":3055:3062   */\n      0x00\n        /* \"#utility.yul\":3098:3103   */\n      dup2\n        /* \"#utility.yul\":3091:3104   */\n      iszero\n        /* \"#utility.yul\":3084:3105   */\n      iszero\n        /* \"#utility.yul\":3073:3105   */\n      swap1\n      pop\n        /* \"#utility.yul\":3021:3111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3117:3226   */\n    tag_181:\n        /* \"#utility.yul\":3198:3219   */\n      tag_227\n        /* \"#utility.yul\":3213:3218   */\n      dup2\n        /* \"#utility.yul\":3198:3219   */\n      tag_180\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":3193:3196   */\n      dup3\n        /* \"#utility.yul\":3186:3220   */\n      mstore\n        /* \"#utility.yul\":3117:3226   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3232:3442   */\n    tag_27:\n        /* \"#utility.yul\":3319:3323   */\n      0x00\n        /* \"#utility.yul\":3357:3359   */\n      0x20\n        /* \"#utility.yul\":3346:3355   */\n      dup3\n        /* \"#utility.yul\":3342:3360   */\n      add\n        /* \"#utility.yul\":3334:3360   */\n      swap1\n      pop\n        /* \"#utility.yul\":3370:3435   */\n      tag_229\n        /* \"#utility.yul\":3432:3433   */\n      0x00\n        /* \"#utility.yul\":3421:3430   */\n      dup4\n        /* \"#utility.yul\":3417:3434   */\n      add\n        /* \"#utility.yul\":3408:3414   */\n      dup5\n        /* \"#utility.yul\":3370:3435   */\n      tag_181\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":3232:3442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3448:3566   */\n    tag_182:\n        /* \"#utility.yul\":3535:3559   */\n      tag_231\n        /* \"#utility.yul\":3553:3558   */\n      dup2\n        /* \"#utility.yul\":3535:3559   */\n      tag_177\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":3530:3533   */\n      dup3\n        /* \"#utility.yul\":3523:3560   */\n      mstore\n        /* \"#utility.yul\":3448:3566   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3572:3794   */\n    tag_31:\n        /* \"#utility.yul\":3665:3669   */\n      0x00\n        /* \"#utility.yul\":3703:3705   */\n      0x20\n        /* \"#utility.yul\":3692:3701   */\n      dup3\n        /* \"#utility.yul\":3688:3706   */\n      add\n        /* \"#utility.yul\":3680:3706   */\n      swap1\n      pop\n        /* \"#utility.yul\":3716:3787   */\n      tag_233\n        /* \"#utility.yul\":3784:3785   */\n      0x00\n        /* \"#utility.yul\":3773:3782   */\n      dup4\n        /* \"#utility.yul\":3769:3786   */\n      add\n        /* \"#utility.yul\":3760:3766   */\n      dup5\n        /* \"#utility.yul\":3716:3787   */\n      tag_182\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":3572:3794   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3800:4419   */\n    tag_34:\n        /* \"#utility.yul\":3877:3883   */\n      0x00\n        /* \"#utility.yul\":3885:3891   */\n      dup1\n        /* \"#utility.yul\":3893:3899   */\n      0x00\n        /* \"#utility.yul\":3942:3944   */\n      0x60\n        /* \"#utility.yul\":3930:3939   */\n      dup5\n        /* \"#utility.yul\":3921:3928   */\n      dup7\n        /* \"#utility.yul\":3917:3940   */\n      sub\n        /* \"#utility.yul\":3913:3945   */\n      slt\n        /* \"#utility.yul\":3910:4029   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":3948:4027   */\n      tag_236\n      tag_171\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":3910:4029   */\n    tag_235:\n        /* \"#utility.yul\":4068:4069   */\n      0x00\n        /* \"#utility.yul\":4093:4146   */\n      tag_237\n        /* \"#utility.yul\":4138:4145   */\n      dup7\n        /* \"#utility.yul\":4129:4135   */\n      dup3\n        /* \"#utility.yul\":4118:4127   */\n      dup8\n        /* \"#utility.yul\":4114:4136   */\n      add\n        /* \"#utility.yul\":4093:4146   */\n      tag_176\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":4083:4146   */\n      swap4\n      pop\n        /* \"#utility.yul\":4039:4156   */\n      pop\n        /* \"#utility.yul\":4195:4197   */\n      0x20\n        /* \"#utility.yul\":4221:4274   */\n      tag_238\n        /* \"#utility.yul\":4266:4273   */\n      dup7\n        /* \"#utility.yul\":4257:4263   */\n      dup3\n        /* \"#utility.yul\":4246:4255   */\n      dup8\n        /* \"#utility.yul\":4242:4264   */\n      add\n        /* \"#utility.yul\":4221:4274   */\n      tag_176\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":4211:4274   */\n      swap3\n      pop\n        /* \"#utility.yul\":4166:4284   */\n      pop\n        /* \"#utility.yul\":4323:4325   */\n      0x40\n        /* \"#utility.yul\":4349:4402   */\n      tag_239\n        /* \"#utility.yul\":4394:4401   */\n      dup7\n        /* \"#utility.yul\":4385:4391   */\n      dup3\n        /* \"#utility.yul\":4374:4383   */\n      dup8\n        /* \"#utility.yul\":4370:4392   */\n      add\n        /* \"#utility.yul\":4349:4402   */\n      tag_179\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":4339:4402   */\n      swap2\n      pop\n        /* \"#utility.yul\":4294:4412   */\n      pop\n        /* \"#utility.yul\":3800:4419   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4425:4511   */\n    tag_183:\n        /* \"#utility.yul\":4460:4467   */\n      0x00\n        /* \"#utility.yul\":4500:4504   */\n      0xff\n        /* \"#utility.yul\":4493:4498   */\n      dup3\n        /* \"#utility.yul\":4489:4505   */\n      and\n        /* \"#utility.yul\":4478:4505   */\n      swap1\n      pop\n        /* \"#utility.yul\":4425:4511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4517:4629   */\n    tag_184:\n        /* \"#utility.yul\":4600:4622   */\n      tag_242\n        /* \"#utility.yul\":4616:4621   */\n      dup2\n        /* \"#utility.yul\":4600:4622   */\n      tag_183\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":4595:4598   */\n      dup3\n        /* \"#utility.yul\":4588:4623   */\n      mstore\n        /* \"#utility.yul\":4517:4629   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4635:4849   */\n    tag_40:\n        /* \"#utility.yul\":4724:4728   */\n      0x00\n        /* \"#utility.yul\":4762:4764   */\n      0x20\n        /* \"#utility.yul\":4751:4760   */\n      dup3\n        /* \"#utility.yul\":4747:4765   */\n      add\n        /* \"#utility.yul\":4739:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4775:4842   */\n      tag_244\n        /* \"#utility.yul\":4839:4840   */\n      0x00\n        /* \"#utility.yul\":4828:4837   */\n      dup4\n        /* \"#utility.yul\":4824:4841   */\n      add\n        /* \"#utility.yul\":4815:4821   */\n      dup5\n        /* \"#utility.yul\":4775:4842   */\n      tag_184\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":4635:4849   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4855:5184   */\n    tag_46:\n        /* \"#utility.yul\":4914:4920   */\n      0x00\n        /* \"#utility.yul\":4963:4965   */\n      0x20\n        /* \"#utility.yul\":4951:4960   */\n      dup3\n        /* \"#utility.yul\":4942:4949   */\n      dup5\n        /* \"#utility.yul\":4938:4961   */\n      sub\n        /* \"#utility.yul\":4934:4966   */\n      slt\n        /* \"#utility.yul\":4931:5050   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":4969:5048   */\n      tag_247\n      tag_171\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":4931:5050   */\n    tag_246:\n        /* \"#utility.yul\":5089:5090   */\n      0x00\n        /* \"#utility.yul\":5114:5167   */\n      tag_248\n        /* \"#utility.yul\":5159:5166   */\n      dup5\n        /* \"#utility.yul\":5150:5156   */\n      dup3\n        /* \"#utility.yul\":5139:5148   */\n      dup6\n        /* \"#utility.yul\":5135:5157   */\n      add\n        /* \"#utility.yul\":5114:5167   */\n      tag_176\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":5104:5167   */\n      swap2\n      pop\n        /* \"#utility.yul\":5060:5177   */\n      pop\n        /* \"#utility.yul\":4855:5184   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5190:5308   */\n    tag_185:\n        /* \"#utility.yul\":5277:5301   */\n      tag_250\n        /* \"#utility.yul\":5295:5300   */\n      dup2\n        /* \"#utility.yul\":5277:5301   */\n      tag_174\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":5272:5275   */\n      dup3\n        /* \"#utility.yul\":5265:5302   */\n      mstore\n        /* \"#utility.yul\":5190:5308   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5314:5536   */\n    tag_54:\n        /* \"#utility.yul\":5407:5411   */\n      0x00\n        /* \"#utility.yul\":5445:5447   */\n      0x20\n        /* \"#utility.yul\":5434:5443   */\n      dup3\n        /* \"#utility.yul\":5430:5448   */\n      add\n        /* \"#utility.yul\":5422:5448   */\n      swap1\n      pop\n        /* \"#utility.yul\":5458:5529   */\n      tag_252\n        /* \"#utility.yul\":5526:5527   */\n      0x00\n        /* \"#utility.yul\":5515:5524   */\n      dup4\n        /* \"#utility.yul\":5511:5528   */\n      add\n        /* \"#utility.yul\":5502:5508   */\n      dup5\n        /* \"#utility.yul\":5458:5529   */\n      tag_185\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":5314:5536   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5542:6016   */\n    tag_64:\n        /* \"#utility.yul\":5610:5616   */\n      0x00\n        /* \"#utility.yul\":5618:5624   */\n      dup1\n        /* \"#utility.yul\":5667:5669   */\n      0x40\n        /* \"#utility.yul\":5655:5664   */\n      dup4\n        /* \"#utility.yul\":5646:5653   */\n      dup6\n        /* \"#utility.yul\":5642:5665   */\n      sub\n        /* \"#utility.yul\":5638:5670   */\n      slt\n        /* \"#utility.yul\":5635:5754   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":5673:5752   */\n      tag_255\n      tag_171\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":5635:5754   */\n    tag_254:\n        /* \"#utility.yul\":5793:5794   */\n      0x00\n        /* \"#utility.yul\":5818:5871   */\n      tag_256\n        /* \"#utility.yul\":5863:5870   */\n      dup6\n        /* \"#utility.yul\":5854:5860   */\n      dup3\n        /* \"#utility.yul\":5843:5852   */\n      dup7\n        /* \"#utility.yul\":5839:5861   */\n      add\n        /* \"#utility.yul\":5818:5871   */\n      tag_176\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":5808:5871   */\n      swap3\n      pop\n        /* \"#utility.yul\":5764:5881   */\n      pop\n        /* \"#utility.yul\":5920:5922   */\n      0x20\n        /* \"#utility.yul\":5946:5999   */\n      tag_257\n        /* \"#utility.yul\":5991:5998   */\n      dup6\n        /* \"#utility.yul\":5982:5988   */\n      dup3\n        /* \"#utility.yul\":5971:5980   */\n      dup7\n        /* \"#utility.yul\":5967:5989   */\n      add\n        /* \"#utility.yul\":5946:5999   */\n      tag_176\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":5936:5999   */\n      swap2\n      pop\n        /* \"#utility.yul\":5891:6009   */\n      pop\n        /* \"#utility.yul\":5542:6016   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6022:6202   */\n    tag_186:\n        /* \"#utility.yul\":6070:6147   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6067:6068   */\n      0x00\n        /* \"#utility.yul\":6060:6148   */\n      mstore\n        /* \"#utility.yul\":6167:6171   */\n      0x22\n        /* \"#utility.yul\":6164:6165   */\n      0x04\n        /* \"#utility.yul\":6157:6172   */\n      mstore\n        /* \"#utility.yul\":6191:6195   */\n      0x24\n        /* \"#utility.yul\":6188:6189   */\n      0x00\n        /* \"#utility.yul\":6181:6196   */\n      revert\n        /* \"#utility.yul\":6208:6528   */\n    tag_72:\n        /* \"#utility.yul\":6252:6258   */\n      0x00\n        /* \"#utility.yul\":6289:6290   */\n      0x02\n        /* \"#utility.yul\":6283:6287   */\n      dup3\n        /* \"#utility.yul\":6279:6291   */\n      div\n        /* \"#utility.yul\":6269:6291   */\n      swap1\n      pop\n        /* \"#utility.yul\":6336:6337   */\n      0x01\n        /* \"#utility.yul\":6330:6334   */\n      dup3\n        /* \"#utility.yul\":6326:6338   */\n      and\n        /* \"#utility.yul\":6357:6375   */\n      dup1\n        /* \"#utility.yul\":6347:6428   */\n      tag_260\n      jumpi\n        /* \"#utility.yul\":6413:6417   */\n      0x7f\n        /* \"#utility.yul\":6405:6411   */\n      dup3\n        /* \"#utility.yul\":6401:6418   */\n      and\n        /* \"#utility.yul\":6391:6418   */\n      swap2\n      pop\n        /* \"#utility.yul\":6347:6428   */\n    tag_260:\n        /* \"#utility.yul\":6475:6477   */\n      0x20\n        /* \"#utility.yul\":6467:6473   */\n      dup3\n        /* \"#utility.yul\":6464:6478   */\n      lt\n        /* \"#utility.yul\":6444:6462   */\n      dup2\n        /* \"#utility.yul\":6441:6479   */\n      sub\n        /* \"#utility.yul\":6438:6522   */\n      tag_261\n      jumpi\n        /* \"#utility.yul\":6494:6512   */\n      tag_262\n      tag_186\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":6438:6522   */\n    tag_261:\n        /* \"#utility.yul\":6259:6528   */\n      pop\n        /* \"#utility.yul\":6208:6528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6534:6976   */\n    tag_128:\n        /* \"#utility.yul\":6683:6687   */\n      0x00\n        /* \"#utility.yul\":6721:6723   */\n      0x60\n        /* \"#utility.yul\":6710:6719   */\n      dup3\n        /* \"#utility.yul\":6706:6724   */\n      add\n        /* \"#utility.yul\":6698:6724   */\n      swap1\n      pop\n        /* \"#utility.yul\":6734:6805   */\n      tag_264\n        /* \"#utility.yul\":6802:6803   */\n      0x00\n        /* \"#utility.yul\":6791:6800   */\n      dup4\n        /* \"#utility.yul\":6787:6804   */\n      add\n        /* \"#utility.yul\":6778:6784   */\n      dup7\n        /* \"#utility.yul\":6734:6805   */\n      tag_185\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":6815:6887   */\n      tag_265\n        /* \"#utility.yul\":6883:6885   */\n      0x20\n        /* \"#utility.yul\":6872:6881   */\n      dup4\n        /* \"#utility.yul\":6868:6886   */\n      add\n        /* \"#utility.yul\":6859:6865   */\n      dup6\n        /* \"#utility.yul\":6815:6887   */\n      tag_182\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":6897:6969   */\n      tag_266\n        /* \"#utility.yul\":6965:6967   */\n      0x40\n        /* \"#utility.yul\":6954:6963   */\n      dup4\n        /* \"#utility.yul\":6950:6968   */\n      add\n        /* \"#utility.yul\":6941:6947   */\n      dup5\n        /* \"#utility.yul\":6897:6969   */\n      tag_182\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":6534:6976   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6982:7162   */\n    tag_187:\n        /* \"#utility.yul\":7030:7107   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7027:7028   */\n      0x00\n        /* \"#utility.yul\":7020:7108   */\n      mstore\n        /* \"#utility.yul\":7127:7131   */\n      0x11\n        /* \"#utility.yul\":7124:7125   */\n      0x04\n        /* \"#utility.yul\":7117:7132   */\n      mstore\n        /* \"#utility.yul\":7151:7155   */\n      0x24\n        /* \"#utility.yul\":7148:7149   */\n      0x00\n        /* \"#utility.yul\":7141:7156   */\n      revert\n        /* \"#utility.yul\":7168:7359   */\n    tag_158:\n        /* \"#utility.yul\":7208:7211   */\n      0x00\n        /* \"#utility.yul\":7227:7247   */\n      tag_269\n        /* \"#utility.yul\":7245:7246   */\n      dup3\n        /* \"#utility.yul\":7227:7247   */\n      tag_177\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":7222:7247   */\n      swap2\n      pop\n        /* \"#utility.yul\":7261:7281   */\n      tag_270\n        /* \"#utility.yul\":7279:7280   */\n      dup4\n        /* \"#utility.yul\":7261:7281   */\n      tag_177\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":7256:7281   */\n      swap3\n      pop\n        /* \"#utility.yul\":7304:7305   */\n      dup3\n        /* \"#utility.yul\":7301:7302   */\n      dup3\n        /* \"#utility.yul\":7297:7306   */\n      add\n        /* \"#utility.yul\":7290:7306   */\n      swap1\n      pop\n        /* \"#utility.yul\":7325:7328   */\n      dup1\n        /* \"#utility.yul\":7322:7323   */\n      dup3\n        /* \"#utility.yul\":7319:7329   */\n      gt\n        /* \"#utility.yul\":7316:7352   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":7332:7350   */\n      tag_272\n      tag_187\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":7316:7352   */\n    tag_271:\n        /* \"#utility.yul\":7168:7359   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200ac27d7aa40f7252022fd29df9d607477e5620449fb1f630a2963dbe7ac4c34d64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_966": {
									"entryPoint": null,
									"id": 966,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 440,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 242,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 576,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1480,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 1646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2706,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1125,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2199,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1438,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2592,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1816,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1266,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1239,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1244,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1140,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1135,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1962,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2098,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2135,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11212:7",
										"nodeType": "YulBlock",
										"src": "0:11212:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "934:28:7",
													"nodeType": "YulBlock",
													"src": "934:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "951:1:7",
																		"nodeType": "YulLiteral",
																		"src": "951:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "954:1:7",
																		"nodeType": "YulLiteral",
																		"src": "954:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "944:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "944:6:7"
																},
																"nativeSrc": "944:12:7",
																"nodeType": "YulFunctionCall",
																"src": "944:12:7"
															},
															"nativeSrc": "944:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "944:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "845:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "845:117:7"
											},
											{
												"body": {
													"nativeSrc": "1057:28:7",
													"nodeType": "YulBlock",
													"src": "1057:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1074:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1077:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1077:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1067:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1067:6:7"
																},
																"nativeSrc": "1067:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1067:12:7"
															},
															"nativeSrc": "1067:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1067:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "968:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "968:117:7"
											},
											{
												"body": {
													"nativeSrc": "1139:54:7",
													"nodeType": "YulBlock",
													"src": "1139:54:7",
													"statements": [
														{
															"nativeSrc": "1149:38:7",
															"nodeType": "YulAssignment",
															"src": "1149:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1167:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1167:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1174:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1174:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1163:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:7"
																		},
																		"nativeSrc": "1163:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1183:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1183:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1179:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1179:3:7"
																		},
																		"nativeSrc": "1179:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1179:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1159:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1159:3:7"
																},
																"nativeSrc": "1159:28:7",
																"nodeType": "YulFunctionCall",
																"src": "1159:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1149:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1149:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1091:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1122:5:7",
														"nodeType": "YulTypedName",
														"src": "1122:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1132:6:7",
														"nodeType": "YulTypedName",
														"src": "1132:6:7",
														"type": ""
													}
												],
												"src": "1091:102:7"
											},
											{
												"body": {
													"nativeSrc": "1227:152:7",
													"nodeType": "YulBlock",
													"src": "1227:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1244:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1244:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1247:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1247:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1237:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1237:6:7"
																},
																"nativeSrc": "1237:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1237:88:7"
															},
															"nativeSrc": "1237:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1237:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1344:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1344:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:7"
																},
																"nativeSrc": "1334:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1334:15:7"
															},
															"nativeSrc": "1334:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1334:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1365:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1368:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1368:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1358:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:7"
																},
																"nativeSrc": "1358:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1358:15:7"
															},
															"nativeSrc": "1358:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1358:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1199:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1199:180:7"
											},
											{
												"body": {
													"nativeSrc": "1428:238:7",
													"nodeType": "YulBlock",
													"src": "1428:238:7",
													"statements": [
														{
															"nativeSrc": "1438:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1438:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1460:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1460:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1490:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1490:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1468:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "1468:21:7"
																		},
																		"nativeSrc": "1468:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1468:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1456:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1456:3:7"
																},
																"nativeSrc": "1456:40:7",
																"nodeType": "YulFunctionCall",
																"src": "1456:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1442:10:7",
																	"nodeType": "YulTypedName",
																	"src": "1442:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1607:22:7",
																"nodeType": "YulBlock",
																"src": "1607:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1609:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1609:16:7"
																			},
																			"nativeSrc": "1609:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1609:18:7"
																		},
																		"nativeSrc": "1609:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1609:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1550:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1550:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1562:18:7",
																				"nodeType": "YulLiteral",
																				"src": "1562:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1547:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1547:2:7"
																		},
																		"nativeSrc": "1547:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1547:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1586:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1586:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1598:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1598:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1583:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1583:2:7"
																		},
																		"nativeSrc": "1583:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1583:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1544:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1544:2:7"
																},
																"nativeSrc": "1544:62:7",
																"nodeType": "YulFunctionCall",
																"src": "1544:62:7"
															},
															"nativeSrc": "1541:88:7",
															"nodeType": "YulIf",
															"src": "1541:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1645:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1645:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1649:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1649:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1638:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1638:6:7"
																},
																"nativeSrc": "1638:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1638:22:7"
															},
															"nativeSrc": "1638:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "1638:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1385:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1414:6:7",
														"nodeType": "YulTypedName",
														"src": "1414:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1422:4:7",
														"nodeType": "YulTypedName",
														"src": "1422:4:7",
														"type": ""
													}
												],
												"src": "1385:281:7"
											},
											{
												"body": {
													"nativeSrc": "1713:88:7",
													"nodeType": "YulBlock",
													"src": "1713:88:7",
													"statements": [
														{
															"nativeSrc": "1723:30:7",
															"nodeType": "YulAssignment",
															"src": "1723:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1733:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1733:18:7"
																},
																"nativeSrc": "1733:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1733:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1723:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1782:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1782:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1790:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1790:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1762:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "1762:19:7"
																},
																"nativeSrc": "1762:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1762:33:7"
															},
															"nativeSrc": "1762:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1762:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1672:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1697:4:7",
														"nodeType": "YulTypedName",
														"src": "1697:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1706:6:7",
														"nodeType": "YulTypedName",
														"src": "1706:6:7",
														"type": ""
													}
												],
												"src": "1672:129:7"
											},
											{
												"body": {
													"nativeSrc": "1874:241:7",
													"nodeType": "YulBlock",
													"src": "1874:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1979:22:7",
																"nodeType": "YulBlock",
																"src": "1979:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1981:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1981:16:7"
																			},
																			"nativeSrc": "1981:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1981:18:7"
																		},
																		"nativeSrc": "1981:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1981:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1951:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1951:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1959:18:7",
																		"nodeType": "YulLiteral",
																		"src": "1959:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1948:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1948:2:7"
																},
																"nativeSrc": "1948:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1948:30:7"
															},
															"nativeSrc": "1945:56:7",
															"nodeType": "YulIf",
															"src": "1945:56:7"
														},
														{
															"nativeSrc": "2011:37:7",
															"nodeType": "YulAssignment",
															"src": "2011:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2041:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2041:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2019:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "2019:21:7"
																},
																"nativeSrc": "2019:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2019:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2011:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2011:4:7"
																}
															]
														},
														{
															"nativeSrc": "2085:23:7",
															"nodeType": "YulAssignment",
															"src": "2085:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2097:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2097:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2093:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2093:3:7"
																},
																"nativeSrc": "2093:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2093:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2085:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2085:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1807:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1858:6:7",
														"nodeType": "YulTypedName",
														"src": "1858:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1869:4:7",
														"nodeType": "YulTypedName",
														"src": "1869:4:7",
														"type": ""
													}
												],
												"src": "1807:308:7"
											},
											{
												"body": {
													"nativeSrc": "2183:186:7",
													"nodeType": "YulBlock",
													"src": "2183:186:7",
													"statements": [
														{
															"nativeSrc": "2194:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2194:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2203:1:7",
																"nodeType": "YulLiteral",
																"src": "2203:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2198:1:7",
																	"nodeType": "YulTypedName",
																	"src": "2198:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2263:63:7",
																"nodeType": "YulBlock",
																"src": "2263:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "2288:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2288:3:7"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "2293:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "2293:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2284:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2284:3:7"
																					},
																					"nativeSrc": "2284:11:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2284:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "2307:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2307:3:7"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "2312:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "2312:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2303:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2303:3:7"
																							},
																							"nativeSrc": "2303:11:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2303:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2297:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2297:5:7"
																					},
																					"nativeSrc": "2297:18:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2297:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2277:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2277:6:7"
																			},
																			"nativeSrc": "2277:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2277:39:7"
																		},
																		"nativeSrc": "2277:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2277:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2224:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2224:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2227:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2227:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2221:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2221:2:7"
																},
																"nativeSrc": "2221:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2221:13:7"
															},
															"nativeSrc": "2213:113:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2235:19:7",
																"nodeType": "YulBlock",
																"src": "2235:19:7",
																"statements": [
																	{
																		"nativeSrc": "2237:15:7",
																		"nodeType": "YulAssignment",
																		"src": "2237:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2246:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "2246:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2249:2:7",
																					"nodeType": "YulLiteral",
																					"src": "2249:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2242:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2242:3:7"
																			},
																			"nativeSrc": "2242:10:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2242:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2237:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "2237:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2217:3:7",
																"nodeType": "YulBlock",
																"src": "2217:3:7",
																"statements": []
															},
															"src": "2213:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2346:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2346:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2351:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2351:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2342:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2342:3:7"
																		},
																		"nativeSrc": "2342:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2342:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2360:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2360:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2335:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2335:6:7"
																},
																"nativeSrc": "2335:27:7",
																"nodeType": "YulFunctionCall",
																"src": "2335:27:7"
															},
															"nativeSrc": "2335:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "2335:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2121:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2165:3:7",
														"nodeType": "YulTypedName",
														"src": "2165:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2170:3:7",
														"nodeType": "YulTypedName",
														"src": "2170:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2175:6:7",
														"nodeType": "YulTypedName",
														"src": "2175:6:7",
														"type": ""
													}
												],
												"src": "2121:248:7"
											},
											{
												"body": {
													"nativeSrc": "2470:339:7",
													"nodeType": "YulBlock",
													"src": "2470:339:7",
													"statements": [
														{
															"nativeSrc": "2480:75:7",
															"nodeType": "YulAssignment",
															"src": "2480:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2547:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2547:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "2505:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "2505:41:7"
																		},
																		"nativeSrc": "2505:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2505:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2489:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "2489:15:7"
																},
																"nativeSrc": "2489:66:7",
																"nodeType": "YulFunctionCall",
																"src": "2489:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2480:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2480:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2571:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2571:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2578:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2578:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2564:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2564:6:7"
																},
																"nativeSrc": "2564:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2564:21:7"
															},
															"nativeSrc": "2564:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2564:21:7"
														},
														{
															"nativeSrc": "2594:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2594:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2609:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2609:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2616:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2616:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2605:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2605:3:7"
																},
																"nativeSrc": "2605:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2605:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2598:3:7",
																	"nodeType": "YulTypedName",
																	"src": "2598:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2659:83:7",
																"nodeType": "YulBlock",
																"src": "2659:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2661:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2661:77:7"
																			},
																			"nativeSrc": "2661:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2661:79:7"
																		},
																		"nativeSrc": "2661:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2661:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2640:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2640:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2645:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2645:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2636:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2636:3:7"
																		},
																		"nativeSrc": "2636:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2636:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2654:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2654:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2633:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2633:2:7"
																},
																"nativeSrc": "2633:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2633:25:7"
															},
															"nativeSrc": "2630:112:7",
															"nodeType": "YulIf",
															"src": "2630:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2786:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2786:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2791:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2791:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2796:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2796:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2751:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "2751:34:7"
																},
																"nativeSrc": "2751:52:7",
																"nodeType": "YulFunctionCall",
																"src": "2751:52:7"
															},
															"nativeSrc": "2751:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "2751:52:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2375:434:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2443:3:7",
														"nodeType": "YulTypedName",
														"src": "2443:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2448:6:7",
														"nodeType": "YulTypedName",
														"src": "2448:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2456:3:7",
														"nodeType": "YulTypedName",
														"src": "2456:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2464:5:7",
														"nodeType": "YulTypedName",
														"src": "2464:5:7",
														"type": ""
													}
												],
												"src": "2375:434:7"
											},
											{
												"body": {
													"nativeSrc": "2902:282:7",
													"nodeType": "YulBlock",
													"src": "2902:282:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2951:83:7",
																"nodeType": "YulBlock",
																"src": "2951:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2953:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2953:77:7"
																			},
																			"nativeSrc": "2953:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2953:79:7"
																		},
																		"nativeSrc": "2953:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2953:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2930:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2930:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2938:4:7",
																						"nodeType": "YulLiteral",
																						"src": "2938:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2926:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2926:3:7"
																				},
																				"nativeSrc": "2926:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2926:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2945:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2945:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2922:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2922:3:7"
																		},
																		"nativeSrc": "2922:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2922:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2915:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2915:6:7"
																},
																"nativeSrc": "2915:35:7",
																"nodeType": "YulFunctionCall",
																"src": "2915:35:7"
															},
															"nativeSrc": "2912:122:7",
															"nodeType": "YulIf",
															"src": "2912:122:7"
														},
														{
															"nativeSrc": "3043:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3043:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3063:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3063:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3057:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3057:5:7"
																},
																"nativeSrc": "3057:13:7",
																"nodeType": "YulFunctionCall",
																"src": "3057:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3047:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3047:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3079:99:7",
															"nodeType": "YulAssignment",
															"src": "3079:99:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3151:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3151:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3159:4:7",
																				"nodeType": "YulLiteral",
																				"src": "3159:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3147:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3147:3:7"
																		},
																		"nativeSrc": "3147:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3147:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3166:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3166:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3174:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3174:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "3088:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "3088:58:7"
																},
																"nativeSrc": "3088:90:7",
																"nodeType": "YulFunctionCall",
																"src": "3088:90:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3079:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3079:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2829:355:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2880:6:7",
														"nodeType": "YulTypedName",
														"src": "2880:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2888:3:7",
														"nodeType": "YulTypedName",
														"src": "2888:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2896:5:7",
														"nodeType": "YulTypedName",
														"src": "2896:5:7",
														"type": ""
													}
												],
												"src": "2829:355:7"
											},
											{
												"body": {
													"nativeSrc": "3235:32:7",
													"nodeType": "YulBlock",
													"src": "3235:32:7",
													"statements": [
														{
															"nativeSrc": "3245:16:7",
															"nodeType": "YulAssignment",
															"src": "3245:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "3256:5:7",
																"nodeType": "YulIdentifier",
																"src": "3256:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3245:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3245:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3190:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3217:5:7",
														"nodeType": "YulTypedName",
														"src": "3217:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3227:7:7",
														"nodeType": "YulTypedName",
														"src": "3227:7:7",
														"type": ""
													}
												],
												"src": "3190:77:7"
											},
											{
												"body": {
													"nativeSrc": "3316:79:7",
													"nodeType": "YulBlock",
													"src": "3316:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3373:16:7",
																"nodeType": "YulBlock",
																"src": "3373:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3382:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3382:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3385:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3385:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3375:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3375:6:7"
																			},
																			"nativeSrc": "3375:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3375:12:7"
																		},
																		"nativeSrc": "3375:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3375:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3339:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3339:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3364:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3364:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3346:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3346:17:7"
																				},
																				"nativeSrc": "3346:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3346:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3336:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3336:2:7"
																		},
																		"nativeSrc": "3336:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3336:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3329:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3329:6:7"
																},
																"nativeSrc": "3329:43:7",
																"nodeType": "YulFunctionCall",
																"src": "3329:43:7"
															},
															"nativeSrc": "3326:63:7",
															"nodeType": "YulIf",
															"src": "3326:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3273:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3309:5:7",
														"nodeType": "YulTypedName",
														"src": "3309:5:7",
														"type": ""
													}
												],
												"src": "3273:122:7"
											},
											{
												"body": {
													"nativeSrc": "3464:80:7",
													"nodeType": "YulBlock",
													"src": "3464:80:7",
													"statements": [
														{
															"nativeSrc": "3474:22:7",
															"nodeType": "YulAssignment",
															"src": "3474:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3489:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3489:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3483:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3483:5:7"
																},
																"nativeSrc": "3483:13:7",
																"nodeType": "YulFunctionCall",
																"src": "3483:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3474:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3474:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3532:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3532:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3505:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3505:26:7"
																},
																"nativeSrc": "3505:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3505:33:7"
															},
															"nativeSrc": "3505:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3505:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3401:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3442:6:7",
														"nodeType": "YulTypedName",
														"src": "3442:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3450:3:7",
														"nodeType": "YulTypedName",
														"src": "3450:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3458:5:7",
														"nodeType": "YulTypedName",
														"src": "3458:5:7",
														"type": ""
													}
												],
												"src": "3401:143:7"
											},
											{
												"body": {
													"nativeSrc": "3698:1018:7",
													"nodeType": "YulBlock",
													"src": "3698:1018:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3745:83:7",
																"nodeType": "YulBlock",
																"src": "3745:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3747:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3747:77:7"
																			},
																			"nativeSrc": "3747:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3747:79:7"
																		},
																		"nativeSrc": "3747:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3747:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3719:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3719:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3728:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3728:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3715:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3715:3:7"
																		},
																		"nativeSrc": "3715:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3715:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3740:3:7",
																		"nodeType": "YulLiteral",
																		"src": "3740:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3711:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3711:3:7"
																},
																"nativeSrc": "3711:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3711:33:7"
															},
															"nativeSrc": "3708:120:7",
															"nodeType": "YulIf",
															"src": "3708:120:7"
														},
														{
															"nativeSrc": "3838:128:7",
															"nodeType": "YulBlock",
															"src": "3838:128:7",
															"statements": [
																{
																	"nativeSrc": "3853:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3867:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3867:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3882:74:7",
																	"nodeType": "YulAssignment",
																	"src": "3882:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3928:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3928:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3939:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3939:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3924:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3924:3:7"
																				},
																				"nativeSrc": "3924:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3924:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3948:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3948:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3892:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "3892:31:7"
																		},
																		"nativeSrc": "3892:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3882:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3882:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3976:292:7",
															"nodeType": "YulBlock",
															"src": "3976:292:7",
															"statements": [
																{
																	"nativeSrc": "3991:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3991:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4015:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4015:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4026:2:7",
																						"nodeType": "YulLiteral",
																						"src": "4026:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4011:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4011:3:7"
																				},
																				"nativeSrc": "4011:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4011:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4005:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4005:5:7"
																		},
																		"nativeSrc": "4005:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4005:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3995:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3995:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4077:83:7",
																		"nodeType": "YulBlock",
																		"src": "4077:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4079:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "4079:77:7"
																					},
																					"nativeSrc": "4079:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4079:79:7"
																				},
																				"nativeSrc": "4079:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4079:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4049:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4049:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4057:18:7",
																				"nodeType": "YulLiteral",
																				"src": "4057:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4046:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4046:2:7"
																		},
																		"nativeSrc": "4046:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4046:30:7"
																	},
																	"nativeSrc": "4043:117:7",
																	"nodeType": "YulIf",
																	"src": "4043:117:7"
																},
																{
																	"nativeSrc": "4174:84:7",
																	"nodeType": "YulAssignment",
																	"src": "4174:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4230:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4230:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4241:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4241:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4226:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4226:3:7"
																				},
																				"nativeSrc": "4226:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4226:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4250:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4250:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4184:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "4184:41:7"
																		},
																		"nativeSrc": "4184:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4184:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4174:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4174:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4278:292:7",
															"nodeType": "YulBlock",
															"src": "4278:292:7",
															"statements": [
																{
																	"nativeSrc": "4293:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4293:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4317:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4317:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4328:2:7",
																						"nodeType": "YulLiteral",
																						"src": "4328:2:7",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4313:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4313:3:7"
																				},
																				"nativeSrc": "4313:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4313:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4307:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4307:5:7"
																		},
																		"nativeSrc": "4307:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4307:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4297:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4297:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4379:83:7",
																		"nodeType": "YulBlock",
																		"src": "4379:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4381:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "4381:77:7"
																					},
																					"nativeSrc": "4381:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4381:79:7"
																				},
																				"nativeSrc": "4381:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4381:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4351:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4351:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4359:18:7",
																				"nodeType": "YulLiteral",
																				"src": "4359:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4348:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4348:2:7"
																		},
																		"nativeSrc": "4348:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4348:30:7"
																	},
																	"nativeSrc": "4345:117:7",
																	"nodeType": "YulIf",
																	"src": "4345:117:7"
																},
																{
																	"nativeSrc": "4476:84:7",
																	"nodeType": "YulAssignment",
																	"src": "4476:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4532:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4532:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4543:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4543:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4528:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4528:3:7"
																				},
																				"nativeSrc": "4528:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4528:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4552:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4552:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4486:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "4486:41:7"
																		},
																		"nativeSrc": "4486:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4486:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4476:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4476:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4580:129:7",
															"nodeType": "YulBlock",
															"src": "4580:129:7",
															"statements": [
																{
																	"nativeSrc": "4595:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4595:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4609:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4609:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4599:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4599:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4625:74:7",
																	"nodeType": "YulAssignment",
																	"src": "4625:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4671:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4671:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4682:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4682:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4667:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4667:3:7"
																				},
																				"nativeSrc": "4667:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4667:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4691:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4691:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4635:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "4635:31:7"
																		},
																		"nativeSrc": "4635:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4635:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4625:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4625:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nativeSrc": "3550:1166:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3644:9:7",
														"nodeType": "YulTypedName",
														"src": "3644:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3655:7:7",
														"nodeType": "YulTypedName",
														"src": "3655:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3667:6:7",
														"nodeType": "YulTypedName",
														"src": "3667:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3675:6:7",
														"nodeType": "YulTypedName",
														"src": "3675:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3683:6:7",
														"nodeType": "YulTypedName",
														"src": "3683:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3691:6:7",
														"nodeType": "YulTypedName",
														"src": "3691:6:7",
														"type": ""
													}
												],
												"src": "3550:1166:7"
											},
											{
												"body": {
													"nativeSrc": "4781:40:7",
													"nodeType": "YulBlock",
													"src": "4781:40:7",
													"statements": [
														{
															"nativeSrc": "4792:22:7",
															"nodeType": "YulAssignment",
															"src": "4792:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4808:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4808:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4802:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4802:5:7"
																},
																"nativeSrc": "4802:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4802:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4792:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4792:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4722:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4764:5:7",
														"nodeType": "YulTypedName",
														"src": "4764:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4774:6:7",
														"nodeType": "YulTypedName",
														"src": "4774:6:7",
														"type": ""
													}
												],
												"src": "4722:99:7"
											},
											{
												"body": {
													"nativeSrc": "4855:152:7",
													"nodeType": "YulBlock",
													"src": "4855:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4872:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4872:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4875:77:7",
																		"nodeType": "YulLiteral",
																		"src": "4875:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4865:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4865:6:7"
																},
																"nativeSrc": "4865:88:7",
																"nodeType": "YulFunctionCall",
																"src": "4865:88:7"
															},
															"nativeSrc": "4865:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "4865:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4969:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4969:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4972:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4972:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4962:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4962:6:7"
																},
																"nativeSrc": "4962:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4962:15:7"
															},
															"nativeSrc": "4962:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4962:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4993:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4993:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4996:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4996:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4986:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4986:6:7"
																},
																"nativeSrc": "4986:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4986:15:7"
															},
															"nativeSrc": "4986:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4986:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4827:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4827:180:7"
											},
											{
												"body": {
													"nativeSrc": "5064:269:7",
													"nodeType": "YulBlock",
													"src": "5064:269:7",
													"statements": [
														{
															"nativeSrc": "5074:22:7",
															"nodeType": "YulAssignment",
															"src": "5074:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5088:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5088:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5094:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5094:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5084:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5084:3:7"
																},
																"nativeSrc": "5084:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5084:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5074:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5074:6:7"
																}
															]
														},
														{
															"nativeSrc": "5105:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5105:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5135:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5135:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5141:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5141:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5131:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5131:3:7"
																},
																"nativeSrc": "5131:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5131:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5109:18:7",
																	"nodeType": "YulTypedName",
																	"src": "5109:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5182:51:7",
																"nodeType": "YulBlock",
																"src": "5182:51:7",
																"statements": [
																	{
																		"nativeSrc": "5196:27:7",
																		"nodeType": "YulAssignment",
																		"src": "5196:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5210:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5210:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5218:4:7",
																					"nodeType": "YulLiteral",
																					"src": "5218:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5206:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5206:3:7"
																			},
																			"nativeSrc": "5206:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5206:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5196:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5196:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5162:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "5162:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5155:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5155:6:7"
																},
																"nativeSrc": "5155:26:7",
																"nodeType": "YulFunctionCall",
																"src": "5155:26:7"
															},
															"nativeSrc": "5152:81:7",
															"nodeType": "YulIf",
															"src": "5152:81:7"
														},
														{
															"body": {
																"nativeSrc": "5285:42:7",
																"nodeType": "YulBlock",
																"src": "5285:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5299:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5299:16:7"
																			},
																			"nativeSrc": "5299:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5299:18:7"
																		},
																		"nativeSrc": "5299:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5299:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5249:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "5249:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5272:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5272:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5280:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5280:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5269:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5269:2:7"
																		},
																		"nativeSrc": "5269:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5269:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5246:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5246:2:7"
																},
																"nativeSrc": "5246:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5246:38:7"
															},
															"nativeSrc": "5243:84:7",
															"nodeType": "YulIf",
															"src": "5243:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5013:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5048:4:7",
														"nodeType": "YulTypedName",
														"src": "5048:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5057:6:7",
														"nodeType": "YulTypedName",
														"src": "5057:6:7",
														"type": ""
													}
												],
												"src": "5013:320:7"
											},
											{
												"body": {
													"nativeSrc": "5393:87:7",
													"nodeType": "YulBlock",
													"src": "5393:87:7",
													"statements": [
														{
															"nativeSrc": "5403:11:7",
															"nodeType": "YulAssignment",
															"src": "5403:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "5411:3:7",
																"nodeType": "YulIdentifier",
																"src": "5411:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5403:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5403:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5431:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5431:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5434:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5434:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5424:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5424:6:7"
																},
																"nativeSrc": "5424:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5424:14:7"
															},
															"nativeSrc": "5424:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "5424:14:7"
														},
														{
															"nativeSrc": "5447:26:7",
															"nodeType": "YulAssignment",
															"src": "5447:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5465:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5465:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5468:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5468:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5455:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5455:9:7"
																},
																"nativeSrc": "5455:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5455:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5447:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5447:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5339:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5380:3:7",
														"nodeType": "YulTypedName",
														"src": "5380:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5388:4:7",
														"nodeType": "YulTypedName",
														"src": "5388:4:7",
														"type": ""
													}
												],
												"src": "5339:141:7"
											},
											{
												"body": {
													"nativeSrc": "5530:49:7",
													"nodeType": "YulBlock",
													"src": "5530:49:7",
													"statements": [
														{
															"nativeSrc": "5540:33:7",
															"nodeType": "YulAssignment",
															"src": "5540:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5558:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5558:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5565:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5565:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5554:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5554:3:7"
																		},
																		"nativeSrc": "5554:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5554:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5570:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5570:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5550:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5550:3:7"
																},
																"nativeSrc": "5550:23:7",
																"nodeType": "YulFunctionCall",
																"src": "5550:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5540:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5540:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5486:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5513:5:7",
														"nodeType": "YulTypedName",
														"src": "5513:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5523:6:7",
														"nodeType": "YulTypedName",
														"src": "5523:6:7",
														"type": ""
													}
												],
												"src": "5486:93:7"
											},
											{
												"body": {
													"nativeSrc": "5638:54:7",
													"nodeType": "YulBlock",
													"src": "5638:54:7",
													"statements": [
														{
															"nativeSrc": "5648:37:7",
															"nodeType": "YulAssignment",
															"src": "5648:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5673:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5673:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5679:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5679:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5669:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5669:3:7"
																},
																"nativeSrc": "5669:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5669:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5648:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5648:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5585:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5613:4:7",
														"nodeType": "YulTypedName",
														"src": "5613:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5619:5:7",
														"nodeType": "YulTypedName",
														"src": "5619:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5629:8:7",
														"nodeType": "YulTypedName",
														"src": "5629:8:7",
														"type": ""
													}
												],
												"src": "5585:107:7"
											},
											{
												"body": {
													"nativeSrc": "5774:317:7",
													"nodeType": "YulBlock",
													"src": "5774:317:7",
													"statements": [
														{
															"nativeSrc": "5784:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5784:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5805:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "5805:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5817:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5817:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5801:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5801:3:7"
																},
																"nativeSrc": "5801:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5801:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5788:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5788:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5828:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5828:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5859:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5859:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5870:66:7",
																		"nodeType": "YulLiteral",
																		"src": "5870:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5840:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5840:18:7"
																},
																"nativeSrc": "5840:97:7",
																"nodeType": "YulFunctionCall",
																"src": "5840:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5832:4:7",
																	"nodeType": "YulTypedName",
																	"src": "5832:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5946:51:7",
															"nodeType": "YulAssignment",
															"src": "5946:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5977:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5977:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5988:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "5988:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5958:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5958:18:7"
																},
																"nativeSrc": "5958:39:7",
																"nodeType": "YulFunctionCall",
																"src": "5958:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5946:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5946:8:7"
																}
															]
														},
														{
															"nativeSrc": "6006:30:7",
															"nodeType": "YulAssignment",
															"src": "6006:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6019:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6019:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "6030:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6030:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6026:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6026:3:7"
																		},
																		"nativeSrc": "6026:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6026:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6015:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6015:3:7"
																},
																"nativeSrc": "6015:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6015:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6006:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6006:5:7"
																}
															]
														},
														{
															"nativeSrc": "6045:40:7",
															"nodeType": "YulAssignment",
															"src": "6045:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6058:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "6069:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "6069:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "6079:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6079:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6065:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6065:3:7"
																		},
																		"nativeSrc": "6065:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6065:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6055:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6055:2:7"
																},
																"nativeSrc": "6055:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6055:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6045:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6045:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5698:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5735:5:7",
														"nodeType": "YulTypedName",
														"src": "5735:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5742:10:7",
														"nodeType": "YulTypedName",
														"src": "5742:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5754:8:7",
														"nodeType": "YulTypedName",
														"src": "5754:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5767:6:7",
														"nodeType": "YulTypedName",
														"src": "5767:6:7",
														"type": ""
													}
												],
												"src": "5698:393:7"
											},
											{
												"body": {
													"nativeSrc": "6129:28:7",
													"nodeType": "YulBlock",
													"src": "6129:28:7",
													"statements": [
														{
															"nativeSrc": "6139:12:7",
															"nodeType": "YulAssignment",
															"src": "6139:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "6146:5:7",
																"nodeType": "YulIdentifier",
																"src": "6146:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6139:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6139:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6097:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6115:5:7",
														"nodeType": "YulTypedName",
														"src": "6115:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6125:3:7",
														"nodeType": "YulTypedName",
														"src": "6125:3:7",
														"type": ""
													}
												],
												"src": "6097:60:7"
											},
											{
												"body": {
													"nativeSrc": "6223:82:7",
													"nodeType": "YulBlock",
													"src": "6223:82:7",
													"statements": [
														{
															"nativeSrc": "6233:66:7",
															"nodeType": "YulAssignment",
															"src": "6233:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6291:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6291:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6273:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "6273:17:7"
																				},
																				"nativeSrc": "6273:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6273:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6264:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "6264:8:7"
																		},
																		"nativeSrc": "6264:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6264:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6246:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6246:17:7"
																},
																"nativeSrc": "6246:53:7",
																"nodeType": "YulFunctionCall",
																"src": "6246:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6233:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "6233:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "6163:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6203:5:7",
														"nodeType": "YulTypedName",
														"src": "6203:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6213:9:7",
														"nodeType": "YulTypedName",
														"src": "6213:9:7",
														"type": ""
													}
												],
												"src": "6163:142:7"
											},
											{
												"body": {
													"nativeSrc": "6358:28:7",
													"nodeType": "YulBlock",
													"src": "6358:28:7",
													"statements": [
														{
															"nativeSrc": "6368:12:7",
															"nodeType": "YulAssignment",
															"src": "6368:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "6375:5:7",
																"nodeType": "YulIdentifier",
																"src": "6375:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6368:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6368:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6311:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6344:5:7",
														"nodeType": "YulTypedName",
														"src": "6344:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6354:3:7",
														"nodeType": "YulTypedName",
														"src": "6354:3:7",
														"type": ""
													}
												],
												"src": "6311:75:7"
											},
											{
												"body": {
													"nativeSrc": "6468:193:7",
													"nodeType": "YulBlock",
													"src": "6468:193:7",
													"statements": [
														{
															"nativeSrc": "6478:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6478:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6533:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "6533:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6502:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6502:30:7"
																},
																"nativeSrc": "6502:39:7",
																"nodeType": "YulFunctionCall",
																"src": "6502:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6482:16:7",
																	"nodeType": "YulTypedName",
																	"src": "6482:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6557:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6557:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6597:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "6597:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6591:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6591:5:7"
																				},
																				"nativeSrc": "6591:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6591:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6604:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6604:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6636:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "6636:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6612:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "6612:23:7"
																				},
																				"nativeSrc": "6612:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6612:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6563:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "6563:27:7"
																		},
																		"nativeSrc": "6563:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6563:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6550:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6550:6:7"
																},
																"nativeSrc": "6550:105:7",
																"nodeType": "YulFunctionCall",
																"src": "6550:105:7"
															},
															"nativeSrc": "6550:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "6550:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6392:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6445:4:7",
														"nodeType": "YulTypedName",
														"src": "6445:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6451:6:7",
														"nodeType": "YulTypedName",
														"src": "6451:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6459:7:7",
														"nodeType": "YulTypedName",
														"src": "6459:7:7",
														"type": ""
													}
												],
												"src": "6392:269:7"
											},
											{
												"body": {
													"nativeSrc": "6716:24:7",
													"nodeType": "YulBlock",
													"src": "6716:24:7",
													"statements": [
														{
															"nativeSrc": "6726:8:7",
															"nodeType": "YulAssignment",
															"src": "6726:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "6733:1:7",
																"nodeType": "YulLiteral",
																"src": "6733:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6726:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6726:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6667:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6712:3:7",
														"nodeType": "YulTypedName",
														"src": "6712:3:7",
														"type": ""
													}
												],
												"src": "6667:73:7"
											},
											{
												"body": {
													"nativeSrc": "6799:136:7",
													"nodeType": "YulBlock",
													"src": "6799:136:7",
													"statements": [
														{
															"nativeSrc": "6809:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6809:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6823:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6823:30:7"
																},
																"nativeSrc": "6823:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6823:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6813:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6813:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6908:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6908:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6914:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6914:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6922:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6922:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6864:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6864:43:7"
																},
																"nativeSrc": "6864:65:7",
																"nodeType": "YulFunctionCall",
																"src": "6864:65:7"
															},
															"nativeSrc": "6864:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "6864:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6746:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6785:4:7",
														"nodeType": "YulTypedName",
														"src": "6785:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6791:6:7",
														"nodeType": "YulTypedName",
														"src": "6791:6:7",
														"type": ""
													}
												],
												"src": "6746:189:7"
											},
											{
												"body": {
													"nativeSrc": "6991:136:7",
													"nodeType": "YulBlock",
													"src": "6991:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7058:63:7",
																"nodeType": "YulBlock",
																"src": "7058:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7102:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "7102:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7109:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7109:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "7072:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "7072:29:7"
																			},
																			"nativeSrc": "7072:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7072:39:7"
																		},
																		"nativeSrc": "7072:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7072:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "7011:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7011:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7018:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7018:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7008:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7008:2:7"
																},
																"nativeSrc": "7008:14:7",
																"nodeType": "YulFunctionCall",
																"src": "7008:14:7"
															},
															"nativeSrc": "7001:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7023:26:7",
																"nodeType": "YulBlock",
																"src": "7023:26:7",
																"statements": [
																	{
																		"nativeSrc": "7025:22:7",
																		"nodeType": "YulAssignment",
																		"src": "7025:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "7038:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "7038:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7045:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7045:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7034:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7034:3:7"
																			},
																			"nativeSrc": "7034:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7034:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "7025:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7025:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7005:2:7",
																"nodeType": "YulBlock",
																"src": "7005:2:7",
																"statements": []
															},
															"src": "7001:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6941:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6979:5:7",
														"nodeType": "YulTypedName",
														"src": "6979:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6986:3:7",
														"nodeType": "YulTypedName",
														"src": "6986:3:7",
														"type": ""
													}
												],
												"src": "6941:186:7"
											},
											{
												"body": {
													"nativeSrc": "7212:464:7",
													"nodeType": "YulBlock",
													"src": "7212:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7238:431:7",
																"nodeType": "YulBlock",
																"src": "7238:431:7",
																"statements": [
																	{
																		"nativeSrc": "7252:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7252:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7300:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "7300:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7268:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "7268:31:7"
																			},
																			"nativeSrc": "7268:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7268:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7256:8:7",
																				"nodeType": "YulTypedName",
																				"src": "7256:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7319:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7319:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7342:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "7342:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7370:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "7370:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7352:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "7352:17:7"
																					},
																					"nativeSrc": "7352:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7352:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7338:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7338:3:7"
																			},
																			"nativeSrc": "7338:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7338:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7323:11:7",
																				"nodeType": "YulTypedName",
																				"src": "7323:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7539:27:7",
																			"nodeType": "YulBlock",
																			"src": "7539:27:7",
																			"statements": [
																				{
																					"nativeSrc": "7541:23:7",
																					"nodeType": "YulAssignment",
																					"src": "7541:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7556:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "7556:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7541:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "7541:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7523:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "7523:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7535:2:7",
																					"nodeType": "YulLiteral",
																					"src": "7535:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7520:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7520:2:7"
																			},
																			"nativeSrc": "7520:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7520:18:7"
																		},
																		"nativeSrc": "7517:49:7",
																		"nodeType": "YulIf",
																		"src": "7517:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7608:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "7608:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7625:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "7625:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7653:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "7653:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7635:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "7635:17:7"
																							},
																							"nativeSrc": "7635:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "7635:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7621:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7621:3:7"
																					},
																					"nativeSrc": "7621:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7621:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7579:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "7579:28:7"
																			},
																			"nativeSrc": "7579:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7579:80:7"
																		},
																		"nativeSrc": "7579:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7579:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7229:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7229:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7234:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7234:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7226:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7226:2:7"
																},
																"nativeSrc": "7226:11:7",
																"nodeType": "YulFunctionCall",
																"src": "7226:11:7"
															},
															"nativeSrc": "7223:446:7",
															"nodeType": "YulIf",
															"src": "7223:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "7133:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "7188:5:7",
														"nodeType": "YulTypedName",
														"src": "7188:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7195:3:7",
														"nodeType": "YulTypedName",
														"src": "7195:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "7200:10:7",
														"nodeType": "YulTypedName",
														"src": "7200:10:7",
														"type": ""
													}
												],
												"src": "7133:543:7"
											},
											{
												"body": {
													"nativeSrc": "7745:54:7",
													"nodeType": "YulBlock",
													"src": "7745:54:7",
													"statements": [
														{
															"nativeSrc": "7755:37:7",
															"nodeType": "YulAssignment",
															"src": "7755:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7780:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7780:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7786:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7786:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7776:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7776:3:7"
																},
																"nativeSrc": "7776:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7776:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7755:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "7755:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7682:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7720:4:7",
														"nodeType": "YulTypedName",
														"src": "7720:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7726:5:7",
														"nodeType": "YulTypedName",
														"src": "7726:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7736:8:7",
														"nodeType": "YulTypedName",
														"src": "7736:8:7",
														"type": ""
													}
												],
												"src": "7682:117:7"
											},
											{
												"body": {
													"nativeSrc": "7856:118:7",
													"nodeType": "YulBlock",
													"src": "7856:118:7",
													"statements": [
														{
															"nativeSrc": "7866:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7866:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7915:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7915:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7918:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7918:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7911:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7911:3:7"
																				},
																				"nativeSrc": "7911:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7911:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7930:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7930:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7926:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7926:3:7"
																				},
																				"nativeSrc": "7926:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7926:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7882:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "7882:28:7"
																		},
																		"nativeSrc": "7882:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7878:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7878:3:7"
																},
																"nativeSrc": "7878:56:7",
																"nodeType": "YulFunctionCall",
																"src": "7878:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7870:4:7",
																	"nodeType": "YulTypedName",
																	"src": "7870:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7943:25:7",
															"nodeType": "YulAssignment",
															"src": "7943:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7957:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7957:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7963:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7963:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7953:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7953:3:7"
																},
																"nativeSrc": "7953:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7953:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7943:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7943:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7805:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7833:4:7",
														"nodeType": "YulTypedName",
														"src": "7833:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7839:5:7",
														"nodeType": "YulTypedName",
														"src": "7839:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7849:6:7",
														"nodeType": "YulTypedName",
														"src": "7849:6:7",
														"type": ""
													}
												],
												"src": "7805:169:7"
											},
											{
												"body": {
													"nativeSrc": "8060:214:7",
													"nodeType": "YulBlock",
													"src": "8060:214:7",
													"statements": [
														{
															"nativeSrc": "8193:37:7",
															"nodeType": "YulAssignment",
															"src": "8193:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8220:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8220:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8226:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8226:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "8201:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "8201:18:7"
																},
																"nativeSrc": "8201:29:7",
																"nodeType": "YulFunctionCall",
																"src": "8201:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8193:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8193:4:7"
																}
															]
														},
														{
															"nativeSrc": "8239:29:7",
															"nodeType": "YulAssignment",
															"src": "8239:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8250:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8250:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8260:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8260:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8263:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8263:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8256:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8256:3:7"
																		},
																		"nativeSrc": "8256:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8256:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8247:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8247:2:7"
																},
																"nativeSrc": "8247:21:7",
																"nodeType": "YulFunctionCall",
																"src": "8247:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8239:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8239:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7979:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8041:4:7",
														"nodeType": "YulTypedName",
														"src": "8041:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "8047:3:7",
														"nodeType": "YulTypedName",
														"src": "8047:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "8055:4:7",
														"nodeType": "YulTypedName",
														"src": "8055:4:7",
														"type": ""
													}
												],
												"src": "7979:295:7"
											},
											{
												"body": {
													"nativeSrc": "8371:1303:7",
													"nodeType": "YulBlock",
													"src": "8371:1303:7",
													"statements": [
														{
															"nativeSrc": "8382:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8382:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8429:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8429:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8396:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "8396:32:7"
																},
																"nativeSrc": "8396:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8396:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8386:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8386:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8518:22:7",
																"nodeType": "YulBlock",
																"src": "8518:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8520:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8520:16:7"
																			},
																			"nativeSrc": "8520:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8520:18:7"
																		},
																		"nativeSrc": "8520:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8520:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8490:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8490:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8498:18:7",
																		"nodeType": "YulLiteral",
																		"src": "8498:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8487:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8487:2:7"
																},
																"nativeSrc": "8487:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8487:30:7"
															},
															"nativeSrc": "8484:56:7",
															"nodeType": "YulIf",
															"src": "8484:56:7"
														},
														{
															"nativeSrc": "8550:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8550:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8596:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8596:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8590:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8590:5:7"
																		},
																		"nativeSrc": "8590:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8590:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8564:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "8564:25:7"
																},
																"nativeSrc": "8564:38:7",
																"nodeType": "YulFunctionCall",
																"src": "8564:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8554:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8554:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8695:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8695:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8701:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8701:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8709:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8709:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8649:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "8649:45:7"
																},
																"nativeSrc": "8649:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8649:67:7"
															},
															"nativeSrc": "8649:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "8649:67:7"
														},
														{
															"nativeSrc": "8726:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8726:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8743:1:7",
																"nodeType": "YulLiteral",
																"src": "8743:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8730:9:7",
																	"nodeType": "YulTypedName",
																	"src": "8730:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8754:17:7",
															"nodeType": "YulAssignment",
															"src": "8754:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8767:4:7",
																"nodeType": "YulLiteral",
																"src": "8767:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8754:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "8754:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8818:611:7",
																		"nodeType": "YulBlock",
																		"src": "8818:611:7",
																		"statements": [
																			{
																				"nativeSrc": "8832:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8832:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8851:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8851:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8863:4:7",
																									"nodeType": "YulLiteral",
																									"src": "8863:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8859:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "8859:3:7"
																							},
																							"nativeSrc": "8859:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8859:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8847:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8847:3:7"
																					},
																					"nativeSrc": "8847:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8847:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8836:7:7",
																						"nodeType": "YulTypedName",
																						"src": "8836:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8883:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8883:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8929:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8929:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8897:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "8897:31:7"
																					},
																					"nativeSrc": "8897:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8897:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8887:6:7",
																						"nodeType": "YulTypedName",
																						"src": "8887:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8947:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8947:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8956:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8956:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8951:1:7",
																						"nodeType": "YulTypedName",
																						"src": "8951:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9015:163:7",
																					"nodeType": "YulBlock",
																					"src": "9015:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9040:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "9040:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "9058:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "9058:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "9063:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "9063:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "9054:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "9054:3:7"
																												},
																												"nativeSrc": "9054:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "9054:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "9048:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "9048:5:7"
																										},
																										"nativeSrc": "9048:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9048:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9033:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9033:6:7"
																								},
																								"nativeSrc": "9033:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9033:42:7"
																							},
																							"nativeSrc": "9033:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "9033:42:7"
																						},
																						{
																							"nativeSrc": "9092:24:7",
																							"nodeType": "YulAssignment",
																							"src": "9092:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9106:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "9106:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9114:1:7",
																										"nodeType": "YulLiteral",
																										"src": "9114:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9102:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "9102:3:7"
																								},
																								"nativeSrc": "9102:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9102:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "9092:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9092:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9133:31:7",
																							"nodeType": "YulAssignment",
																							"src": "9133:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9150:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "9150:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9161:2:7",
																										"nodeType": "YulLiteral",
																										"src": "9161:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9146:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "9146:3:7"
																								},
																								"nativeSrc": "9146:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9146:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9133:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "9133:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8981:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "8981:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8984:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8984:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8978:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8978:2:7"
																					},
																					"nativeSrc": "8978:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8978:14:7"
																				},
																				"nativeSrc": "8970:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8993:21:7",
																					"nodeType": "YulBlock",
																					"src": "8993:21:7",
																					"statements": [
																						{
																							"nativeSrc": "8995:17:7",
																							"nodeType": "YulAssignment",
																							"src": "8995:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "9004:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "9004:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9007:4:7",
																										"nodeType": "YulLiteral",
																										"src": "9007:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9000:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "9000:3:7"
																								},
																								"nativeSrc": "9000:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9000:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8995:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "8995:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8974:3:7",
																					"nodeType": "YulBlock",
																					"src": "8974:3:7",
																					"statements": []
																				},
																				"src": "8970:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "9214:156:7",
																					"nodeType": "YulBlock",
																					"src": "9214:156:7",
																					"statements": [
																						{
																							"nativeSrc": "9232:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9232:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9259:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "9259:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9264:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9264:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9255:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "9255:3:7"
																										},
																										"nativeSrc": "9255:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9255:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9249:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9249:5:7"
																								},
																								"nativeSrc": "9249:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9249:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9236:9:7",
																									"nodeType": "YulTypedName",
																									"src": "9236:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9299:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "9299:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9326:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9326:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9341:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "9341:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9349:4:7",
																														"nodeType": "YulLiteral",
																														"src": "9349:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9337:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "9337:3:7"
																												},
																												"nativeSrc": "9337:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "9337:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9307:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "9307:18:7"
																										},
																										"nativeSrc": "9307:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9307:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9292:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9292:6:7"
																								},
																								"nativeSrc": "9292:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9292:64:7"
																							},
																							"nativeSrc": "9292:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "9292:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9197:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "9197:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9206:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "9206:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9194:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "9194:2:7"
																					},
																					"nativeSrc": "9194:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9194:19:7"
																				},
																				"nativeSrc": "9191:179:7",
																				"nodeType": "YulIf",
																				"src": "9191:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9390:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9390:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9404:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "9404:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9412:1:7",
																											"nodeType": "YulLiteral",
																											"src": "9412:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9400:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "9400:3:7"
																									},
																									"nativeSrc": "9400:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "9400:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9416:1:7",
																									"nodeType": "YulLiteral",
																									"src": "9416:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9396:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "9396:3:7"
																							},
																							"nativeSrc": "9396:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9396:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9383:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9383:6:7"
																					},
																					"nativeSrc": "9383:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9383:36:7"
																				},
																				"nativeSrc": "9383:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9383:36:7"
																			}
																		]
																	},
																	"nativeSrc": "8811:618:7",
																	"nodeType": "YulCase",
																	"src": "8811:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8816:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8816:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9446:222:7",
																		"nodeType": "YulBlock",
																		"src": "9446:222:7",
																		"statements": [
																			{
																				"nativeSrc": "9460:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9460:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9473:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9473:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9464:5:7",
																						"nodeType": "YulTypedName",
																						"src": "9464:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9497:67:7",
																					"nodeType": "YulBlock",
																					"src": "9497:67:7",
																					"statements": [
																						{
																							"nativeSrc": "9515:35:7",
																							"nodeType": "YulAssignment",
																							"src": "9515:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9534:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "9534:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9539:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9539:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9530:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "9530:3:7"
																										},
																										"nativeSrc": "9530:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9530:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9524:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9524:5:7"
																								},
																								"nativeSrc": "9524:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9524:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9515:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9515:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9490:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9490:6:7"
																				},
																				"nativeSrc": "9487:77:7",
																				"nodeType": "YulIf",
																				"src": "9487:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9584:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9584:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9643:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9643:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9650:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9650:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9590:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "9590:52:7"
																							},
																							"nativeSrc": "9590:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9590:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9577:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9577:6:7"
																					},
																					"nativeSrc": "9577:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9577:81:7"
																				},
																				"nativeSrc": "9577:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9577:81:7"
																			}
																		]
																	},
																	"nativeSrc": "9438:230:7",
																	"nodeType": "YulCase",
																	"src": "9438:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8791:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8791:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8799:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8799:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8788:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8788:2:7"
																},
																"nativeSrc": "8788:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8788:14:7"
															},
															"nativeSrc": "8781:887:7",
															"nodeType": "YulSwitch",
															"src": "8781:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8279:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8360:4:7",
														"nodeType": "YulTypedName",
														"src": "8360:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8366:3:7",
														"nodeType": "YulTypedName",
														"src": "8366:3:7",
														"type": ""
													}
												],
												"src": "8279:1395:7"
											},
											{
												"body": {
													"nativeSrc": "9745:53:7",
													"nodeType": "YulBlock",
													"src": "9745:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9762:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9762:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9785:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9785:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9767:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "9767:17:7"
																		},
																		"nativeSrc": "9767:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9767:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9755:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9755:6:7"
																},
																"nativeSrc": "9755:37:7",
																"nodeType": "YulFunctionCall",
																"src": "9755:37:7"
															},
															"nativeSrc": "9755:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "9755:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9680:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9733:5:7",
														"nodeType": "YulTypedName",
														"src": "9733:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9740:3:7",
														"nodeType": "YulTypedName",
														"src": "9740:3:7",
														"type": ""
													}
												],
												"src": "9680:118:7"
											},
											{
												"body": {
													"nativeSrc": "9902:124:7",
													"nodeType": "YulBlock",
													"src": "9902:124:7",
													"statements": [
														{
															"nativeSrc": "9912:26:7",
															"nodeType": "YulAssignment",
															"src": "9912:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9924:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9924:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9935:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9935:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9920:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9920:3:7"
																},
																"nativeSrc": "9920:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9920:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9912:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9912:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9992:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9992:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10005:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10005:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10016:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10016:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10001:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10001:3:7"
																		},
																		"nativeSrc": "10001:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10001:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9948:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9948:43:7"
																},
																"nativeSrc": "9948:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9948:71:7"
															},
															"nativeSrc": "9948:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9948:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9804:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9874:9:7",
														"nodeType": "YulTypedName",
														"src": "9874:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9886:6:7",
														"nodeType": "YulTypedName",
														"src": "9886:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9897:4:7",
														"nodeType": "YulTypedName",
														"src": "9897:4:7",
														"type": ""
													}
												],
												"src": "9804:222:7"
											},
											{
												"body": {
													"nativeSrc": "10060:152:7",
													"nodeType": "YulBlock",
													"src": "10060:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10077:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10077:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10080:77:7",
																		"nodeType": "YulLiteral",
																		"src": "10080:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10070:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10070:6:7"
																},
																"nativeSrc": "10070:88:7",
																"nodeType": "YulFunctionCall",
																"src": "10070:88:7"
															},
															"nativeSrc": "10070:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "10070:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10174:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10174:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10177:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10177:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10167:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10167:6:7"
																},
																"nativeSrc": "10167:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10167:15:7"
															},
															"nativeSrc": "10167:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10167:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10198:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10198:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10201:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10201:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10191:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10191:6:7"
																},
																"nativeSrc": "10191:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10191:15:7"
															},
															"nativeSrc": "10191:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10191:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10032:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "10032:180:7"
											},
											{
												"body": {
													"nativeSrc": "10262:147:7",
													"nodeType": "YulBlock",
													"src": "10262:147:7",
													"statements": [
														{
															"nativeSrc": "10272:25:7",
															"nodeType": "YulAssignment",
															"src": "10272:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10295:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10295:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10277:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10277:17:7"
																},
																"nativeSrc": "10277:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10277:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10272:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10272:1:7"
																}
															]
														},
														{
															"nativeSrc": "10306:25:7",
															"nodeType": "YulAssignment",
															"src": "10306:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10329:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10329:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10311:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10311:17:7"
																},
																"nativeSrc": "10311:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10311:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10306:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10306:1:7"
																}
															]
														},
														{
															"nativeSrc": "10340:16:7",
															"nodeType": "YulAssignment",
															"src": "10340:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10351:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10351:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10354:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10354:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10347:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10347:3:7"
																},
																"nativeSrc": "10347:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10347:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10340:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10340:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10380:22:7",
																"nodeType": "YulBlock",
																"src": "10380:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10382:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10382:16:7"
																			},
																			"nativeSrc": "10382:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10382:18:7"
																		},
																		"nativeSrc": "10382:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10382:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10372:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10372:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10375:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10375:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10369:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "10369:2:7"
																},
																"nativeSrc": "10369:10:7",
																"nodeType": "YulFunctionCall",
																"src": "10369:10:7"
															},
															"nativeSrc": "10366:36:7",
															"nodeType": "YulIf",
															"src": "10366:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10218:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10249:1:7",
														"nodeType": "YulTypedName",
														"src": "10249:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10252:1:7",
														"nodeType": "YulTypedName",
														"src": "10252:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10258:3:7",
														"nodeType": "YulTypedName",
														"src": "10258:3:7",
														"type": ""
													}
												],
												"src": "10218:191:7"
											},
											{
												"body": {
													"nativeSrc": "10480:53:7",
													"nodeType": "YulBlock",
													"src": "10480:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10497:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10497:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10520:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10520:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10502:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "10502:17:7"
																		},
																		"nativeSrc": "10502:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10502:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10490:6:7"
																},
																"nativeSrc": "10490:37:7",
																"nodeType": "YulFunctionCall",
																"src": "10490:37:7"
															},
															"nativeSrc": "10490:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "10490:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10415:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10468:5:7",
														"nodeType": "YulTypedName",
														"src": "10468:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10475:3:7",
														"nodeType": "YulTypedName",
														"src": "10475:3:7",
														"type": ""
													}
												],
												"src": "10415:118:7"
											},
											{
												"body": {
													"nativeSrc": "10693:288:7",
													"nodeType": "YulBlock",
													"src": "10693:288:7",
													"statements": [
														{
															"nativeSrc": "10703:26:7",
															"nodeType": "YulAssignment",
															"src": "10703:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10715:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10715:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10726:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10726:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10711:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10711:3:7"
																},
																"nativeSrc": "10711:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10711:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10703:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10703:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10783:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10783:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10796:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10796:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10807:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10807:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10792:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10792:3:7"
																		},
																		"nativeSrc": "10792:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10792:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10739:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10739:43:7"
																},
																"nativeSrc": "10739:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10739:71:7"
															},
															"nativeSrc": "10739:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10739:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10864:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10864:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10877:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10877:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10888:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10888:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10873:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10873:3:7"
																		},
																		"nativeSrc": "10873:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10873:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10820:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10820:43:7"
																},
																"nativeSrc": "10820:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10820:72:7"
															},
															"nativeSrc": "10820:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10820:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10946:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10946:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10959:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10959:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10970:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10970:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10955:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10955:3:7"
																		},
																		"nativeSrc": "10955:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10955:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10902:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10902:43:7"
																},
																"nativeSrc": "10902:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10902:72:7"
															},
															"nativeSrc": "10902:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10902:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10539:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10649:9:7",
														"nodeType": "YulTypedName",
														"src": "10649:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10661:6:7",
														"nodeType": "YulTypedName",
														"src": "10661:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10669:6:7",
														"nodeType": "YulTypedName",
														"src": "10669:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10677:6:7",
														"nodeType": "YulTypedName",
														"src": "10677:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10688:4:7",
														"nodeType": "YulTypedName",
														"src": "10688:4:7",
														"type": ""
													}
												],
												"src": "10539:442:7"
											},
											{
												"body": {
													"nativeSrc": "11085:124:7",
													"nodeType": "YulBlock",
													"src": "11085:124:7",
													"statements": [
														{
															"nativeSrc": "11095:26:7",
															"nodeType": "YulAssignment",
															"src": "11095:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11107:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11107:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11118:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11118:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11103:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11103:3:7"
																},
																"nativeSrc": "11103:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11103:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11095:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11095:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11175:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11175:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11188:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11188:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11199:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11199:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11184:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11184:3:7"
																		},
																		"nativeSrc": "11184:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11184:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11131:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11131:43:7"
																},
																"nativeSrc": "11131:71:7",
																"nodeType": "YulFunctionCall",
																"src": "11131:71:7"
															},
															"nativeSrc": "11131:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "11131:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10987:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11057:9:7",
														"nodeType": "YulTypedName",
														"src": "11057:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11069:6:7",
														"nodeType": "YulTypedName",
														"src": "11069:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11080:4:7",
														"nodeType": "YulTypedName",
														"src": "11080:4:7",
														"type": ""
													}
												],
												"src": "10987:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051611c8d380380611c8d8339818101604052810190610032919061066e565b83838381600390816100449190610924565b5080600490816100549190610924565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c95760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100c09190610a05565b60405180910390fd5b6100d8816100f260201b60201c565b506100e933826101b860201b60201c565b50505050610ae4565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361022a5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102219190610a05565b60405180910390fd5b61023c6000838361024060201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036102925780600260008282546102869190610a4f565b92505081905550610365565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561031e578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161031593929190610a92565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103ae57806002600082825403925050819055506103fb565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104589190610ac9565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104a482610479565b9050919050565b6104b481610499565b81146104bf57600080fd5b50565b6000815190506104d1816104ab565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61052a826104e1565b810181811067ffffffffffffffff82111715610549576105486104f2565b5b80604052505050565b600061055c610465565b90506105688282610521565b919050565b600067ffffffffffffffff821115610588576105876104f2565b5b610591826104e1565b9050602081019050919050565b60005b838110156105bc5780820151818401526020810190506105a1565b60008484015250505050565b60006105db6105d68461056d565b610552565b9050828152602081018484840111156105f7576105f66104dc565b5b61060284828561059e565b509392505050565b600082601f83011261061f5761061e6104d7565b5b815161062f8482602086016105c8565b91505092915050565b6000819050919050565b61064b81610638565b811461065657600080fd5b50565b60008151905061066881610642565b92915050565b600080600080608085870312156106885761068761046f565b5b6000610696878288016104c2565b945050602085015167ffffffffffffffff8111156106b7576106b6610474565b5b6106c38782880161060a565b935050604085015167ffffffffffffffff8111156106e4576106e3610474565b5b6106f08782880161060a565b925050606061070187828801610659565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061075f57607f821691505b60208210810361077257610771610718565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026107da7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261079d565b6107e4868361079d565b95508019841693508086168417925050509392505050565b6000819050919050565b600061082161081c61081784610638565b6107fc565b610638565b9050919050565b6000819050919050565b61083b83610806565b61084f61084782610828565b8484546107aa565b825550505050565b600090565b610864610857565b61086f818484610832565b505050565b5b818110156108935761088860008261085c565b600181019050610875565b5050565b601f8211156108d8576108a981610778565b6108b28461078d565b810160208510156108c1578190505b6108d56108cd8561078d565b830182610874565b50505b505050565b600082821c905092915050565b60006108fb600019846008026108dd565b1980831691505092915050565b600061091483836108ea565b9150826002028217905092915050565b61092d8261070d565b67ffffffffffffffff811115610946576109456104f2565b5b6109508254610747565b61095b828285610897565b600060209050601f83116001811461098e576000841561097c578287015190505b6109868582610908565b8655506109ee565b601f19841661099c86610778565b60005b828110156109c45784890151825560018201915060208501945060208101905061099f565b868310156109e157848901516109dd601f8916826108ea565b8355505b6001600288020188555050505b505050505050565b6109ff81610499565b82525050565b6000602082019050610a1a60008301846109f6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a5a82610638565b9150610a6583610638565b9250828201905080821115610a7d57610a7c610a20565b5b92915050565b610a8c81610638565b82525050565b6000606082019050610aa760008301866109f6565b610ab46020830185610a83565b610ac16040830184610a83565b949350505050565b6000602082019050610ade6000830184610a83565b92915050565b61119a80610af36000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b4114610202578063a9059cbb14610220578063dd62ed3e14610250578063f2fde38b14610280576100cf565b806370a08231146101aa578063715018a6146101da5780638da5cb5b146101e4576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806340c10f191461018e575b600080fd5b6100dc61029c565b6040516100e99190610dee565b60405180910390f35b61010c60048036038101906101079190610ea9565b61032e565b6040516101199190610f04565b60405180910390f35b61012a610351565b6040516101379190610f2e565b60405180910390f35b61015a60048036038101906101559190610f49565b61035b565b6040516101679190610f04565b60405180910390f35b61017861038a565b6040516101859190610fb8565b60405180910390f35b6101a860048036038101906101a39190610ea9565b610393565b005b6101c460048036038101906101bf9190610fd3565b6103a9565b6040516101d19190610f2e565b60405180910390f35b6101e26103f1565b005b6101ec610405565b6040516101f9919061100f565b60405180910390f35b61020a61042f565b6040516102179190610dee565b60405180910390f35b61023a60048036038101906102359190610ea9565b6104c1565b6040516102479190610f04565b60405180910390f35b61026a6004803603810190610265919061102a565b6104e4565b6040516102779190610f2e565b60405180910390f35b61029a60048036038101906102959190610fd3565b61056b565b005b6060600380546102ab90611099565b80601f01602080910402602001604051908101604052809291908181526020018280546102d790611099565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905090565b6000806103396105f1565b90506103468185856105f9565b600191505092915050565b6000600254905090565b6000806103666105f1565b905061037385828561060b565b61037e85858561069f565b60019150509392505050565b60006012905090565b61039b610793565b6103a5828261081a565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6103f9610793565b610403600061089c565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461043e90611099565b80601f016020809104026020016040519081016040528092919081815260200182805461046a90611099565b80156104b75780601f1061048c576101008083540402835291602001916104b7565b820191906000526020600020905b81548152906001019060200180831161049a57829003601f168201915b5050505050905090565b6000806104cc6105f1565b90506104d981858561069f565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610573610793565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105e55760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105dc919061100f565b60405180910390fd5b6105ee8161089c565b50565b600033905090565b6106068383836001610962565b505050565b600061061784846104e4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106995781811015610689578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610680939291906110ca565b60405180910390fd5b61069884848484036000610962565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107115760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610708919061100f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107835760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161077a919061100f565b60405180910390fd5b61078e838383610b39565b505050565b61079b6105f1565b73ffffffffffffffffffffffffffffffffffffffff166107b9610405565b73ffffffffffffffffffffffffffffffffffffffff1614610818576107dc6105f1565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161080f919061100f565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361088c5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610883919061100f565b60405180910390fd5b61089860008383610b39565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109d45760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109cb919061100f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a465760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a3d919061100f565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b33578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b2a9190610f2e565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b8b578060026000828254610b7f9190611130565b92505081905550610c5e565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c17578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c0e939291906110ca565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ca75780600260008282540392505081905550610cf4565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d519190610f2e565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d98578082015181840152602081019050610d7d565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dc082610d5e565b610dca8185610d69565b9350610dda818560208601610d7a565b610de381610da4565b840191505092915050565b60006020820190508181036000830152610e088184610db5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4082610e15565b9050919050565b610e5081610e35565b8114610e5b57600080fd5b50565b600081359050610e6d81610e47565b92915050565b6000819050919050565b610e8681610e73565b8114610e9157600080fd5b50565b600081359050610ea381610e7d565b92915050565b60008060408385031215610ec057610ebf610e10565b5b6000610ece85828601610e5e565b9250506020610edf85828601610e94565b9150509250929050565b60008115159050919050565b610efe81610ee9565b82525050565b6000602082019050610f196000830184610ef5565b92915050565b610f2881610e73565b82525050565b6000602082019050610f436000830184610f1f565b92915050565b600080600060608486031215610f6257610f61610e10565b5b6000610f7086828701610e5e565b9350506020610f8186828701610e5e565b9250506040610f9286828701610e94565b9150509250925092565b600060ff82169050919050565b610fb281610f9c565b82525050565b6000602082019050610fcd6000830184610fa9565b92915050565b600060208284031215610fe957610fe8610e10565b5b6000610ff784828501610e5e565b91505092915050565b61100981610e35565b82525050565b60006020820190506110246000830184611000565b92915050565b6000806040838503121561104157611040610e10565b5b600061104f85828601610e5e565b925050602061106085828601610e5e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110b157607f821691505b6020821081036110c4576110c361106a565b5b50919050565b60006060820190506110df6000830186611000565b6110ec6020830185610f1f565b6110f96040830184610f1f565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061113b82610e73565b915061114683610e73565b925082820190508082111561115e5761115d611101565b5b9291505056fea26469706673582212200ac27d7aa40f7252022fd29df9d607477e5620449fb1f630a2963dbe7ac4c34d64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1C8D CODESIZE SUB DUP1 PUSH2 0x1C8D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x66E JUMP JUMPDEST DUP4 DUP4 DUP4 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x44 SWAP2 SWAP1 PUSH2 0x924 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x924 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC9 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD8 DUP2 PUSH2 0xF2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xE9 CALLER DUP3 PUSH2 0x1B8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x22A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23C PUSH1 0x0 DUP4 DUP4 PUSH2 0x240 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x292 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0xA4F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x365 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x31E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x315 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3AE JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3FB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x458 SWAP2 SWAP1 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A4 DUP3 PUSH2 0x479 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B4 DUP2 PUSH2 0x499 JUMP JUMPDEST DUP2 EQ PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4D1 DUP2 PUSH2 0x4AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x52A DUP3 PUSH2 0x4E1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x549 JUMPI PUSH2 0x548 PUSH2 0x4F2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55C PUSH2 0x465 JUMP JUMPDEST SWAP1 POP PUSH2 0x568 DUP3 DUP3 PUSH2 0x521 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x588 JUMPI PUSH2 0x587 PUSH2 0x4F2 JUMP JUMPDEST JUMPDEST PUSH2 0x591 DUP3 PUSH2 0x4E1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5BC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DB PUSH2 0x5D6 DUP5 PUSH2 0x56D JUMP JUMPDEST PUSH2 0x552 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x5F7 JUMPI PUSH2 0x5F6 PUSH2 0x4DC JUMP JUMPDEST JUMPDEST PUSH2 0x602 DUP5 DUP3 DUP6 PUSH2 0x59E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x61F JUMPI PUSH2 0x61E PUSH2 0x4D7 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x62F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x64B DUP2 PUSH2 0x638 JUMP JUMPDEST DUP2 EQ PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x668 DUP2 PUSH2 0x642 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x688 JUMPI PUSH2 0x687 PUSH2 0x46F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x696 DUP8 DUP3 DUP9 ADD PUSH2 0x4C2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6B7 JUMPI PUSH2 0x6B6 PUSH2 0x474 JUMP JUMPDEST JUMPDEST PUSH2 0x6C3 DUP8 DUP3 DUP9 ADD PUSH2 0x60A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6E4 JUMPI PUSH2 0x6E3 PUSH2 0x474 JUMP JUMPDEST JUMPDEST PUSH2 0x6F0 DUP8 DUP3 DUP9 ADD PUSH2 0x60A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x701 DUP8 DUP3 DUP9 ADD PUSH2 0x659 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x75F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x772 JUMPI PUSH2 0x771 PUSH2 0x718 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x7DA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x79D JUMP JUMPDEST PUSH2 0x7E4 DUP7 DUP4 PUSH2 0x79D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x821 PUSH2 0x81C PUSH2 0x817 DUP5 PUSH2 0x638 JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x638 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x83B DUP4 PUSH2 0x806 JUMP JUMPDEST PUSH2 0x84F PUSH2 0x847 DUP3 PUSH2 0x828 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x7AA JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x864 PUSH2 0x857 JUMP JUMPDEST PUSH2 0x86F DUP2 DUP5 DUP5 PUSH2 0x832 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x893 JUMPI PUSH2 0x888 PUSH1 0x0 DUP3 PUSH2 0x85C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x875 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x8D8 JUMPI PUSH2 0x8A9 DUP2 PUSH2 0x778 JUMP JUMPDEST PUSH2 0x8B2 DUP5 PUSH2 0x78D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x8C1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x8D5 PUSH2 0x8CD DUP6 PUSH2 0x78D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x874 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FB PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x8DD JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x914 DUP4 DUP4 PUSH2 0x8EA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x92D DUP3 PUSH2 0x70D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x946 JUMPI PUSH2 0x945 PUSH2 0x4F2 JUMP JUMPDEST JUMPDEST PUSH2 0x950 DUP3 SLOAD PUSH2 0x747 JUMP JUMPDEST PUSH2 0x95B DUP3 DUP3 DUP6 PUSH2 0x897 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x98E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x97C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x986 DUP6 DUP3 PUSH2 0x908 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x99C DUP7 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9C4 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x99F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x9E1 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x9DD PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x8EA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9FF DUP2 PUSH2 0x499 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA1A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA5A DUP3 PUSH2 0x638 JUMP JUMPDEST SWAP2 POP PUSH2 0xA65 DUP4 PUSH2 0x638 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA7D JUMPI PUSH2 0xA7C PUSH2 0xA20 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA8C DUP2 PUSH2 0x638 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xAA7 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x9F6 JUMP JUMPDEST PUSH2 0xAB4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0xAC1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA83 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xADE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x119A DUP1 PUSH2 0xAF3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x280 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E4 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xF49 JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x3F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EC PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D7 SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x324 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x324 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x307 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x339 PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x346 DUP2 DUP6 DUP6 PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x366 PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x373 DUP6 DUP3 DUP6 PUSH2 0x60B JUMP JUMPDEST PUSH2 0x37E DUP6 DUP6 DUP6 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x793 JUMP JUMPDEST PUSH2 0x3A5 DUP3 DUP3 PUSH2 0x81A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x403 PUSH1 0x0 PUSH2 0x89C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x43E SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x46A SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4CC PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D9 DUP2 DUP6 DUP6 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x573 PUSH2 0x793 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5E5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5EE DUP2 PUSH2 0x89C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x606 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x962 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x617 DUP5 DUP5 PUSH2 0x4E4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x699 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x689 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x680 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x698 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x962 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x711 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x708 SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x783 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77A SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78E DUP4 DUP4 DUP4 PUSH2 0xB39 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x79B PUSH2 0x5F1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7B9 PUSH2 0x405 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x818 JUMPI PUSH2 0x7DC PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80F SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x88C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x898 PUSH1 0x0 DUP4 DUP4 PUSH2 0xB39 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CB SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA46 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3D SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB33 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB2A SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB8B JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB7F SWAP2 SWAP1 PUSH2 0x1130 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC17 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA7 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCF4 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD51 SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD98 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC0 DUP3 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0xDCA DUP2 DUP6 PUSH2 0xD69 JUMP JUMPDEST SWAP4 POP PUSH2 0xDDA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD7A JUMP JUMPDEST PUSH2 0xDE3 DUP2 PUSH2 0xDA4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE08 DUP2 DUP5 PUSH2 0xDB5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE40 DUP3 PUSH2 0xE15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE50 DUP2 PUSH2 0xE35 JUMP JUMPDEST DUP2 EQ PUSH2 0xE5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE6D DUP2 PUSH2 0xE47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE86 DUP2 PUSH2 0xE73 JUMP JUMPDEST DUP2 EQ PUSH2 0xE91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEA3 DUP2 PUSH2 0xE7D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC0 JUMPI PUSH2 0xEBF PUSH2 0xE10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xECE DUP6 DUP3 DUP7 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEDF DUP6 DUP3 DUP7 ADD PUSH2 0xE94 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEFE DUP2 PUSH2 0xEE9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF19 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF28 DUP2 PUSH2 0xE73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF43 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF62 JUMPI PUSH2 0xF61 PUSH2 0xE10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF70 DUP7 DUP3 DUP8 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF81 DUP7 DUP3 DUP8 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF92 DUP7 DUP3 DUP8 ADD PUSH2 0xE94 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB2 DUP2 PUSH2 0xF9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFCD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFE9 JUMPI PUSH2 0xFE8 PUSH2 0xE10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF7 DUP5 DUP3 DUP6 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1009 DUP2 PUSH2 0xE35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1024 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1000 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1041 JUMPI PUSH2 0x1040 PUSH2 0xE10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x104F DUP6 DUP3 DUP7 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1060 DUP6 DUP3 DUP7 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10B1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10C4 JUMPI PUSH2 0x10C3 PUSH2 0x106A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10DF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1000 JUMP JUMPDEST PUSH2 0x10EC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF1F JUMP JUMPDEST PUSH2 0x10F9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF1F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x113B DUP3 PUSH2 0xE73 JUMP JUMPDEST SWAP2 POP PUSH2 0x1146 DUP4 PUSH2 0xE73 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x115E JUMPI PUSH2 0x115D PUSH2 0x1101 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP 0xC2 PUSH30 0x7AA40F7252022FD29DF9D607477E5620449FB1F630A2963DBE7AC4C34D64 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
							"sourceMap": "224:372:6:-:0;;;264:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;429:12;407:4;413:6;1675:5:2;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;454:30:6::2;460:10;472:11;454:5;;;:30;;:::i;:::-;264:228:::0;;;;224:372;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:75:7:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:308::-;1869:4;1959:18;1951:6;1948:30;1945:56;;;1981:18;;:::i;:::-;1945:56;2019:29;2041:6;2019:29;:::i;:::-;2011:37;;2103:4;2097;2093:15;2085:23;;1807:308;;;:::o;2121:248::-;2203:1;2213:113;2227:6;2224:1;2221:13;2213:113;;;2312:1;2307:3;2303:11;2297:18;2293:1;2288:3;2284:11;2277:39;2249:2;2246:1;2242:10;2237:15;;2213:113;;;2360:1;2351:6;2346:3;2342:16;2335:27;2183:186;2121:248;;;:::o;2375:434::-;2464:5;2489:66;2505:49;2547:6;2505:49;:::i;:::-;2489:66;:::i;:::-;2480:75;;2578:6;2571:5;2564:21;2616:4;2609:5;2605:16;2654:3;2645:6;2640:3;2636:16;2633:25;2630:112;;;2661:79;;:::i;:::-;2630:112;2751:52;2796:6;2791:3;2786;2751:52;:::i;:::-;2470:339;2375:434;;;;;:::o;2829:355::-;2896:5;2945:3;2938:4;2930:6;2926:17;2922:27;2912:122;;2953:79;;:::i;:::-;2912:122;3063:6;3057:13;3088:90;3174:3;3166:6;3159:4;3151:6;3147:17;3088:90;:::i;:::-;3079:99;;2902:282;2829:355;;;;:::o;3190:77::-;3227:7;3256:5;3245:16;;3190:77;;;:::o;3273:122::-;3346:24;3364:5;3346:24;:::i;:::-;3339:5;3336:35;3326:63;;3385:1;3382;3375:12;3326:63;3273:122;:::o;3401:143::-;3458:5;3489:6;3483:13;3474:22;;3505:33;3532:5;3505:33;:::i;:::-;3401:143;;;;:::o;3550:1166::-;3667:6;3675;3683;3691;3740:3;3728:9;3719:7;3715:23;3711:33;3708:120;;;3747:79;;:::i;:::-;3708:120;3867:1;3892:64;3948:7;3939:6;3928:9;3924:22;3892:64;:::i;:::-;3882:74;;3838:128;4026:2;4015:9;4011:18;4005:25;4057:18;4049:6;4046:30;4043:117;;;4079:79;;:::i;:::-;4043:117;4184:74;4250:7;4241:6;4230:9;4226:22;4184:74;:::i;:::-;4174:84;;3976:292;4328:2;4317:9;4313:18;4307:25;4359:18;4351:6;4348:30;4345:117;;;4381:79;;:::i;:::-;4345:117;4486:74;4552:7;4543:6;4532:9;4528:22;4486:74;:::i;:::-;4476:84;;4278:292;4609:2;4635:64;4691:7;4682:6;4671:9;4667:22;4635:64;:::i;:::-;4625:74;;4580:129;3550:1166;;;;;;;:::o;4722:99::-;4774:6;4808:5;4802:12;4792:22;;4722:99;;;:::o;4827:180::-;4875:77;4872:1;4865:88;4972:4;4969:1;4962:15;4996:4;4993:1;4986:15;5013:320;5057:6;5094:1;5088:4;5084:12;5074:22;;5141:1;5135:4;5131:12;5162:18;5152:81;;5218:4;5210:6;5206:17;5196:27;;5152:81;5280:2;5272:6;5269:14;5249:18;5246:38;5243:84;;5299:18;;:::i;:::-;5243:84;5064:269;5013:320;;;:::o;5339:141::-;5388:4;5411:3;5403:11;;5434:3;5431:1;5424:14;5468:4;5465:1;5455:18;5447:26;;5339:141;;;:::o;5486:93::-;5523:6;5570:2;5565;5558:5;5554:14;5550:23;5540:33;;5486:93;;;:::o;5585:107::-;5629:8;5679:5;5673:4;5669:16;5648:37;;5585:107;;;;:::o;5698:393::-;5767:6;5817:1;5805:10;5801:18;5840:97;5870:66;5859:9;5840:97;:::i;:::-;5958:39;5988:8;5977:9;5958:39;:::i;:::-;5946:51;;6030:4;6026:9;6019:5;6015:21;6006:30;;6079:4;6069:8;6065:19;6058:5;6055:30;6045:40;;5774:317;;5698:393;;;;;:::o;6097:60::-;6125:3;6146:5;6139:12;;6097:60;;;:::o;6163:142::-;6213:9;6246:53;6264:34;6273:24;6291:5;6273:24;:::i;:::-;6264:34;:::i;:::-;6246:53;:::i;:::-;6233:66;;6163:142;;;:::o;6311:75::-;6354:3;6375:5;6368:12;;6311:75;;;:::o;6392:269::-;6502:39;6533:7;6502:39;:::i;:::-;6563:91;6612:41;6636:16;6612:41;:::i;:::-;6604:6;6597:4;6591:11;6563:91;:::i;:::-;6557:4;6550:105;6468:193;6392:269;;;:::o;6667:73::-;6712:3;6667:73;:::o;6746:189::-;6823:32;;:::i;:::-;6864:65;6922:6;6914;6908:4;6864:65;:::i;:::-;6799:136;6746:189;;:::o;6941:186::-;7001:120;7018:3;7011:5;7008:14;7001:120;;;7072:39;7109:1;7102:5;7072:39;:::i;:::-;7045:1;7038:5;7034:13;7025:22;;7001:120;;;6941:186;;:::o;7133:543::-;7234:2;7229:3;7226:11;7223:446;;;7268:38;7300:5;7268:38;:::i;:::-;7352:29;7370:10;7352:29;:::i;:::-;7342:8;7338:44;7535:2;7523:10;7520:18;7517:49;;;7556:8;7541:23;;7517:49;7579:80;7635:22;7653:3;7635:22;:::i;:::-;7625:8;7621:37;7608:11;7579:80;:::i;:::-;7238:431;;7223:446;7133:543;;;:::o;7682:117::-;7736:8;7786:5;7780:4;7776:16;7755:37;;7682:117;;;;:::o;7805:169::-;7849:6;7882:51;7930:1;7926:6;7918:5;7915:1;7911:13;7882:51;:::i;:::-;7878:56;7963:4;7957;7953:15;7943:25;;7856:118;7805:169;;;;:::o;7979:295::-;8055:4;8201:29;8226:3;8220:4;8201:29;:::i;:::-;8193:37;;8263:3;8260:1;8256:11;8250:4;8247:21;8239:29;;7979:295;;;;:::o;8279:1395::-;8396:37;8429:3;8396:37;:::i;:::-;8498:18;8490:6;8487:30;8484:56;;;8520:18;;:::i;:::-;8484:56;8564:38;8596:4;8590:11;8564:38;:::i;:::-;8649:67;8709:6;8701;8695:4;8649:67;:::i;:::-;8743:1;8767:4;8754:17;;8799:2;8791:6;8788:14;8816:1;8811:618;;;;9473:1;9490:6;9487:77;;;9539:9;9534:3;9530:19;9524:26;9515:35;;9487:77;9590:67;9650:6;9643:5;9590:67;:::i;:::-;9584:4;9577:81;9446:222;8781:887;;8811:618;8863:4;8859:9;8851:6;8847:22;8897:37;8929:4;8897:37;:::i;:::-;8956:1;8970:208;8984:7;8981:1;8978:14;8970:208;;;9063:9;9058:3;9054:19;9048:26;9040:6;9033:42;9114:1;9106:6;9102:14;9092:24;;9161:2;9150:9;9146:18;9133:31;;9007:4;9004:1;9000:12;8995:17;;8970:208;;;9206:6;9197:7;9194:19;9191:179;;;9264:9;9259:3;9255:19;9249:26;9307:48;9349:4;9341:6;9337:17;9326:9;9307:48;:::i;:::-;9299:6;9292:64;9214:156;9191:179;9416:1;9412;9404:6;9400:14;9396:22;9390:4;9383:36;8818:611;;;8781:887;;8371:1303;;;8279:1395;;:::o;9680:118::-;9767:24;9785:5;9767:24;:::i;:::-;9762:3;9755:37;9680:118;;:::o;9804:222::-;9897:4;9935:2;9924:9;9920:18;9912:26;;9948:71;10016:1;10005:9;10001:17;9992:6;9948:71;:::i;:::-;9804:222;;;;:::o;10032:180::-;10080:77;10077:1;10070:88;10177:4;10174:1;10167:15;10201:4;10198:1;10191:15;10218:191;10258:3;10277:20;10295:1;10277:20;:::i;:::-;10272:25;;10311:20;10329:1;10311:20;:::i;:::-;10306:25;;10354:1;10351;10347:9;10340:16;;10375:3;10372:1;10369:10;10366:36;;;10382:18;;:::i;:::-;10366:36;10218:191;;;;:::o;10415:118::-;10502:24;10520:5;10502:24;:::i;:::-;10497:3;10490:37;10415:118;;:::o;10539:442::-;10688:4;10726:2;10715:9;10711:18;10703:26;;10739:71;10807:1;10796:9;10792:17;10783:6;10739:71;:::i;:::-;10820:72;10888:2;10877:9;10873:18;10864:6;10820:72;:::i;:::-;10902;10970:2;10959:9;10955:18;10946:6;10902:72;:::i;:::-;10539:442;;;;;;:::o;10987:222::-;11080:4;11118:2;11107:9;11103:18;11095:26;;11131:71;11199:1;11188:9;11184:17;11175:6;11131:71;:::i;:::-;10987:222;;;;:::o;224:372:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 1529,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 2402,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1939,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 2074,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 1521,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 1547,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2204,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 1695,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 2873,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 1252,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 814,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 937,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 906,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_981": {
									"entryPoint": 915,
									"id": 981,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 668,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1029,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1009,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1071,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 849,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 859,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1387,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1217,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4298,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3450,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4353,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4202,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3600,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 3655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7362:7",
										"nodeType": "YulBlock",
										"src": "0:7362:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:186:7",
													"nodeType": "YulBlock",
													"src": "349:186:7",
													"statements": [
														{
															"nativeSrc": "360:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "360:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "369:1:7",
																"nodeType": "YulLiteral",
																"src": "369:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "364:1:7",
																	"nodeType": "YulTypedName",
																	"src": "364:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "429:63:7",
																"nodeType": "YulBlock",
																"src": "429:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "454:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "454:3:7"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "459:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "459:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "450:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "450:3:7"
																					},
																					"nativeSrc": "450:11:7",
																					"nodeType": "YulFunctionCall",
																					"src": "450:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "473:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "473:3:7"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "478:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "478:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "469:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "469:3:7"
																							},
																							"nativeSrc": "469:11:7",
																							"nodeType": "YulFunctionCall",
																							"src": "469:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "463:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "463:5:7"
																					},
																					"nativeSrc": "463:18:7",
																					"nodeType": "YulFunctionCall",
																					"src": "463:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "443:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "443:6:7"
																			},
																			"nativeSrc": "443:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "443:39:7"
																		},
																		"nativeSrc": "443:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "443:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "390:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "390:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "393:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "393:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "387:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "387:2:7"
																},
																"nativeSrc": "387:13:7",
																"nodeType": "YulFunctionCall",
																"src": "387:13:7"
															},
															"nativeSrc": "379:113:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "401:19:7",
																"nodeType": "YulBlock",
																"src": "401:19:7",
																"statements": [
																	{
																		"nativeSrc": "403:15:7",
																		"nodeType": "YulAssignment",
																		"src": "403:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "412:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "412:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "415:2:7",
																					"nodeType": "YulLiteral",
																					"src": "415:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "408:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:3:7"
																			},
																			"nativeSrc": "408:10:7",
																			"nodeType": "YulFunctionCall",
																			"src": "408:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "403:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "383:3:7",
																"nodeType": "YulBlock",
																"src": "383:3:7",
																"statements": []
															},
															"src": "379:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "512:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "512:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "517:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "517:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "508:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "508:3:7"
																		},
																		"nativeSrc": "508:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "508:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "526:1:7",
																		"nodeType": "YulLiteral",
																		"src": "526:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "501:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "501:6:7"
																},
																"nativeSrc": "501:27:7",
																"nodeType": "YulFunctionCall",
																"src": "501:27:7"
															},
															"nativeSrc": "501:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "501:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:248:7"
											},
											{
												"body": {
													"nativeSrc": "589:54:7",
													"nodeType": "YulBlock",
													"src": "589:54:7",
													"statements": [
														{
															"nativeSrc": "599:38:7",
															"nodeType": "YulAssignment",
															"src": "599:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "617:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "617:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "624:2:7",
																				"nodeType": "YulLiteral",
																				"src": "624:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "613:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "613:3:7"
																		},
																		"nativeSrc": "613:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "613:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "633:2:7",
																				"nodeType": "YulLiteral",
																				"src": "633:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "629:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "629:3:7"
																		},
																		"nativeSrc": "629:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "629:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "609:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "609:3:7"
																},
																"nativeSrc": "609:28:7",
																"nodeType": "YulFunctionCall",
																"src": "609:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "599:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "599:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "541:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "572:5:7",
														"nodeType": "YulTypedName",
														"src": "572:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "582:6:7",
														"nodeType": "YulTypedName",
														"src": "582:6:7",
														"type": ""
													}
												],
												"src": "541:102:7"
											},
											{
												"body": {
													"nativeSrc": "741:285:7",
													"nodeType": "YulBlock",
													"src": "741:285:7",
													"statements": [
														{
															"nativeSrc": "751:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "751:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "798:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "798:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "765:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "765:32:7"
																},
																"nativeSrc": "765:39:7",
																"nodeType": "YulFunctionCall",
																"src": "765:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "755:6:7",
																	"nodeType": "YulTypedName",
																	"src": "755:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "813:78:7",
															"nodeType": "YulAssignment",
															"src": "813:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "879:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "879:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "884:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "884:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "820:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "820:58:7"
																},
																"nativeSrc": "820:71:7",
																"nodeType": "YulFunctionCall",
																"src": "820:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "813:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "813:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "939:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "939:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "946:4:7",
																				"nodeType": "YulLiteral",
																				"src": "946:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "935:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "935:3:7"
																		},
																		"nativeSrc": "935:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "935:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "953:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "953:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "958:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "958:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "900:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "900:34:7"
																},
																"nativeSrc": "900:65:7",
																"nodeType": "YulFunctionCall",
																"src": "900:65:7"
															},
															"nativeSrc": "900:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "900:65:7"
														},
														{
															"nativeSrc": "974:46:7",
															"nodeType": "YulAssignment",
															"src": "974:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "985:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "985:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1012:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1012:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "990:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "990:21:7"
																		},
																		"nativeSrc": "990:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "990:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "981:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "981:3:7"
																},
																"nativeSrc": "981:39:7",
																"nodeType": "YulFunctionCall",
																"src": "981:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "974:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "974:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "649:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "722:5:7",
														"nodeType": "YulTypedName",
														"src": "722:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "729:3:7",
														"nodeType": "YulTypedName",
														"src": "729:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "737:3:7",
														"nodeType": "YulTypedName",
														"src": "737:3:7",
														"type": ""
													}
												],
												"src": "649:377:7"
											},
											{
												"body": {
													"nativeSrc": "1150:195:7",
													"nodeType": "YulBlock",
													"src": "1150:195:7",
													"statements": [
														{
															"nativeSrc": "1160:26:7",
															"nodeType": "YulAssignment",
															"src": "1160:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1172:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1172:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1183:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1183:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1168:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1168:3:7"
																},
																"nativeSrc": "1168:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1168:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1160:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1160:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1207:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1207:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1218:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1218:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1203:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1203:3:7"
																		},
																		"nativeSrc": "1203:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1203:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1226:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1226:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1232:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1232:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1222:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1222:3:7"
																		},
																		"nativeSrc": "1222:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1222:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1196:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1196:6:7"
																},
																"nativeSrc": "1196:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1196:47:7"
															},
															"nativeSrc": "1196:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1196:47:7"
														},
														{
															"nativeSrc": "1252:86:7",
															"nodeType": "YulAssignment",
															"src": "1252:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1324:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1324:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1333:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1333:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1260:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1260:63:7"
																},
																"nativeSrc": "1260:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1260:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1252:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1252:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1032:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1122:9:7",
														"nodeType": "YulTypedName",
														"src": "1122:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1134:6:7",
														"nodeType": "YulTypedName",
														"src": "1134:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1145:4:7",
														"nodeType": "YulTypedName",
														"src": "1145:4:7",
														"type": ""
													}
												],
												"src": "1032:313:7"
											},
											{
												"body": {
													"nativeSrc": "1391:35:7",
													"nodeType": "YulBlock",
													"src": "1391:35:7",
													"statements": [
														{
															"nativeSrc": "1401:19:7",
															"nodeType": "YulAssignment",
															"src": "1401:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1417:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1417:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1411:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1411:5:7"
																},
																"nativeSrc": "1411:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1411:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1401:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1351:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1384:6:7",
														"nodeType": "YulTypedName",
														"src": "1384:6:7",
														"type": ""
													}
												],
												"src": "1351:75:7"
											},
											{
												"body": {
													"nativeSrc": "1521:28:7",
													"nodeType": "YulBlock",
													"src": "1521:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1541:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1531:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:7"
																},
																"nativeSrc": "1531:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1531:12:7"
															},
															"nativeSrc": "1531:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1531:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1432:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1432:117:7"
											},
											{
												"body": {
													"nativeSrc": "1644:28:7",
													"nodeType": "YulBlock",
													"src": "1644:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1661:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1661:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1664:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1664:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1654:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1654:6:7"
																},
																"nativeSrc": "1654:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1654:12:7"
															},
															"nativeSrc": "1654:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1654:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1555:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1555:117:7"
											},
											{
												"body": {
													"nativeSrc": "1723:81:7",
													"nodeType": "YulBlock",
													"src": "1723:81:7",
													"statements": [
														{
															"nativeSrc": "1733:65:7",
															"nodeType": "YulAssignment",
															"src": "1733:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1748:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1748:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1755:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1755:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1744:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1744:3:7"
																},
																"nativeSrc": "1744:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1744:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1733:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1733:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1678:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1705:5:7",
														"nodeType": "YulTypedName",
														"src": "1705:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1715:7:7",
														"nodeType": "YulTypedName",
														"src": "1715:7:7",
														"type": ""
													}
												],
												"src": "1678:126:7"
											},
											{
												"body": {
													"nativeSrc": "1855:51:7",
													"nodeType": "YulBlock",
													"src": "1855:51:7",
													"statements": [
														{
															"nativeSrc": "1865:35:7",
															"nodeType": "YulAssignment",
															"src": "1865:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1894:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1894:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1876:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1876:17:7"
																},
																"nativeSrc": "1876:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1876:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1865:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1865:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1810:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1837:5:7",
														"nodeType": "YulTypedName",
														"src": "1837:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1847:7:7",
														"nodeType": "YulTypedName",
														"src": "1847:7:7",
														"type": ""
													}
												],
												"src": "1810:96:7"
											},
											{
												"body": {
													"nativeSrc": "1955:79:7",
													"nodeType": "YulBlock",
													"src": "1955:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2012:16:7",
																"nodeType": "YulBlock",
																"src": "2012:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2021:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2021:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2024:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2024:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2014:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2014:6:7"
																			},
																			"nativeSrc": "2014:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2014:12:7"
																		},
																		"nativeSrc": "2014:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2014:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1978:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1978:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2003:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2003:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1985:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1985:17:7"
																				},
																				"nativeSrc": "1985:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1985:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1975:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1975:2:7"
																		},
																		"nativeSrc": "1975:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1975:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1968:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1968:6:7"
																},
																"nativeSrc": "1968:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1968:43:7"
															},
															"nativeSrc": "1965:63:7",
															"nodeType": "YulIf",
															"src": "1965:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1912:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1948:5:7",
														"nodeType": "YulTypedName",
														"src": "1948:5:7",
														"type": ""
													}
												],
												"src": "1912:122:7"
											},
											{
												"body": {
													"nativeSrc": "2092:87:7",
													"nodeType": "YulBlock",
													"src": "2092:87:7",
													"statements": [
														{
															"nativeSrc": "2102:29:7",
															"nodeType": "YulAssignment",
															"src": "2102:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2124:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2124:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2111:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2111:12:7"
																},
																"nativeSrc": "2111:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2111:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2102:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2102:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2167:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2167:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2140:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2140:26:7"
																},
																"nativeSrc": "2140:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2140:33:7"
															},
															"nativeSrc": "2140:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2140:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2040:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2070:6:7",
														"nodeType": "YulTypedName",
														"src": "2070:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2078:3:7",
														"nodeType": "YulTypedName",
														"src": "2078:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2086:5:7",
														"nodeType": "YulTypedName",
														"src": "2086:5:7",
														"type": ""
													}
												],
												"src": "2040:139:7"
											},
											{
												"body": {
													"nativeSrc": "2230:32:7",
													"nodeType": "YulBlock",
													"src": "2230:32:7",
													"statements": [
														{
															"nativeSrc": "2240:16:7",
															"nodeType": "YulAssignment",
															"src": "2240:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2251:5:7",
																"nodeType": "YulIdentifier",
																"src": "2251:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2240:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2240:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2185:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2212:5:7",
														"nodeType": "YulTypedName",
														"src": "2212:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2222:7:7",
														"nodeType": "YulTypedName",
														"src": "2222:7:7",
														"type": ""
													}
												],
												"src": "2185:77:7"
											},
											{
												"body": {
													"nativeSrc": "2311:79:7",
													"nodeType": "YulBlock",
													"src": "2311:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2368:16:7",
																"nodeType": "YulBlock",
																"src": "2368:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2377:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2377:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2380:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2380:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2370:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2370:6:7"
																			},
																			"nativeSrc": "2370:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2370:12:7"
																		},
																		"nativeSrc": "2370:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2370:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2334:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2334:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2359:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2359:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2341:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2341:17:7"
																				},
																				"nativeSrc": "2341:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2341:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2331:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2331:2:7"
																		},
																		"nativeSrc": "2331:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2331:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2324:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:7"
																},
																"nativeSrc": "2324:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2324:43:7"
															},
															"nativeSrc": "2321:63:7",
															"nodeType": "YulIf",
															"src": "2321:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2268:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2304:5:7",
														"nodeType": "YulTypedName",
														"src": "2304:5:7",
														"type": ""
													}
												],
												"src": "2268:122:7"
											},
											{
												"body": {
													"nativeSrc": "2448:87:7",
													"nodeType": "YulBlock",
													"src": "2448:87:7",
													"statements": [
														{
															"nativeSrc": "2458:29:7",
															"nodeType": "YulAssignment",
															"src": "2458:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2480:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2480:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2467:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2467:12:7"
																},
																"nativeSrc": "2467:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2467:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2458:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2458:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2523:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2523:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2496:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2496:26:7"
																},
																"nativeSrc": "2496:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2496:33:7"
															},
															"nativeSrc": "2496:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2496:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2396:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2426:6:7",
														"nodeType": "YulTypedName",
														"src": "2426:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2434:3:7",
														"nodeType": "YulTypedName",
														"src": "2434:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2442:5:7",
														"nodeType": "YulTypedName",
														"src": "2442:5:7",
														"type": ""
													}
												],
												"src": "2396:139:7"
											},
											{
												"body": {
													"nativeSrc": "2624:391:7",
													"nodeType": "YulBlock",
													"src": "2624:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2670:83:7",
																"nodeType": "YulBlock",
																"src": "2670:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2672:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2672:77:7"
																			},
																			"nativeSrc": "2672:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2672:79:7"
																		},
																		"nativeSrc": "2672:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2672:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2645:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2645:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2654:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2654:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2641:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2641:3:7"
																		},
																		"nativeSrc": "2641:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2641:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2666:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2666:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2637:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2637:3:7"
																},
																"nativeSrc": "2637:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2637:32:7"
															},
															"nativeSrc": "2634:119:7",
															"nodeType": "YulIf",
															"src": "2634:119:7"
														},
														{
															"nativeSrc": "2763:117:7",
															"nodeType": "YulBlock",
															"src": "2763:117:7",
															"statements": [
																{
																	"nativeSrc": "2778:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2778:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2792:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2792:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2782:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2782:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2807:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2807:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2842:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2842:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2853:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2853:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2838:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2838:3:7"
																				},
																				"nativeSrc": "2838:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2838:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2862:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2862:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2817:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2817:20:7"
																		},
																		"nativeSrc": "2817:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2817:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2807:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2807:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2890:118:7",
															"nodeType": "YulBlock",
															"src": "2890:118:7",
															"statements": [
																{
																	"nativeSrc": "2905:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2905:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2919:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2919:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2909:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2909:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2935:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2935:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2970:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2970:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2981:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2981:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2966:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2966:3:7"
																				},
																				"nativeSrc": "2966:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2966:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2990:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2990:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2945:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2945:20:7"
																		},
																		"nativeSrc": "2945:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2945:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2935:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2935:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2541:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2586:9:7",
														"nodeType": "YulTypedName",
														"src": "2586:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2597:7:7",
														"nodeType": "YulTypedName",
														"src": "2597:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2609:6:7",
														"nodeType": "YulTypedName",
														"src": "2609:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2617:6:7",
														"nodeType": "YulTypedName",
														"src": "2617:6:7",
														"type": ""
													}
												],
												"src": "2541:474:7"
											},
											{
												"body": {
													"nativeSrc": "3063:48:7",
													"nodeType": "YulBlock",
													"src": "3063:48:7",
													"statements": [
														{
															"nativeSrc": "3073:32:7",
															"nodeType": "YulAssignment",
															"src": "3073:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3098:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3098:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3091:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3091:6:7"
																		},
																		"nativeSrc": "3091:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3091:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3084:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3084:6:7"
																},
																"nativeSrc": "3084:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3084:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3073:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3073:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3021:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3045:5:7",
														"nodeType": "YulTypedName",
														"src": "3045:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3055:7:7",
														"nodeType": "YulTypedName",
														"src": "3055:7:7",
														"type": ""
													}
												],
												"src": "3021:90:7"
											},
											{
												"body": {
													"nativeSrc": "3176:50:7",
													"nodeType": "YulBlock",
													"src": "3176:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3193:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3193:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3213:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3213:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3198:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3198:14:7"
																		},
																		"nativeSrc": "3198:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3198:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3186:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3186:6:7"
																},
																"nativeSrc": "3186:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3186:34:7"
															},
															"nativeSrc": "3186:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3186:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3117:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3164:5:7",
														"nodeType": "YulTypedName",
														"src": "3164:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3171:3:7",
														"nodeType": "YulTypedName",
														"src": "3171:3:7",
														"type": ""
													}
												],
												"src": "3117:109:7"
											},
											{
												"body": {
													"nativeSrc": "3324:118:7",
													"nodeType": "YulBlock",
													"src": "3324:118:7",
													"statements": [
														{
															"nativeSrc": "3334:26:7",
															"nodeType": "YulAssignment",
															"src": "3334:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3346:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3346:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3357:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3357:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3342:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3342:3:7"
																},
																"nativeSrc": "3342:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3342:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3334:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3334:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3408:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3408:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3421:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3432:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3432:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3417:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:7"
																		},
																		"nativeSrc": "3417:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3417:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3370:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3370:37:7"
																},
																"nativeSrc": "3370:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3370:65:7"
															},
															"nativeSrc": "3370:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3370:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3232:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3296:9:7",
														"nodeType": "YulTypedName",
														"src": "3296:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3308:6:7",
														"nodeType": "YulTypedName",
														"src": "3308:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3319:4:7",
														"nodeType": "YulTypedName",
														"src": "3319:4:7",
														"type": ""
													}
												],
												"src": "3232:210:7"
											},
											{
												"body": {
													"nativeSrc": "3513:53:7",
													"nodeType": "YulBlock",
													"src": "3513:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3530:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3530:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3553:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3553:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3535:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3535:17:7"
																		},
																		"nativeSrc": "3535:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3535:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3523:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:7"
																},
																"nativeSrc": "3523:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3523:37:7"
															},
															"nativeSrc": "3523:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3523:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3448:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3501:5:7",
														"nodeType": "YulTypedName",
														"src": "3501:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3508:3:7",
														"nodeType": "YulTypedName",
														"src": "3508:3:7",
														"type": ""
													}
												],
												"src": "3448:118:7"
											},
											{
												"body": {
													"nativeSrc": "3670:124:7",
													"nodeType": "YulBlock",
													"src": "3670:124:7",
													"statements": [
														{
															"nativeSrc": "3680:26:7",
															"nodeType": "YulAssignment",
															"src": "3680:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3692:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3692:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3703:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3703:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3688:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3688:3:7"
																},
																"nativeSrc": "3688:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3688:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3680:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3680:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3760:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3760:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3773:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3773:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3784:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3784:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3769:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3769:3:7"
																		},
																		"nativeSrc": "3769:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3769:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3716:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3716:43:7"
																},
																"nativeSrc": "3716:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3716:71:7"
															},
															"nativeSrc": "3716:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3716:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3572:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3642:9:7",
														"nodeType": "YulTypedName",
														"src": "3642:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3654:6:7",
														"nodeType": "YulTypedName",
														"src": "3654:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3665:4:7",
														"nodeType": "YulTypedName",
														"src": "3665:4:7",
														"type": ""
													}
												],
												"src": "3572:222:7"
											},
											{
												"body": {
													"nativeSrc": "3900:519:7",
													"nodeType": "YulBlock",
													"src": "3900:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3946:83:7",
																"nodeType": "YulBlock",
																"src": "3946:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3948:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3948:77:7"
																			},
																			"nativeSrc": "3948:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3948:79:7"
																		},
																		"nativeSrc": "3948:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3948:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3921:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3921:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3930:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3930:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3917:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3917:3:7"
																		},
																		"nativeSrc": "3917:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3917:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3942:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3942:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3913:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3913:3:7"
																},
																"nativeSrc": "3913:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3913:32:7"
															},
															"nativeSrc": "3910:119:7",
															"nodeType": "YulIf",
															"src": "3910:119:7"
														},
														{
															"nativeSrc": "4039:117:7",
															"nodeType": "YulBlock",
															"src": "4039:117:7",
															"statements": [
																{
																	"nativeSrc": "4054:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4054:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4068:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4068:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4058:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4058:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4083:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4083:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4118:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4118:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4129:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4129:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4114:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4114:3:7"
																				},
																				"nativeSrc": "4114:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4114:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4138:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4138:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4093:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4093:20:7"
																		},
																		"nativeSrc": "4093:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4083:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4083:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4166:118:7",
															"nodeType": "YulBlock",
															"src": "4166:118:7",
															"statements": [
																{
																	"nativeSrc": "4181:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4181:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4195:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4195:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4185:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4185:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4211:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4211:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4246:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4246:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4257:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4257:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4242:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4242:3:7"
																				},
																				"nativeSrc": "4242:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4242:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4266:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4266:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4221:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4221:20:7"
																		},
																		"nativeSrc": "4221:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4221:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4211:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4211:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4294:118:7",
															"nodeType": "YulBlock",
															"src": "4294:118:7",
															"statements": [
																{
																	"nativeSrc": "4309:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4309:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4323:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4323:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4313:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4313:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4339:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4339:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4374:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4374:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4385:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4385:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4370:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4370:3:7"
																				},
																				"nativeSrc": "4370:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4370:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4394:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4394:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4349:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4349:20:7"
																		},
																		"nativeSrc": "4349:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4339:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4339:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3800:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3854:9:7",
														"nodeType": "YulTypedName",
														"src": "3854:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3865:7:7",
														"nodeType": "YulTypedName",
														"src": "3865:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3877:6:7",
														"nodeType": "YulTypedName",
														"src": "3877:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3885:6:7",
														"nodeType": "YulTypedName",
														"src": "3885:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3893:6:7",
														"nodeType": "YulTypedName",
														"src": "3893:6:7",
														"type": ""
													}
												],
												"src": "3800:619:7"
											},
											{
												"body": {
													"nativeSrc": "4468:43:7",
													"nodeType": "YulBlock",
													"src": "4468:43:7",
													"statements": [
														{
															"nativeSrc": "4478:27:7",
															"nodeType": "YulAssignment",
															"src": "4478:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4493:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4500:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4500:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4489:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4489:3:7"
																},
																"nativeSrc": "4489:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4489:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4478:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4478:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4425:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4450:5:7",
														"nodeType": "YulTypedName",
														"src": "4450:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4460:7:7",
														"nodeType": "YulTypedName",
														"src": "4460:7:7",
														"type": ""
													}
												],
												"src": "4425:86:7"
											},
											{
												"body": {
													"nativeSrc": "4578:51:7",
													"nodeType": "YulBlock",
													"src": "4578:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4595:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4595:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4616:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4616:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4600:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4600:15:7"
																		},
																		"nativeSrc": "4600:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4600:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4588:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4588:6:7"
																},
																"nativeSrc": "4588:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4588:35:7"
															},
															"nativeSrc": "4588:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4588:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4517:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4566:5:7",
														"nodeType": "YulTypedName",
														"src": "4566:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4573:3:7",
														"nodeType": "YulTypedName",
														"src": "4573:3:7",
														"type": ""
													}
												],
												"src": "4517:112:7"
											},
											{
												"body": {
													"nativeSrc": "4729:120:7",
													"nodeType": "YulBlock",
													"src": "4729:120:7",
													"statements": [
														{
															"nativeSrc": "4739:26:7",
															"nodeType": "YulAssignment",
															"src": "4739:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4751:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4751:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4762:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4762:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4747:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4747:3:7"
																},
																"nativeSrc": "4747:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4747:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4739:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4739:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4815:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4815:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4828:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4828:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4839:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4839:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4824:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4824:3:7"
																		},
																		"nativeSrc": "4824:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4824:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4775:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "4775:39:7"
																},
																"nativeSrc": "4775:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4775:67:7"
															},
															"nativeSrc": "4775:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4775:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4635:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4701:9:7",
														"nodeType": "YulTypedName",
														"src": "4701:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4713:6:7",
														"nodeType": "YulTypedName",
														"src": "4713:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4724:4:7",
														"nodeType": "YulTypedName",
														"src": "4724:4:7",
														"type": ""
													}
												],
												"src": "4635:214:7"
											},
											{
												"body": {
													"nativeSrc": "4921:263:7",
													"nodeType": "YulBlock",
													"src": "4921:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4967:83:7",
																"nodeType": "YulBlock",
																"src": "4967:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4969:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4969:77:7"
																			},
																			"nativeSrc": "4969:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4969:79:7"
																		},
																		"nativeSrc": "4969:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4969:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4942:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4942:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4951:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4951:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4938:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4938:3:7"
																		},
																		"nativeSrc": "4938:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4938:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4963:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4963:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4934:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4934:3:7"
																},
																"nativeSrc": "4934:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4934:32:7"
															},
															"nativeSrc": "4931:119:7",
															"nodeType": "YulIf",
															"src": "4931:119:7"
														},
														{
															"nativeSrc": "5060:117:7",
															"nodeType": "YulBlock",
															"src": "5060:117:7",
															"statements": [
																{
																	"nativeSrc": "5075:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5075:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5089:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5089:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5079:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5079:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5104:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5104:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5139:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5139:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5150:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5150:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5135:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5135:3:7"
																				},
																				"nativeSrc": "5135:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5135:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5159:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5159:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5114:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5114:20:7"
																		},
																		"nativeSrc": "5114:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5114:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5104:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5104:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4855:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4891:9:7",
														"nodeType": "YulTypedName",
														"src": "4891:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4902:7:7",
														"nodeType": "YulTypedName",
														"src": "4902:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4914:6:7",
														"nodeType": "YulTypedName",
														"src": "4914:6:7",
														"type": ""
													}
												],
												"src": "4855:329:7"
											},
											{
												"body": {
													"nativeSrc": "5255:53:7",
													"nodeType": "YulBlock",
													"src": "5255:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5272:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5272:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5295:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5295:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5277:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5277:17:7"
																		},
																		"nativeSrc": "5277:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5277:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5265:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5265:6:7"
																},
																"nativeSrc": "5265:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5265:37:7"
															},
															"nativeSrc": "5265:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5265:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5190:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5243:5:7",
														"nodeType": "YulTypedName",
														"src": "5243:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5250:3:7",
														"nodeType": "YulTypedName",
														"src": "5250:3:7",
														"type": ""
													}
												],
												"src": "5190:118:7"
											},
											{
												"body": {
													"nativeSrc": "5412:124:7",
													"nodeType": "YulBlock",
													"src": "5412:124:7",
													"statements": [
														{
															"nativeSrc": "5422:26:7",
															"nodeType": "YulAssignment",
															"src": "5422:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5434:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5434:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5445:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5445:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5430:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5430:3:7"
																},
																"nativeSrc": "5430:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5430:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5422:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5422:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5502:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5502:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5515:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5515:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5526:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5526:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5511:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5511:3:7"
																		},
																		"nativeSrc": "5511:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5511:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5458:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5458:43:7"
																},
																"nativeSrc": "5458:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5458:71:7"
															},
															"nativeSrc": "5458:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5458:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5314:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5384:9:7",
														"nodeType": "YulTypedName",
														"src": "5384:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5396:6:7",
														"nodeType": "YulTypedName",
														"src": "5396:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5407:4:7",
														"nodeType": "YulTypedName",
														"src": "5407:4:7",
														"type": ""
													}
												],
												"src": "5314:222:7"
											},
											{
												"body": {
													"nativeSrc": "5625:391:7",
													"nodeType": "YulBlock",
													"src": "5625:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5671:83:7",
																"nodeType": "YulBlock",
																"src": "5671:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5673:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5673:77:7"
																			},
																			"nativeSrc": "5673:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5673:79:7"
																		},
																		"nativeSrc": "5673:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5673:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5646:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5646:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5655:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5655:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:7"
																		},
																		"nativeSrc": "5642:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5667:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5667:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5638:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5638:3:7"
																},
																"nativeSrc": "5638:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5638:32:7"
															},
															"nativeSrc": "5635:119:7",
															"nodeType": "YulIf",
															"src": "5635:119:7"
														},
														{
															"nativeSrc": "5764:117:7",
															"nodeType": "YulBlock",
															"src": "5764:117:7",
															"statements": [
																{
																	"nativeSrc": "5779:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5779:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5793:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5793:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5783:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5783:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5808:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5808:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5843:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5843:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5854:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5854:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5839:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5839:3:7"
																				},
																				"nativeSrc": "5839:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5839:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5863:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5863:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5818:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5818:20:7"
																		},
																		"nativeSrc": "5818:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5818:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5808:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5808:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5891:118:7",
															"nodeType": "YulBlock",
															"src": "5891:118:7",
															"statements": [
																{
																	"nativeSrc": "5906:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5906:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5920:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5920:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5910:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5910:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5936:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5936:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5971:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5971:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5982:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5982:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5967:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5967:3:7"
																				},
																				"nativeSrc": "5967:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5967:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5991:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5991:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5946:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5946:20:7"
																		},
																		"nativeSrc": "5946:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5946:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5936:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5936:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5542:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5587:9:7",
														"nodeType": "YulTypedName",
														"src": "5587:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5598:7:7",
														"nodeType": "YulTypedName",
														"src": "5598:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5610:6:7",
														"nodeType": "YulTypedName",
														"src": "5610:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5618:6:7",
														"nodeType": "YulTypedName",
														"src": "5618:6:7",
														"type": ""
													}
												],
												"src": "5542:474:7"
											},
											{
												"body": {
													"nativeSrc": "6050:152:7",
													"nodeType": "YulBlock",
													"src": "6050:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6067:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6067:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6070:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6070:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6060:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6060:6:7"
																},
																"nativeSrc": "6060:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6060:88:7"
															},
															"nativeSrc": "6060:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6060:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6164:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6164:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6167:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6167:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6157:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6157:6:7"
																},
																"nativeSrc": "6157:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6157:15:7"
															},
															"nativeSrc": "6157:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6157:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6188:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6188:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6191:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6191:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6181:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6181:6:7"
																},
																"nativeSrc": "6181:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6181:15:7"
															},
															"nativeSrc": "6181:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6181:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6022:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6022:180:7"
											},
											{
												"body": {
													"nativeSrc": "6259:269:7",
													"nodeType": "YulBlock",
													"src": "6259:269:7",
													"statements": [
														{
															"nativeSrc": "6269:22:7",
															"nodeType": "YulAssignment",
															"src": "6269:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6283:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6283:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6289:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6289:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6279:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6279:3:7"
																},
																"nativeSrc": "6279:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6279:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6269:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6269:6:7"
																}
															]
														},
														{
															"nativeSrc": "6300:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6300:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6330:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6330:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6336:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6336:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6326:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6326:3:7"
																},
																"nativeSrc": "6326:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6326:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6304:18:7",
																	"nodeType": "YulTypedName",
																	"src": "6304:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6377:51:7",
																"nodeType": "YulBlock",
																"src": "6377:51:7",
																"statements": [
																	{
																		"nativeSrc": "6391:27:7",
																		"nodeType": "YulAssignment",
																		"src": "6391:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6405:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6405:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6413:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6413:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6401:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6401:3:7"
																			},
																			"nativeSrc": "6401:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6401:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6391:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6391:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6357:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6357:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6350:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6350:6:7"
																},
																"nativeSrc": "6350:26:7",
																"nodeType": "YulFunctionCall",
																"src": "6350:26:7"
															},
															"nativeSrc": "6347:81:7",
															"nodeType": "YulIf",
															"src": "6347:81:7"
														},
														{
															"body": {
																"nativeSrc": "6480:42:7",
																"nodeType": "YulBlock",
																"src": "6480:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6494:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6494:16:7"
																			},
																			"nativeSrc": "6494:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6494:18:7"
																		},
																		"nativeSrc": "6494:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6494:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6444:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6444:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6467:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6467:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6475:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6475:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6464:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6464:2:7"
																		},
																		"nativeSrc": "6464:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6464:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6441:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6441:2:7"
																},
																"nativeSrc": "6441:38:7",
																"nodeType": "YulFunctionCall",
																"src": "6441:38:7"
															},
															"nativeSrc": "6438:84:7",
															"nodeType": "YulIf",
															"src": "6438:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6208:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6243:4:7",
														"nodeType": "YulTypedName",
														"src": "6243:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6252:6:7",
														"nodeType": "YulTypedName",
														"src": "6252:6:7",
														"type": ""
													}
												],
												"src": "6208:320:7"
											},
											{
												"body": {
													"nativeSrc": "6688:288:7",
													"nodeType": "YulBlock",
													"src": "6688:288:7",
													"statements": [
														{
															"nativeSrc": "6698:26:7",
															"nodeType": "YulAssignment",
															"src": "6698:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6710:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6710:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6721:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6721:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6706:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6706:3:7"
																},
																"nativeSrc": "6706:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6706:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6698:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6698:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6778:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6778:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6791:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6791:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6802:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6802:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6787:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6787:3:7"
																		},
																		"nativeSrc": "6787:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6787:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6734:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6734:43:7"
																},
																"nativeSrc": "6734:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6734:71:7"
															},
															"nativeSrc": "6734:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6734:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6859:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6859:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6872:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6872:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6883:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6883:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6868:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6868:3:7"
																		},
																		"nativeSrc": "6868:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6868:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6815:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6815:43:7"
																},
																"nativeSrc": "6815:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6815:72:7"
															},
															"nativeSrc": "6815:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6815:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6941:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6941:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6954:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6954:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6965:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6965:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6950:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6950:3:7"
																		},
																		"nativeSrc": "6950:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6950:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6897:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6897:43:7"
																},
																"nativeSrc": "6897:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6897:72:7"
															},
															"nativeSrc": "6897:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6897:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6534:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6644:9:7",
														"nodeType": "YulTypedName",
														"src": "6644:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6656:6:7",
														"nodeType": "YulTypedName",
														"src": "6656:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6664:6:7",
														"nodeType": "YulTypedName",
														"src": "6664:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6672:6:7",
														"nodeType": "YulTypedName",
														"src": "6672:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6683:4:7",
														"nodeType": "YulTypedName",
														"src": "6683:4:7",
														"type": ""
													}
												],
												"src": "6534:442:7"
											},
											{
												"body": {
													"nativeSrc": "7010:152:7",
													"nodeType": "YulBlock",
													"src": "7010:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7027:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7027:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7030:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7030:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7020:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7020:6:7"
																},
																"nativeSrc": "7020:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7020:88:7"
															},
															"nativeSrc": "7020:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7020:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7124:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7124:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7127:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7127:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7117:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7117:6:7"
																},
																"nativeSrc": "7117:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7117:15:7"
															},
															"nativeSrc": "7117:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7117:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7148:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7148:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7151:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7151:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7141:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7141:6:7"
																},
																"nativeSrc": "7141:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7141:15:7"
															},
															"nativeSrc": "7141:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7141:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6982:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6982:180:7"
											},
											{
												"body": {
													"nativeSrc": "7212:147:7",
													"nodeType": "YulBlock",
													"src": "7212:147:7",
													"statements": [
														{
															"nativeSrc": "7222:25:7",
															"nodeType": "YulAssignment",
															"src": "7222:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7245:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7245:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7227:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7227:17:7"
																},
																"nativeSrc": "7227:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7227:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7222:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7222:1:7"
																}
															]
														},
														{
															"nativeSrc": "7256:25:7",
															"nodeType": "YulAssignment",
															"src": "7256:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7279:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7279:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7261:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7261:17:7"
																},
																"nativeSrc": "7261:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7261:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7256:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7256:1:7"
																}
															]
														},
														{
															"nativeSrc": "7290:16:7",
															"nodeType": "YulAssignment",
															"src": "7290:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7301:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7301:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7304:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7304:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7297:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7297:3:7"
																},
																"nativeSrc": "7297:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7297:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7290:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7290:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7330:22:7",
																"nodeType": "YulBlock",
																"src": "7330:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7332:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7332:16:7"
																			},
																			"nativeSrc": "7332:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7332:18:7"
																		},
																		"nativeSrc": "7332:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7332:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7322:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7322:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7325:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7325:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7319:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7319:2:7"
																},
																"nativeSrc": "7319:10:7",
																"nodeType": "YulFunctionCall",
																"src": "7319:10:7"
															},
															"nativeSrc": "7316:36:7",
															"nodeType": "YulIf",
															"src": "7316:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7168:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7199:1:7",
														"nodeType": "YulTypedName",
														"src": "7199:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7202:1:7",
														"nodeType": "YulTypedName",
														"src": "7202:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7208:3:7",
														"nodeType": "YulTypedName",
														"src": "7208:3:7",
														"type": ""
													}
												],
												"src": "7168:191:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b4114610202578063a9059cbb14610220578063dd62ed3e14610250578063f2fde38b14610280576100cf565b806370a08231146101aa578063715018a6146101da5780638da5cb5b146101e4576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806340c10f191461018e575b600080fd5b6100dc61029c565b6040516100e99190610dee565b60405180910390f35b61010c60048036038101906101079190610ea9565b61032e565b6040516101199190610f04565b60405180910390f35b61012a610351565b6040516101379190610f2e565b60405180910390f35b61015a60048036038101906101559190610f49565b61035b565b6040516101679190610f04565b60405180910390f35b61017861038a565b6040516101859190610fb8565b60405180910390f35b6101a860048036038101906101a39190610ea9565b610393565b005b6101c460048036038101906101bf9190610fd3565b6103a9565b6040516101d19190610f2e565b60405180910390f35b6101e26103f1565b005b6101ec610405565b6040516101f9919061100f565b60405180910390f35b61020a61042f565b6040516102179190610dee565b60405180910390f35b61023a60048036038101906102359190610ea9565b6104c1565b6040516102479190610f04565b60405180910390f35b61026a6004803603810190610265919061102a565b6104e4565b6040516102779190610f2e565b60405180910390f35b61029a60048036038101906102959190610fd3565b61056b565b005b6060600380546102ab90611099565b80601f01602080910402602001604051908101604052809291908181526020018280546102d790611099565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905090565b6000806103396105f1565b90506103468185856105f9565b600191505092915050565b6000600254905090565b6000806103666105f1565b905061037385828561060b565b61037e85858561069f565b60019150509392505050565b60006012905090565b61039b610793565b6103a5828261081a565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6103f9610793565b610403600061089c565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461043e90611099565b80601f016020809104026020016040519081016040528092919081815260200182805461046a90611099565b80156104b75780601f1061048c576101008083540402835291602001916104b7565b820191906000526020600020905b81548152906001019060200180831161049a57829003601f168201915b5050505050905090565b6000806104cc6105f1565b90506104d981858561069f565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610573610793565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105e55760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105dc919061100f565b60405180910390fd5b6105ee8161089c565b50565b600033905090565b6106068383836001610962565b505050565b600061061784846104e4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106995781811015610689578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610680939291906110ca565b60405180910390fd5b61069884848484036000610962565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107115760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610708919061100f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107835760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161077a919061100f565b60405180910390fd5b61078e838383610b39565b505050565b61079b6105f1565b73ffffffffffffffffffffffffffffffffffffffff166107b9610405565b73ffffffffffffffffffffffffffffffffffffffff1614610818576107dc6105f1565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161080f919061100f565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361088c5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610883919061100f565b60405180910390fd5b61089860008383610b39565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109d45760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109cb919061100f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a465760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a3d919061100f565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b33578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b2a9190610f2e565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b8b578060026000828254610b7f9190611130565b92505081905550610c5e565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c17578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c0e939291906110ca565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ca75780600260008282540392505081905550610cf4565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d519190610f2e565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d98578082015181840152602081019050610d7d565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dc082610d5e565b610dca8185610d69565b9350610dda818560208601610d7a565b610de381610da4565b840191505092915050565b60006020820190508181036000830152610e088184610db5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4082610e15565b9050919050565b610e5081610e35565b8114610e5b57600080fd5b50565b600081359050610e6d81610e47565b92915050565b6000819050919050565b610e8681610e73565b8114610e9157600080fd5b50565b600081359050610ea381610e7d565b92915050565b60008060408385031215610ec057610ebf610e10565b5b6000610ece85828601610e5e565b9250506020610edf85828601610e94565b9150509250929050565b60008115159050919050565b610efe81610ee9565b82525050565b6000602082019050610f196000830184610ef5565b92915050565b610f2881610e73565b82525050565b6000602082019050610f436000830184610f1f565b92915050565b600080600060608486031215610f6257610f61610e10565b5b6000610f7086828701610e5e565b9350506020610f8186828701610e5e565b9250506040610f9286828701610e94565b9150509250925092565b600060ff82169050919050565b610fb281610f9c565b82525050565b6000602082019050610fcd6000830184610fa9565b92915050565b600060208284031215610fe957610fe8610e10565b5b6000610ff784828501610e5e565b91505092915050565b61100981610e35565b82525050565b60006020820190506110246000830184611000565b92915050565b6000806040838503121561104157611040610e10565b5b600061104f85828601610e5e565b925050602061106085828601610e5e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110b157607f821691505b6020821081036110c4576110c361106a565b5b50919050565b60006060820190506110df6000830186611000565b6110ec6020830185610f1f565b6110f96040830184610f1f565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061113b82610e73565b915061114683610e73565b925082820190508082111561115e5761115d611101565b5b9291505056fea26469706673582212200ac27d7aa40f7252022fd29df9d607477e5620449fb1f630a2963dbe7ac4c34d64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x280 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E4 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xF49 JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x3F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EC PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xDEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0xF04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D7 SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x324 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x324 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x307 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x339 PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x346 DUP2 DUP6 DUP6 PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x366 PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x373 DUP6 DUP3 DUP6 PUSH2 0x60B JUMP JUMPDEST PUSH2 0x37E DUP6 DUP6 DUP6 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x39B PUSH2 0x793 JUMP JUMPDEST PUSH2 0x3A5 DUP3 DUP3 PUSH2 0x81A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x403 PUSH1 0x0 PUSH2 0x89C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x43E SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x46A SWAP1 PUSH2 0x1099 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4CC PUSH2 0x5F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D9 DUP2 DUP6 DUP6 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x573 PUSH2 0x793 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5E5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5EE DUP2 PUSH2 0x89C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x606 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x962 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x617 DUP5 DUP5 PUSH2 0x4E4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x699 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x689 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x680 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x698 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x962 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x711 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x708 SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x783 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77A SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78E DUP4 DUP4 DUP4 PUSH2 0xB39 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x79B PUSH2 0x5F1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7B9 PUSH2 0x405 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x818 JUMPI PUSH2 0x7DC PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80F SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x88C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x898 PUSH1 0x0 DUP4 DUP4 PUSH2 0xB39 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CB SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA46 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3D SWAP2 SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB33 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB2A SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB8B JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB7F SWAP2 SWAP1 PUSH2 0x1130 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC5E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC17 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC0E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA7 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCF4 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD51 SWAP2 SWAP1 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD98 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC0 DUP3 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0xDCA DUP2 DUP6 PUSH2 0xD69 JUMP JUMPDEST SWAP4 POP PUSH2 0xDDA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD7A JUMP JUMPDEST PUSH2 0xDE3 DUP2 PUSH2 0xDA4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE08 DUP2 DUP5 PUSH2 0xDB5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE40 DUP3 PUSH2 0xE15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE50 DUP2 PUSH2 0xE35 JUMP JUMPDEST DUP2 EQ PUSH2 0xE5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE6D DUP2 PUSH2 0xE47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE86 DUP2 PUSH2 0xE73 JUMP JUMPDEST DUP2 EQ PUSH2 0xE91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEA3 DUP2 PUSH2 0xE7D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC0 JUMPI PUSH2 0xEBF PUSH2 0xE10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xECE DUP6 DUP3 DUP7 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEDF DUP6 DUP3 DUP7 ADD PUSH2 0xE94 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEFE DUP2 PUSH2 0xEE9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF19 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF28 DUP2 PUSH2 0xE73 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF43 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF62 JUMPI PUSH2 0xF61 PUSH2 0xE10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF70 DUP7 DUP3 DUP8 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF81 DUP7 DUP3 DUP8 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF92 DUP7 DUP3 DUP8 ADD PUSH2 0xE94 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFB2 DUP2 PUSH2 0xF9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFCD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFE9 JUMPI PUSH2 0xFE8 PUSH2 0xE10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF7 DUP5 DUP3 DUP6 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1009 DUP2 PUSH2 0xE35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1024 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1000 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1041 JUMPI PUSH2 0x1040 PUSH2 0xE10 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x104F DUP6 DUP3 DUP7 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1060 DUP6 DUP3 DUP7 ADD PUSH2 0xE5E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x10B1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10C4 JUMPI PUSH2 0x10C3 PUSH2 0x106A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10DF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1000 JUMP JUMPDEST PUSH2 0x10EC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF1F JUMP JUMPDEST PUSH2 0x10F9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF1F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x113B DUP3 PUSH2 0xE73 JUMP JUMPDEST SWAP2 POP PUSH2 0x1146 DUP4 PUSH2 0xE73 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x115E JUMPI PUSH2 0x115D PUSH2 0x1101 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP 0xC2 PUSH30 0x7AA40F7252022FD29DF9D607477E5620449FB1F630A2963DBE7AC4C34D64 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
							"sourceMap": "224:372:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;498:95:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:2;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;498:95:6:-;1531:13:0;:11;:13::i;:::-;568:17:6::1;574:2;578:6;568:5;:17::i;:::-;498:95:::0;;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3551:140::-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9701:432:2:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1432:117::-;1541:1;1538;1531:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:118::-;3535:24;3553:5;3535:24;:::i;:::-;3530:3;3523:37;3448:118;;:::o;3572:222::-;3665:4;3703:2;3692:9;3688:18;3680:26;;3716:71;3784:1;3773:9;3769:17;3760:6;3716:71;:::i;:::-;3572:222;;;;:::o;3800:619::-;3877:6;3885;3893;3942:2;3930:9;3921:7;3917:23;3913:32;3910:119;;;3948:79;;:::i;:::-;3910:119;4068:1;4093:53;4138:7;4129:6;4118:9;4114:22;4093:53;:::i;:::-;4083:63;;4039:117;4195:2;4221:53;4266:7;4257:6;4246:9;4242:22;4221:53;:::i;:::-;4211:63;;4166:118;4323:2;4349:53;4394:7;4385:6;4374:9;4370:22;4349:53;:::i;:::-;4339:63;;4294:118;3800:619;;;;;:::o;4425:86::-;4460:7;4500:4;4493:5;4489:16;4478:27;;4425:86;;;:::o;4517:112::-;4600:22;4616:5;4600:22;:::i;:::-;4595:3;4588:35;4517:112;;:::o;4635:214::-;4724:4;4762:2;4751:9;4747:18;4739:26;;4775:67;4839:1;4828:9;4824:17;4815:6;4775:67;:::i;:::-;4635:214;;;;:::o;4855:329::-;4914:6;4963:2;4951:9;4942:7;4938:23;4934:32;4931:119;;;4969:79;;:::i;:::-;4931:119;5089:1;5114:53;5159:7;5150:6;5139:9;5135:22;5114:53;:::i;:::-;5104:63;;5060:117;4855:329;;;;:::o;5190:118::-;5277:24;5295:5;5277:24;:::i;:::-;5272:3;5265:37;5190:118;;:::o;5314:222::-;5407:4;5445:2;5434:9;5430:18;5422:26;;5458:71;5526:1;5515:9;5511:17;5502:6;5458:71;:::i;:::-;5314:222;;;;:::o;5542:474::-;5610:6;5618;5667:2;5655:9;5646:7;5642:23;5638:32;5635:119;;;5673:79;;:::i;:::-;5635:119;5793:1;5818:53;5863:7;5854:6;5843:9;5839:22;5818:53;:::i;:::-;5808:63;;5764:117;5920:2;5946:53;5991:7;5982:6;5971:9;5967:22;5946:53;:::i;:::-;5936:63;;5891:118;5542:474;;;;;:::o;6022:180::-;6070:77;6067:1;6060:88;6167:4;6164:1;6157:15;6191:4;6188:1;6181:15;6208:320;6252:6;6289:1;6283:4;6279:12;6269:22;;6336:1;6330:4;6326:12;6357:18;6347:81;;6413:4;6405:6;6401:17;6391:27;;6347:81;6475:2;6467:6;6464:14;6444:18;6441:38;6438:84;;6494:18;;:::i;:::-;6438:84;6259:269;6208:320;;;:::o;6534:442::-;6683:4;6721:2;6710:9;6706:18;6698:26;;6734:71;6802:1;6791:9;6787:17;6778:6;6734:71;:::i;:::-;6815:72;6883:2;6872:9;6868:18;6859:6;6815:72;:::i;:::-;6897;6965:2;6954:9;6950:18;6941:6;6897:72;:::i;:::-;6534:442;;;;;;:::o;6982:180::-;7030:77;7027:1;7020:88;7127:4;7124:1;7117:15;7151:4;7148:1;7141:15;7168:191;7208:3;7227:20;7245:1;7227:20;:::i;:::-;7222:25;;7261:20;7279:1;7261:20;:::i;:::-;7256:25;;7304:1;7301;7297:9;7290:16;;7325:3;7322:1;7319:10;7316:36;;;7332:18;;:::i;:::-;7316:36;7168:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "901200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "964",
								"decimals()": "432",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "689",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "582",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 596,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 224,
									"end": 596,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 596,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 264,
									"end": 492,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 492,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 264,
									"end": 492,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 264,
									"end": 492,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 264,
									"end": 492,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 264,
									"end": 492,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 264,
									"end": 492,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 264,
									"end": 492,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 429,
									"end": 441,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 407,
									"end": 411,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 413,
									"end": 419,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 454,
									"end": 484,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 460,
									"end": 470,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 472,
									"end": 483,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 454,
									"end": 459,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 454,
									"end": 459,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 454,
									"end": 459,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 454,
									"end": 484,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 454,
									"end": 484,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 454,
									"end": 484,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 454,
									"end": 484,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 454,
									"end": 484,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 264,
									"end": 492,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 224,
									"end": 596,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 224,
									"end": 596,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 962,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 845,
									"end": 962,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 952,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 944,
									"end": 956,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1075,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1067,
									"end": 1079,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1132,
									"end": 1138,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1185,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1179,
									"end": 1186,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1174,
									"end": 1176,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1167,
									"end": 1172,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1163,
									"end": 1177,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1159,
									"end": 1187,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1247,
									"end": 1324,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1244,
									"end": 1245,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1237,
									"end": 1325,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1344,
									"end": 1348,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1341,
									"end": 1342,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1334,
									"end": 1349,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1368,
									"end": 1372,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1365,
									"end": 1366,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1373,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 1490,
									"end": 1494,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1468,
									"end": 1495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1460,
									"end": 1466,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1598,
									"end": 1604,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1586,
									"end": 1596,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1583,
									"end": 1605,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1562,
									"end": 1580,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1550,
									"end": 1560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1547,
									"end": 1581,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1544,
									"end": 1606,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1609,
									"end": 1627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1649,
									"end": 1659,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1645,
									"end": 1647,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1638,
									"end": 1660,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1428,
									"end": 1666,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1385,
									"end": 1666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1706,
									"end": 1712,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1733,
									"end": 1753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 1790,
									"end": 1794,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1782,
									"end": 1788,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1762,
									"end": 1795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1869,
									"end": 1873,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1959,
									"end": 1977,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1951,
									"end": 1957,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1948,
									"end": 1978,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1981,
									"end": 1999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 2041,
									"end": 2047,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 2019,
									"end": 2048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2011,
									"end": 2048,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2011,
									"end": 2048,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2097,
									"end": 2101,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2093,
									"end": 2108,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2085,
									"end": 2108,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2085,
									"end": 2108,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2369,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2121,
									"end": 2369,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2203,
									"end": 2204,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2213,
									"end": 2326,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 2213,
									"end": 2326,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2227,
									"end": 2233,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2224,
									"end": 2225,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2234,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2326,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2326,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 2213,
									"end": 2326,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2312,
									"end": 2313,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2307,
									"end": 2310,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2303,
									"end": 2314,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2297,
									"end": 2315,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2293,
									"end": 2294,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2288,
									"end": 2291,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2284,
									"end": 2295,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2277,
									"end": 2316,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2249,
									"end": 2251,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2246,
									"end": 2247,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2242,
									"end": 2252,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2237,
									"end": 2252,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2237,
									"end": 2252,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2326,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 2213,
									"end": 2326,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2213,
									"end": 2326,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 2213,
									"end": 2326,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2360,
									"end": 2361,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2351,
									"end": 2357,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2346,
									"end": 2349,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2342,
									"end": 2358,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2335,
									"end": 2362,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2183,
									"end": 2369,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2369,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2369,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2369,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2369,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2375,
									"end": 2809,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2375,
									"end": 2809,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2464,
									"end": 2469,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2489,
									"end": 2555,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 2505,
									"end": 2554,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 2547,
									"end": 2553,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2505,
									"end": 2554,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2505,
									"end": 2554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2505,
									"end": 2554,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 2505,
									"end": 2554,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2489,
									"end": 2555,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2489,
									"end": 2555,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2489,
									"end": 2555,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 2489,
									"end": 2555,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2480,
									"end": 2555,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2480,
									"end": 2555,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2578,
									"end": 2584,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2571,
									"end": 2576,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2564,
									"end": 2585,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2616,
									"end": 2620,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2609,
									"end": 2614,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2605,
									"end": 2621,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2654,
									"end": 2657,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2645,
									"end": 2651,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2640,
									"end": 2643,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2636,
									"end": 2652,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2658,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2630,
									"end": 2742,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2630,
									"end": 2742,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 2630,
									"end": 2742,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2661,
									"end": 2740,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 2661,
									"end": 2740,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2661,
									"end": 2740,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2661,
									"end": 2740,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 2661,
									"end": 2740,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2630,
									"end": 2742,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 2630,
									"end": 2742,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2751,
									"end": 2803,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 2796,
									"end": 2802,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2791,
									"end": 2794,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2786,
									"end": 2789,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2751,
									"end": 2803,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2751,
									"end": 2803,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2751,
									"end": 2803,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 2751,
									"end": 2803,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2470,
									"end": 2809,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2375,
									"end": 2809,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2375,
									"end": 2809,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2375,
									"end": 2809,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2375,
									"end": 2809,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2375,
									"end": 2809,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2375,
									"end": 2809,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2829,
									"end": 3184,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2829,
									"end": 3184,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2901,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2945,
									"end": 2948,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2938,
									"end": 2942,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2930,
									"end": 2936,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2926,
									"end": 2943,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3034,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 2912,
									"end": 3034,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2953,
									"end": 3032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 2953,
									"end": 3032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 2953,
									"end": 3032,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2953,
									"end": 3032,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 2953,
									"end": 3032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3034,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 2912,
									"end": 3034,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3063,
									"end": 3069,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3057,
									"end": 3070,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3088,
									"end": 3178,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3174,
									"end": 3177,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3166,
									"end": 3172,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3159,
									"end": 3163,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3151,
									"end": 3157,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3147,
									"end": 3164,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3088,
									"end": 3178,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 3088,
									"end": 3178,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3088,
									"end": 3178,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3088,
									"end": 3178,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3079,
									"end": 3178,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3079,
									"end": 3178,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2902,
									"end": 3184,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2829,
									"end": 3184,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2829,
									"end": 3184,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2829,
									"end": 3184,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2829,
									"end": 3184,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2829,
									"end": 3184,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3190,
									"end": 3267,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 3190,
									"end": 3267,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3227,
									"end": 3234,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3256,
									"end": 3261,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3245,
									"end": 3261,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3245,
									"end": 3261,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3190,
									"end": 3267,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3190,
									"end": 3267,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3190,
									"end": 3267,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3190,
									"end": 3267,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3273,
									"end": 3395,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3273,
									"end": 3395,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3346,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 3364,
									"end": 3369,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3346,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 3346,
									"end": 3370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3346,
									"end": 3370,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 3346,
									"end": 3370,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3339,
									"end": 3344,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3336,
									"end": 3371,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3326,
									"end": 3389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 3326,
									"end": 3389,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3385,
									"end": 3386,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3382,
									"end": 3383,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3375,
									"end": 3387,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3326,
									"end": 3389,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 3326,
									"end": 3389,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3273,
									"end": 3395,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3273,
									"end": 3395,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3401,
									"end": 3544,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3401,
									"end": 3544,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3458,
									"end": 3463,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3489,
									"end": 3495,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3483,
									"end": 3496,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3474,
									"end": 3496,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3474,
									"end": 3496,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3505,
									"end": 3538,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 3532,
									"end": 3537,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3505,
									"end": 3538,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3505,
									"end": 3538,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3505,
									"end": 3538,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 3505,
									"end": 3538,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3401,
									"end": 3544,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3401,
									"end": 3544,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3401,
									"end": 3544,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3401,
									"end": 3544,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3401,
									"end": 3544,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 4716,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3550,
									"end": 4716,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3667,
									"end": 3673,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3675,
									"end": 3681,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3683,
									"end": 3689,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3691,
									"end": 3697,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3740,
									"end": 3743,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3728,
									"end": 3737,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3719,
									"end": 3726,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3715,
									"end": 3738,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3711,
									"end": 3744,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 3708,
									"end": 3828,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3708,
									"end": 3828,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 3708,
									"end": 3828,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 3747,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3747,
									"end": 3826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3826,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 3747,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3708,
									"end": 3828,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 3708,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3867,
									"end": 3868,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3892,
									"end": 3956,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 3948,
									"end": 3955,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3939,
									"end": 3945,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3928,
									"end": 3937,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3924,
									"end": 3946,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3892,
									"end": 3956,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 3892,
									"end": 3956,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3892,
									"end": 3956,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 3892,
									"end": 3956,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3882,
									"end": 3956,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3882,
									"end": 3956,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3838,
									"end": 3966,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4026,
									"end": 4028,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4015,
									"end": 4024,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4011,
									"end": 4029,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4005,
									"end": 4030,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4057,
									"end": 4075,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4049,
									"end": 4055,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4046,
									"end": 4076,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4043,
									"end": 4160,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4043,
									"end": 4160,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 4043,
									"end": 4160,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4079,
									"end": 4158,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 4079,
									"end": 4158,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 4079,
									"end": 4158,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4079,
									"end": 4158,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 4079,
									"end": 4158,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4043,
									"end": 4160,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 4043,
									"end": 4160,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4184,
									"end": 4258,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4250,
									"end": 4257,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4241,
									"end": 4247,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4230,
									"end": 4239,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4226,
									"end": 4248,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4184,
									"end": 4258,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 4184,
									"end": 4258,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4184,
									"end": 4258,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4184,
									"end": 4258,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4174,
									"end": 4258,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 4174,
									"end": 4258,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3976,
									"end": 4268,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4328,
									"end": 4330,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4317,
									"end": 4326,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4313,
									"end": 4331,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4307,
									"end": 4332,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4359,
									"end": 4377,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4351,
									"end": 4357,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4348,
									"end": 4378,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4345,
									"end": 4462,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4345,
									"end": 4462,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4345,
									"end": 4462,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4381,
									"end": 4460,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 4381,
									"end": 4460,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 4381,
									"end": 4460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4381,
									"end": 4460,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 4381,
									"end": 4460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4345,
									"end": 4462,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4345,
									"end": 4462,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4486,
									"end": 4560,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 4552,
									"end": 4559,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4543,
									"end": 4549,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4532,
									"end": 4541,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4528,
									"end": 4550,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4486,
									"end": 4560,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 4486,
									"end": 4560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4486,
									"end": 4560,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 4486,
									"end": 4560,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4476,
									"end": 4560,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4476,
									"end": 4560,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4278,
									"end": 4570,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4609,
									"end": 4611,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 4635,
									"end": 4699,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 4691,
									"end": 4698,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4682,
									"end": 4688,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4671,
									"end": 4680,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4667,
									"end": 4689,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4635,
									"end": 4699,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 4635,
									"end": 4699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4635,
									"end": 4699,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 4635,
									"end": 4699,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4625,
									"end": 4699,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4625,
									"end": 4699,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4580,
									"end": 4709,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 4716,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 4716,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 4716,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 4716,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 4716,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 4716,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 4716,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 4716,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4722,
									"end": 4821,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 4722,
									"end": 4821,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4774,
									"end": 4780,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4808,
									"end": 4813,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4802,
									"end": 4814,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4792,
									"end": 4814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4792,
									"end": 4814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4722,
									"end": 4821,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4722,
									"end": 4821,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4722,
									"end": 4821,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4722,
									"end": 4821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4827,
									"end": 5007,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 4827,
									"end": 5007,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4875,
									"end": 4952,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4872,
									"end": 4873,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4865,
									"end": 4953,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4972,
									"end": 4976,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 4969,
									"end": 4970,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4962,
									"end": 4977,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4996,
									"end": 5000,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4993,
									"end": 4994,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4986,
									"end": 5001,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 5013,
									"end": 5333,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 5013,
									"end": 5333,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5057,
									"end": 5063,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5094,
									"end": 5095,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 5088,
									"end": 5092,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5084,
									"end": 5096,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 5074,
									"end": 5096,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5074,
									"end": 5096,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5141,
									"end": 5142,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5135,
									"end": 5139,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5131,
									"end": 5143,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5162,
									"end": 5180,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5152,
									"end": 5233,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5152,
									"end": 5233,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5218,
									"end": 5222,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 5210,
									"end": 5216,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5206,
									"end": 5223,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5196,
									"end": 5223,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5196,
									"end": 5223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5152,
									"end": 5233,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5152,
									"end": 5233,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5280,
									"end": 5282,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5272,
									"end": 5278,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5269,
									"end": 5283,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5249,
									"end": 5267,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5246,
									"end": 5284,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 5243,
									"end": 5327,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 5243,
									"end": 5327,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5299,
									"end": 5317,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 5299,
									"end": 5317,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 5299,
									"end": 5317,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5299,
									"end": 5317,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 5299,
									"end": 5317,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5243,
									"end": 5327,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 5243,
									"end": 5327,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5064,
									"end": 5333,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5013,
									"end": 5333,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5013,
									"end": 5333,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5013,
									"end": 5333,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5013,
									"end": 5333,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5339,
									"end": 5480,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 5339,
									"end": 5480,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5388,
									"end": 5392,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5411,
									"end": 5414,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5403,
									"end": 5414,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5403,
									"end": 5414,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5434,
									"end": 5437,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5431,
									"end": 5432,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5424,
									"end": 5438,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5472,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5465,
									"end": 5466,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5455,
									"end": 5473,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 5447,
									"end": 5473,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5447,
									"end": 5473,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5339,
									"end": 5480,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5339,
									"end": 5480,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5339,
									"end": 5480,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5339,
									"end": 5480,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5486,
									"end": 5579,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 5486,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5523,
									"end": 5529,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5570,
									"end": 5572,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5565,
									"end": 5567,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5558,
									"end": 5563,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5554,
									"end": 5568,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5550,
									"end": 5573,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 5540,
									"end": 5573,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5540,
									"end": 5573,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5486,
									"end": 5579,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5486,
									"end": 5579,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5486,
									"end": 5579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5486,
									"end": 5579,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5585,
									"end": 5692,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5585,
									"end": 5692,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5629,
									"end": 5637,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5679,
									"end": 5684,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5673,
									"end": 5677,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5669,
									"end": 5685,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 5648,
									"end": 5685,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5648,
									"end": 5685,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5585,
									"end": 5692,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5585,
									"end": 5692,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5585,
									"end": 5692,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5585,
									"end": 5692,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5585,
									"end": 5692,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5698,
									"end": 6091,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 5698,
									"end": 6091,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5767,
									"end": 5773,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5817,
									"end": 5818,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5805,
									"end": 5815,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5801,
									"end": 5819,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5840,
									"end": 5937,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 5870,
									"end": 5936,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5859,
									"end": 5868,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5840,
									"end": 5937,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5840,
									"end": 5937,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5840,
									"end": 5937,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 5840,
									"end": 5937,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5958,
									"end": 5997,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 5988,
									"end": 5996,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5977,
									"end": 5986,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5958,
									"end": 5997,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5958,
									"end": 5997,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5958,
									"end": 5997,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 5958,
									"end": 5997,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5946,
									"end": 5997,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 5946,
									"end": 5997,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6030,
									"end": 6034,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6026,
									"end": 6035,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 6019,
									"end": 6024,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6015,
									"end": 6036,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6006,
									"end": 6036,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 6006,
									"end": 6036,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6079,
									"end": 6083,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6069,
									"end": 6077,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6065,
									"end": 6084,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6058,
									"end": 6063,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6055,
									"end": 6085,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 6045,
									"end": 6085,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6045,
									"end": 6085,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5774,
									"end": 6091,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5774,
									"end": 6091,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5698,
									"end": 6091,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5698,
									"end": 6091,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5698,
									"end": 6091,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5698,
									"end": 6091,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5698,
									"end": 6091,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5698,
									"end": 6091,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6097,
									"end": 6157,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 6097,
									"end": 6157,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6125,
									"end": 6128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6146,
									"end": 6151,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6139,
									"end": 6151,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6139,
									"end": 6151,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6097,
									"end": 6157,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6097,
									"end": 6157,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6097,
									"end": 6157,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6097,
									"end": 6157,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6163,
									"end": 6305,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 6163,
									"end": 6305,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6213,
									"end": 6222,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6246,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 6264,
									"end": 6298,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 6273,
									"end": 6297,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 6291,
									"end": 6296,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6273,
									"end": 6297,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 6273,
									"end": 6297,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6273,
									"end": 6297,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 6273,
									"end": 6297,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6264,
									"end": 6298,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 6264,
									"end": 6298,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6264,
									"end": 6298,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 6264,
									"end": 6298,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6246,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 6246,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6246,
									"end": 6299,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 6246,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6233,
									"end": 6299,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6233,
									"end": 6299,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6163,
									"end": 6305,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6163,
									"end": 6305,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6163,
									"end": 6305,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6163,
									"end": 6305,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6311,
									"end": 6386,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 6311,
									"end": 6386,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6354,
									"end": 6357,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6375,
									"end": 6380,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6368,
									"end": 6380,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6368,
									"end": 6380,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6311,
									"end": 6386,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6311,
									"end": 6386,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6311,
									"end": 6386,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6311,
									"end": 6386,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6392,
									"end": 6661,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6392,
									"end": 6661,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6502,
									"end": 6541,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 6533,
									"end": 6540,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6502,
									"end": 6541,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 6502,
									"end": 6541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6502,
									"end": 6541,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 6502,
									"end": 6541,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6563,
									"end": 6654,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 6612,
									"end": 6653,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 6636,
									"end": 6652,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6612,
									"end": 6653,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 6612,
									"end": 6653,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6612,
									"end": 6653,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 6612,
									"end": 6653,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6604,
									"end": 6610,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6597,
									"end": 6601,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6591,
									"end": 6602,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6563,
									"end": 6654,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 6563,
									"end": 6654,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6563,
									"end": 6654,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 6563,
									"end": 6654,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6557,
									"end": 6561,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6550,
									"end": 6655,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6468,
									"end": 6661,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6392,
									"end": 6661,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6392,
									"end": 6661,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6392,
									"end": 6661,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6392,
									"end": 6661,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6667,
									"end": 6740,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 6667,
									"end": 6740,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6712,
									"end": 6715,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6667,
									"end": 6740,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6667,
									"end": 6740,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6746,
									"end": 6935,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 6746,
									"end": 6935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6823,
									"end": 6855,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 6823,
									"end": 6855,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 6823,
									"end": 6855,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6823,
									"end": 6855,
									"name": "tag",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 6823,
									"end": 6855,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6864,
									"end": 6929,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 6922,
									"end": 6928,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6914,
									"end": 6920,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6908,
									"end": 6912,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6864,
									"end": 6929,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6864,
									"end": 6929,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6864,
									"end": 6929,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 6864,
									"end": 6929,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6799,
									"end": 6935,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6746,
									"end": 6935,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6746,
									"end": 6935,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6746,
									"end": 6935,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6941,
									"end": 7127,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 6941,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7001,
									"end": 7121,
									"name": "tag",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 7001,
									"end": 7121,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7018,
									"end": 7021,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7011,
									"end": 7016,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7008,
									"end": 7022,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7001,
									"end": 7121,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7001,
									"end": 7121,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 7001,
									"end": 7121,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7072,
									"end": 7111,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 7109,
									"end": 7110,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7072,
									"end": 7111,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 7072,
									"end": 7111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7072,
									"end": 7111,
									"name": "tag",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 7072,
									"end": 7111,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7045,
									"end": 7046,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7034,
									"end": 7047,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7025,
									"end": 7047,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7025,
									"end": 7047,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7001,
									"end": 7121,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 7001,
									"end": 7121,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7001,
									"end": 7121,
									"name": "tag",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 7001,
									"end": 7121,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6941,
									"end": 7127,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6941,
									"end": 7127,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6941,
									"end": 7127,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7133,
									"end": 7676,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 7133,
									"end": 7676,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7234,
									"end": 7236,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 7229,
									"end": 7232,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7226,
									"end": 7237,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7223,
									"end": 7669,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7223,
									"end": 7669,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 7223,
									"end": 7669,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7268,
									"end": 7306,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 7300,
									"end": 7305,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7268,
									"end": 7306,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 7268,
									"end": 7306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7268,
									"end": 7306,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 7268,
									"end": 7306,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7352,
									"end": 7381,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 7370,
									"end": 7380,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7352,
									"end": 7381,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 7352,
									"end": 7381,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7352,
									"end": 7381,
									"name": "tag",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 7352,
									"end": 7381,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7342,
									"end": 7350,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7338,
									"end": 7382,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7535,
									"end": 7537,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7523,
									"end": 7533,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7520,
									"end": 7538,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7517,
									"end": 7566,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7517,
									"end": 7566,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 7517,
									"end": 7566,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7556,
									"end": 7564,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7541,
									"end": 7564,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7541,
									"end": 7564,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7517,
									"end": 7566,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 7517,
									"end": 7566,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7579,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 7635,
									"end": 7657,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 7653,
									"end": 7656,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7635,
									"end": 7657,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 7635,
									"end": 7657,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7635,
									"end": 7657,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 7635,
									"end": 7657,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7625,
									"end": 7633,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7621,
									"end": 7658,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7608,
									"end": 7619,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7579,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 7579,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7579,
									"end": 7659,
									"name": "tag",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 7579,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7238,
									"end": 7669,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7238,
									"end": 7669,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7223,
									"end": 7669,
									"name": "tag",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 7223,
									"end": 7669,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7133,
									"end": 7676,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7133,
									"end": 7676,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7133,
									"end": 7676,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7133,
									"end": 7676,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7682,
									"end": 7799,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 7682,
									"end": 7799,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 7744,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7786,
									"end": 7791,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7780,
									"end": 7784,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7776,
									"end": 7792,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 7755,
									"end": 7792,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7755,
									"end": 7792,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7682,
									"end": 7799,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7682,
									"end": 7799,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7682,
									"end": 7799,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7682,
									"end": 7799,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7682,
									"end": 7799,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7805,
									"end": 7974,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 7805,
									"end": 7974,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7849,
									"end": 7855,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7882,
									"end": 7933,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 7930,
									"end": 7931,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7926,
									"end": 7932,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7918,
									"end": 7923,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7915,
									"end": 7916,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 7911,
									"end": 7924,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7882,
									"end": 7933,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 7882,
									"end": 7933,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7882,
									"end": 7933,
									"name": "tag",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 7882,
									"end": 7933,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7878,
									"end": 7934,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7963,
									"end": 7967,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7957,
									"end": 7961,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7953,
									"end": 7968,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7943,
									"end": 7968,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7943,
									"end": 7968,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7856,
									"end": 7974,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7805,
									"end": 7974,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7805,
									"end": 7974,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7805,
									"end": 7974,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7805,
									"end": 7974,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7805,
									"end": 7974,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7979,
									"end": 8274,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 7979,
									"end": 8274,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8055,
									"end": 8059,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8201,
									"end": 8230,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8226,
									"end": 8229,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8220,
									"end": 8224,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8201,
									"end": 8230,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 8201,
									"end": 8230,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8201,
									"end": 8230,
									"name": "tag",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8201,
									"end": 8230,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8193,
									"end": 8230,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8193,
									"end": 8230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8263,
									"end": 8266,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8260,
									"end": 8261,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 8256,
									"end": 8267,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8250,
									"end": 8254,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8247,
									"end": 8268,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 8239,
									"end": 8268,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8239,
									"end": 8268,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7979,
									"end": 8274,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7979,
									"end": 8274,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7979,
									"end": 8274,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7979,
									"end": 8274,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7979,
									"end": 8274,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8279,
									"end": 9674,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 8279,
									"end": 9674,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8396,
									"end": 8433,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8429,
									"end": 8432,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8396,
									"end": 8433,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 8396,
									"end": 8433,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8396,
									"end": 8433,
									"name": "tag",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8396,
									"end": 8433,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8498,
									"end": 8516,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8490,
									"end": 8496,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8487,
									"end": 8517,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8484,
									"end": 8540,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8484,
									"end": 8540,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 8484,
									"end": 8540,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8520,
									"end": 8538,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 8520,
									"end": 8538,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 8520,
									"end": 8538,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8520,
									"end": 8538,
									"name": "tag",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 8520,
									"end": 8538,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8484,
									"end": 8540,
									"name": "tag",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 8484,
									"end": 8540,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8564,
									"end": 8602,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 8596,
									"end": 8600,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8590,
									"end": 8601,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 8564,
									"end": 8602,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 8564,
									"end": 8602,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8564,
									"end": 8602,
									"name": "tag",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 8564,
									"end": 8602,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8649,
									"end": 8716,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 8709,
									"end": 8715,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8701,
									"end": 8707,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8695,
									"end": 8699,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8649,
									"end": 8716,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 8649,
									"end": 8716,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8649,
									"end": 8716,
									"name": "tag",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 8649,
									"end": 8716,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8743,
									"end": 8744,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8767,
									"end": 8771,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8754,
									"end": 8771,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8754,
									"end": 8771,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8799,
									"end": 8801,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8791,
									"end": 8797,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8788,
									"end": 8802,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8816,
									"end": 8817,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8811,
									"end": 9429,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8811,
									"end": 9429,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8811,
									"end": 9429,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 8811,
									"end": 9429,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9473,
									"end": 9474,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9490,
									"end": 9496,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9487,
									"end": 9564,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9487,
									"end": 9564,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 9487,
									"end": 9564,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9539,
									"end": 9548,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9534,
									"end": 9537,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 9530,
									"end": 9549,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9524,
									"end": 9550,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9515,
									"end": 9550,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9515,
									"end": 9550,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9487,
									"end": 9564,
									"name": "tag",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 9487,
									"end": 9564,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9590,
									"end": 9657,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 9650,
									"end": 9656,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9643,
									"end": 9648,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9590,
									"end": 9657,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 9590,
									"end": 9657,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9590,
									"end": 9657,
									"name": "tag",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 9590,
									"end": 9657,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9584,
									"end": 9588,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9577,
									"end": 9658,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9446,
									"end": 9668,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8781,
									"end": 9668,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 8781,
									"end": 9668,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8811,
									"end": 9429,
									"name": "tag",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 8811,
									"end": 9429,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8863,
									"end": 8867,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8859,
									"end": 8868,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 8851,
									"end": 8857,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8847,
									"end": 8869,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8897,
									"end": 8934,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 8929,
									"end": 8933,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8897,
									"end": 8934,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 8897,
									"end": 8934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8897,
									"end": 8934,
									"name": "tag",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 8897,
									"end": 8934,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8956,
									"end": 8957,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8970,
									"end": 9178,
									"name": "tag",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 8970,
									"end": 9178,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8984,
									"end": 8991,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8981,
									"end": 8982,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8978,
									"end": 8992,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8970,
									"end": 9178,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8970,
									"end": 9178,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 8970,
									"end": 9178,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9063,
									"end": 9072,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9058,
									"end": 9061,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 9054,
									"end": 9073,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9048,
									"end": 9074,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9040,
									"end": 9046,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9033,
									"end": 9075,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9114,
									"end": 9115,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9106,
									"end": 9112,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9102,
									"end": 9116,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9092,
									"end": 9116,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9092,
									"end": 9116,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9161,
									"end": 9163,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9150,
									"end": 9159,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9146,
									"end": 9164,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9133,
									"end": 9164,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 9133,
									"end": 9164,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9007,
									"end": 9011,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9004,
									"end": 9005,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9000,
									"end": 9012,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8995,
									"end": 9012,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8995,
									"end": 9012,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8970,
									"end": 9178,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 8970,
									"end": 9178,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8970,
									"end": 9178,
									"name": "tag",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 8970,
									"end": 9178,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9206,
									"end": 9212,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9197,
									"end": 9204,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9194,
									"end": 9213,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 9191,
									"end": 9370,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9191,
									"end": 9370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 9191,
									"end": 9370,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9264,
									"end": 9273,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9259,
									"end": 9262,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 9255,
									"end": 9274,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9249,
									"end": 9275,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9307,
									"end": 9355,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 9349,
									"end": 9353,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 9341,
									"end": 9347,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 9337,
									"end": 9354,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9326,
									"end": 9335,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9307,
									"end": 9355,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 9307,
									"end": 9355,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9307,
									"end": 9355,
									"name": "tag",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 9307,
									"end": 9355,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9299,
									"end": 9305,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9292,
									"end": 9356,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9214,
									"end": 9370,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9191,
									"end": 9370,
									"name": "tag",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 9191,
									"end": 9370,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9416,
									"end": 9417,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9412,
									"end": 9413,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 9404,
									"end": 9410,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 9400,
									"end": 9414,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 9396,
									"end": 9418,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9390,
									"end": 9394,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 9383,
									"end": 9419,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8818,
									"end": 9429,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8818,
									"end": 9429,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8818,
									"end": 9429,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8781,
									"end": 9668,
									"name": "tag",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 8781,
									"end": 9668,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8781,
									"end": 9668,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8371,
									"end": 9674,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8371,
									"end": 9674,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8371,
									"end": 9674,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8279,
									"end": 9674,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8279,
									"end": 9674,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8279,
									"end": 9674,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9680,
									"end": 9798,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 9680,
									"end": 9798,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9767,
									"end": 9791,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 9785,
									"end": 9790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9767,
									"end": 9791,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 9767,
									"end": 9791,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9767,
									"end": 9791,
									"name": "tag",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 9767,
									"end": 9791,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9762,
									"end": 9765,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9755,
									"end": 9792,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9680,
									"end": 9798,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9680,
									"end": 9798,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9680,
									"end": 9798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9804,
									"end": 10026,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 9804,
									"end": 10026,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9897,
									"end": 9901,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9935,
									"end": 9937,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9924,
									"end": 9933,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9920,
									"end": 9938,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9912,
									"end": 9938,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9912,
									"end": 9938,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9948,
									"end": 10019,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 10016,
									"end": 10017,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10005,
									"end": 10014,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10001,
									"end": 10018,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9992,
									"end": 9998,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9948,
									"end": 10019,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 9948,
									"end": 10019,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9948,
									"end": 10019,
									"name": "tag",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 9948,
									"end": 10019,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9804,
									"end": 10026,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9804,
									"end": 10026,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9804,
									"end": 10026,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9804,
									"end": 10026,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9804,
									"end": 10026,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10032,
									"end": 10212,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 10032,
									"end": 10212,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10080,
									"end": 10157,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10077,
									"end": 10078,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10070,
									"end": 10158,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10177,
									"end": 10181,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 10174,
									"end": 10175,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 10167,
									"end": 10182,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10201,
									"end": 10205,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 10198,
									"end": 10199,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10191,
									"end": 10206,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 10218,
									"end": 10409,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 10218,
									"end": 10409,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10258,
									"end": 10261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10277,
									"end": 10297,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 10295,
									"end": 10296,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10277,
									"end": 10297,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 10277,
									"end": 10297,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10277,
									"end": 10297,
									"name": "tag",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 10277,
									"end": 10297,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10272,
									"end": 10297,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10272,
									"end": 10297,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10311,
									"end": 10331,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 10329,
									"end": 10330,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10311,
									"end": 10331,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 10311,
									"end": 10331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10311,
									"end": 10331,
									"name": "tag",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 10311,
									"end": 10331,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10306,
									"end": 10331,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10306,
									"end": 10331,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10354,
									"end": 10355,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10351,
									"end": 10352,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10347,
									"end": 10356,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10340,
									"end": 10356,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10340,
									"end": 10356,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10375,
									"end": 10378,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 10372,
									"end": 10373,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10369,
									"end": 10379,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 10366,
									"end": 10402,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10366,
									"end": 10402,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 10366,
									"end": 10402,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10382,
									"end": 10400,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 10382,
									"end": 10400,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 10382,
									"end": 10400,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10382,
									"end": 10400,
									"name": "tag",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 10382,
									"end": 10400,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10366,
									"end": 10402,
									"name": "tag",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 10366,
									"end": 10402,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10218,
									"end": 10409,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10218,
									"end": 10409,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10218,
									"end": 10409,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10218,
									"end": 10409,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10218,
									"end": 10409,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10415,
									"end": 10533,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 10415,
									"end": 10533,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10502,
									"end": 10526,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 10520,
									"end": 10525,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10502,
									"end": 10526,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 10502,
									"end": 10526,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10502,
									"end": 10526,
									"name": "tag",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 10502,
									"end": 10526,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10497,
									"end": 10500,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10490,
									"end": 10527,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10415,
									"end": 10533,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10415,
									"end": 10533,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10415,
									"end": 10533,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10539,
									"end": 10981,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 10539,
									"end": 10981,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10688,
									"end": 10692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10726,
									"end": 10728,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 10715,
									"end": 10724,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10711,
									"end": 10729,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10703,
									"end": 10729,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10703,
									"end": 10729,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10739,
									"end": 10810,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 10807,
									"end": 10808,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10796,
									"end": 10805,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10792,
									"end": 10809,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10783,
									"end": 10789,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 10739,
									"end": 10810,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 10739,
									"end": 10810,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10739,
									"end": 10810,
									"name": "tag",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 10739,
									"end": 10810,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10820,
									"end": 10892,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 10888,
									"end": 10890,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10877,
									"end": 10886,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10873,
									"end": 10891,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10864,
									"end": 10870,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 10820,
									"end": 10892,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 10820,
									"end": 10892,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10820,
									"end": 10892,
									"name": "tag",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 10820,
									"end": 10892,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10902,
									"end": 10974,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 10970,
									"end": 10972,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 10959,
									"end": 10968,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10955,
									"end": 10973,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10946,
									"end": 10952,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10902,
									"end": 10974,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 10902,
									"end": 10974,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10902,
									"end": 10974,
									"name": "tag",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 10902,
									"end": 10974,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10539,
									"end": 10981,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 10539,
									"end": 10981,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 10539,
									"end": 10981,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10539,
									"end": 10981,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10539,
									"end": 10981,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10539,
									"end": 10981,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10539,
									"end": 10981,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10987,
									"end": 11209,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 10987,
									"end": 11209,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11080,
									"end": 11084,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11118,
									"end": 11120,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 11107,
									"end": 11116,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11103,
									"end": 11121,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11095,
									"end": 11121,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11095,
									"end": 11121,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11131,
									"end": 11202,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "214"
								},
								{
									"begin": 11199,
									"end": 11200,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11188,
									"end": 11197,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11184,
									"end": 11201,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11175,
									"end": 11181,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11131,
									"end": 11202,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 11131,
									"end": 11202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11131,
									"end": 11202,
									"name": "tag",
									"source": 7,
									"value": "214"
								},
								{
									"begin": 11131,
									"end": 11202,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10987,
									"end": 11209,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10987,
									"end": 11209,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10987,
									"end": 11209,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10987,
									"end": 11209,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10987,
									"end": 11209,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 224,
									"end": 596,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 224,
									"end": 596,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 224,
									"end": 596,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 596,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 224,
									"end": 596,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 596,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 596,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 224,
									"end": 596,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 596,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200ac27d7aa40f7252022fd29df9d607477e5620449fb1f630a2963dbe7ac4c34d64736f6c634300081c0033",
									".code": [
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 596,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 498,
											"end": 593,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 498,
											"end": 593,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 498,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 498,
											"end": 593,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 498,
											"end": 593,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 498,
											"end": 593,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 498,
											"end": 593,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 498,
											"end": 593,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 498,
											"end": 593,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 498,
											"end": 593,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 498,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 498,
											"end": 593,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 498,
											"end": 593,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 498,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 498,
											"end": 593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 498,
											"end": 593,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 498,
											"end": 593,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 498,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 498,
											"end": 593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 498,
											"end": 593,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 498,
											"end": 593,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 498,
											"end": 593,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 498,
											"end": 593,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 498,
											"end": 593,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 568,
											"end": 585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 574,
											"end": 576,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 578,
											"end": 584,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 568,
											"end": 573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 568,
											"end": 585,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 568,
											"end": 585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 498,
											"end": 593,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 498,
											"end": 593,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 498,
											"end": 593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 535,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 287,
											"end": 535,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 369,
											"end": 370,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 393,
											"end": 399,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 390,
											"end": 391,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 387,
											"end": 400,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 379,
											"end": 492,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 379,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 478,
											"end": 479,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 473,
											"end": 476,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 469,
											"end": 480,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 463,
											"end": 481,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 459,
											"end": 460,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 454,
											"end": 457,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 450,
											"end": 461,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 443,
											"end": 482,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 415,
											"end": 417,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 408,
											"end": 418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 403,
											"end": 418,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 403,
											"end": 418,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 379,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 379,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 523,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 512,
											"end": 515,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 508,
											"end": 524,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 501,
											"end": 528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 349,
											"end": 535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 541,
											"end": 643,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 541,
											"end": 643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 582,
											"end": 588,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 629,
											"end": 636,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 617,
											"end": 622,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 613,
											"end": 627,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 609,
											"end": 637,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 599,
											"end": 637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 599,
											"end": 637,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 541,
											"end": 643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 541,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 737,
											"end": 740,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 798,
											"end": 803,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 765,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 765,
											"end": 804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 765,
											"end": 804,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 765,
											"end": 804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 820,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 879,
											"end": 882,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 820,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 820,
											"end": 891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 820,
											"end": 891,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 820,
											"end": 891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 813,
											"end": 891,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 813,
											"end": 891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 900,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 958,
											"end": 964,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 953,
											"end": 956,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 946,
											"end": 950,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 939,
											"end": 944,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 935,
											"end": 951,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 900,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 900,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 900,
											"end": 965,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 900,
											"end": 965,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 990,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 985,
											"end": 988,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 981,
											"end": 1020,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 974,
											"end": 1020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 741,
											"end": 1026,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 1026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1185,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1186,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1186,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1216,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1203,
											"end": 1220,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1243,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1333,
											"end": 1337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1324,
											"end": 1330,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1260,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1252,
											"end": 1338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1252,
											"end": 1338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1549,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1432,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1542,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1539,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1543,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1797,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1798,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1733,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1733,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1847,
											"end": 1854,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1985,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 2010,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2022,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2014,
											"end": 2026,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1912,
											"end": 2034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2086,
											"end": 2091,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2130,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2111,
											"end": 2131,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 2167,
											"end": 2172,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2140,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2229,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2256,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2341,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2334,
											"end": 2339,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2366,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2523,
											"end": 2528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2496,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2615,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 2668,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2654,
											"end": 2663,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2645,
											"end": 2652,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2641,
											"end": 2664,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2637,
											"end": 2669,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2672,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2862,
											"end": 2869,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2853,
											"end": 2859,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2842,
											"end": 2851,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2838,
											"end": 2860,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2817,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2807,
											"end": 2870,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2807,
											"end": 2870,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 2880,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2921,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2981,
											"end": 2987,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 2979,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 2988,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2945,
											"end": 2998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 3015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3062,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3103,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3091,
											"end": 3104,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3105,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3073,
											"end": 3105,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3073,
											"end": 3105,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3021,
											"end": 3111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3213,
											"end": 3218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3198,
											"end": 3219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3193,
											"end": 3196,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3186,
											"end": 3220,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3319,
											"end": 3323,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3359,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3355,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3360,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3360,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3432,
											"end": 3433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3430,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3434,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3414,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3370,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3232,
											"end": 3442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3553,
											"end": 3558,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 3535,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3530,
											"end": 3533,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3560,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3448,
											"end": 3566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3665,
											"end": 3669,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3703,
											"end": 3705,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3692,
											"end": 3701,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3688,
											"end": 3706,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3784,
											"end": 3785,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3782,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3769,
											"end": 3786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3760,
											"end": 3766,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3716,
											"end": 3787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3891,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3893,
											"end": 3899,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3944,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3930,
											"end": 3939,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3921,
											"end": 3928,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3917,
											"end": 3940,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3945,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 3948,
											"end": 4027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 4138,
											"end": 4145,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4135,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4118,
											"end": 4127,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4136,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 4093,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4156,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4197,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4257,
											"end": 4263,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4246,
											"end": 4255,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4242,
											"end": 4264,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 4221,
											"end": 4274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4211,
											"end": 4274,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4211,
											"end": 4274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4284,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4325,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4394,
											"end": 4401,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4385,
											"end": 4391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4374,
											"end": 4383,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4370,
											"end": 4392,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 4349,
											"end": 4402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4339,
											"end": 4402,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4339,
											"end": 4402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3800,
											"end": 4419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4460,
											"end": 4467,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4500,
											"end": 4504,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4493,
											"end": 4498,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4489,
											"end": 4505,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4478,
											"end": 4505,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4478,
											"end": 4505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 4616,
											"end": 4621,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 4600,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4598,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4623,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4517,
											"end": 4629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4724,
											"end": 4728,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4764,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4751,
											"end": 4760,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4747,
											"end": 4765,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4739,
											"end": 4765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4739,
											"end": 4765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4837,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4824,
											"end": 4841,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4815,
											"end": 4821,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 4775,
											"end": 4842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4914,
											"end": 4920,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4951,
											"end": 4960,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4942,
											"end": 4949,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 4961,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4934,
											"end": 4966,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 4969,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 4969,
											"end": 5048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 5048,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 4969,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5089,
											"end": 5090,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5114,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 5159,
											"end": 5166,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5150,
											"end": 5156,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5139,
											"end": 5148,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5157,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5114,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 5114,
											"end": 5167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5114,
											"end": 5167,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 5114,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5167,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5167,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5308,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 5190,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5277,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 5295,
											"end": 5300,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5277,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 5277,
											"end": 5301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5277,
											"end": 5301,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 5277,
											"end": 5301,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5272,
											"end": 5275,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5265,
											"end": 5302,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5308,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5308,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5190,
											"end": 5308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5411,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5445,
											"end": 5447,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5434,
											"end": 5443,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5448,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5422,
											"end": 5448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5422,
											"end": 5448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5458,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 5526,
											"end": 5527,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5515,
											"end": 5524,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5511,
											"end": 5528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5502,
											"end": 5508,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5458,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 5458,
											"end": 5529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5458,
											"end": 5529,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 5458,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5314,
											"end": 5536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 6016,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5542,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5616,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5618,
											"end": 5624,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5669,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5655,
											"end": 5664,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5646,
											"end": 5653,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5642,
											"end": 5665,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5638,
											"end": 5670,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5754,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 5635,
											"end": 5754,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5673,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 5673,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 5673,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5673,
											"end": 5752,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 5673,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5754,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 5635,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5794,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5818,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 5863,
											"end": 5870,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5854,
											"end": 5860,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5843,
											"end": 5852,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5839,
											"end": 5861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5818,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 5818,
											"end": 5871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5818,
											"end": 5871,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 5818,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5808,
											"end": 5871,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5808,
											"end": 5871,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5764,
											"end": 5881,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5920,
											"end": 5922,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 5991,
											"end": 5998,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5982,
											"end": 5988,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5971,
											"end": 5980,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5967,
											"end": 5989,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 5946,
											"end": 5999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 5999,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 5999,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5891,
											"end": 6009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 6016,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 6016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 6016,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 6016,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 6016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5542,
											"end": 6016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6022,
											"end": 6202,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 6022,
											"end": 6202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6070,
											"end": 6147,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6067,
											"end": 6068,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6060,
											"end": 6148,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6167,
											"end": 6171,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6164,
											"end": 6165,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6157,
											"end": 6172,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6191,
											"end": 6195,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6188,
											"end": 6189,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6181,
											"end": 6196,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6208,
											"end": 6528,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 6208,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6252,
											"end": 6258,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6289,
											"end": 6290,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6283,
											"end": 6287,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6279,
											"end": 6291,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6291,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6336,
											"end": 6337,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6330,
											"end": 6334,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6326,
											"end": 6338,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6357,
											"end": 6375,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 6347,
											"end": 6428,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6413,
											"end": 6417,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6401,
											"end": 6418,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6391,
											"end": 6418,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6391,
											"end": 6418,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6347,
											"end": 6428,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 6347,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6475,
											"end": 6477,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6467,
											"end": 6473,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6464,
											"end": 6478,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6444,
											"end": 6462,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6441,
											"end": 6479,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6438,
											"end": 6522,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 6438,
											"end": 6522,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 6494,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 6494,
											"end": 6512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6512,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 6494,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6438,
											"end": 6522,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 6438,
											"end": 6522,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6259,
											"end": 6528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6208,
											"end": 6528,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6208,
											"end": 6528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6208,
											"end": 6528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6208,
											"end": 6528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6534,
											"end": 6976,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6534,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6683,
											"end": 6687,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6721,
											"end": 6723,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6710,
											"end": 6719,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6724,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6698,
											"end": 6724,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6698,
											"end": 6724,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6734,
											"end": 6805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 6802,
											"end": 6803,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6800,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6787,
											"end": 6804,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6784,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6734,
											"end": 6805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 6734,
											"end": 6805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6734,
											"end": 6805,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 6734,
											"end": 6805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6815,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 6883,
											"end": 6885,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6872,
											"end": 6881,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6859,
											"end": 6865,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6815,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 6815,
											"end": 6887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6815,
											"end": 6887,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 6815,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6897,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 6965,
											"end": 6967,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6954,
											"end": 6963,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 6968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6941,
											"end": 6947,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6897,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 6897,
											"end": 6969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6897,
											"end": 6969,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 6897,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6534,
											"end": 6976,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6534,
											"end": 6976,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6534,
											"end": 6976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6534,
											"end": 6976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6534,
											"end": 6976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6534,
											"end": 6976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6534,
											"end": 6976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6982,
											"end": 7162,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 6982,
											"end": 7162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7030,
											"end": 7107,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7027,
											"end": 7028,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7020,
											"end": 7108,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7131,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7124,
											"end": 7125,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7117,
											"end": 7132,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7151,
											"end": 7155,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7148,
											"end": 7149,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7141,
											"end": 7156,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7168,
											"end": 7359,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 7168,
											"end": 7359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7208,
											"end": 7211,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7227,
											"end": 7247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 7245,
											"end": 7246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7227,
											"end": 7247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 7227,
											"end": 7247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7227,
											"end": 7247,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 7227,
											"end": 7247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7222,
											"end": 7247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7261,
											"end": 7281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 7279,
											"end": 7280,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7261,
											"end": 7281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 7261,
											"end": 7281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7261,
											"end": 7281,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 7261,
											"end": 7281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7256,
											"end": 7281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7256,
											"end": 7281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7304,
											"end": 7305,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7301,
											"end": 7302,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7297,
											"end": 7306,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7306,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7325,
											"end": 7328,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7322,
											"end": 7323,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7319,
											"end": 7329,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7316,
											"end": 7352,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7316,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 7316,
											"end": 7352,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7332,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 7332,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 7332,
											"end": 7350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7332,
											"end": 7350,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 7332,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7316,
											"end": 7352,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 7316,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7168,
											"end": 7359,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7168,
											"end": 7359,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7168,
											"end": 7359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7168,
											"end": 7359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7168,
											"end": 7359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"token-factory/Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ticker\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialMint\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"token-factory/Token.sol\":\"Token\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"token-factory/Token.sol\":{\"keccak256\":\"0x89de20370e0be165378c5f8e89ab9c2e02ff9269c541dac5dde6e04f3fb36ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746a7252fc83ee25d5c0d8a71dfb2351c7d267d3075eedc850ac0842034bb188\",\"dweb:/ipfs/QmWAwzbQHJTyuga8kWmg2CMxZyrEdesBmEMrVWnu5Kjovm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "token-factory/Token.sol:Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "token-factory/Token.sol:Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "token-factory/Token.sol:Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "token-factory/Token.sol:Token",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "token-factory/Token.sol:Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "token-factory/Token.sol:Token",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10619:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10637:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10656:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10633:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10663:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10715:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10724:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10742:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10688:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10813:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10820:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10829:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10848:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10804:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9788:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10790:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"token-factory/Token.sol": {
				"ast": {
					"absolutePath": "token-factory/Token.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Kokoro": [
							1033
						],
						"Ownable": [
							147
						],
						"Token": [
							982
						]
					},
					"id": 1034,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "83:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1034,
							"sourceUnit": 800,
							"src": "111:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1034,
							"sourceUnit": 148,
							"src": "168:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"242:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "242:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "242:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"249:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "249:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "249:7:6"
								}
							],
							"canonicalName": "Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 982,
							"linearizedBaseContracts": [
								982,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "Token",
							"nameLocation": "233:5:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "443:49:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 960,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "460:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "464:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "460:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "initialMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "472:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 959,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "454:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "454:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "454:30:6"
											}
										]
									},
									"id": 966,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 952,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 945,
													"src": "407:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 953,
													"name": "ticker",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 947,
													"src": "413:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 954,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 951,
												"name": "ERC20",
												"nameLocations": [
													"401:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "401:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "401:19:6"
										},
										{
											"arguments": [
												{
													"id": 956,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 943,
													"src": "429:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 957,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 955,
												"name": "Ownable",
												"nameLocations": [
													"421:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "421:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "421:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "294:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "286:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "331:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "317:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 944,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "317:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "ticker",
												"nameLocation": "360:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "346:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 946,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "346:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "initialMint",
												"nameLocation": "382:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "377:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "377:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "275:125:6"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "443:0:6"
									},
									"scope": 982,
									"src": "264:228:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "557:36:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 976,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "574:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 977,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "578:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 975,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "568:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "568:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "568:17:6"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 973,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 972,
												"name": "onlyOwner",
												"nameLocations": [
													"547:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "547:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "547:9:6"
										}
									],
									"name": "mint",
									"nameLocation": "507:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "520:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "512:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "532:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "524:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "524:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "511:28:6"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "557:0:6"
									},
									"scope": 982,
									"src": "498:95:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1034,
							"src": "224:372:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 983,
										"name": "ERC20",
										"nameLocations": [
											"619:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "619:5:6"
									},
									"id": 984,
									"nodeType": "InheritanceSpecifier",
									"src": "619:5:6"
								},
								{
									"baseName": {
										"id": 985,
										"name": "Ownable",
										"nameLocations": [
											"626:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "626:7:6"
									},
									"id": 986,
									"nodeType": "InheritanceSpecifier",
									"src": "626:7:6"
								}
							],
							"canonicalName": "Kokoro",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1033,
							"linearizedBaseContracts": [
								1033,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "Kokoro",
							"nameLocation": "609:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "820:49:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1005,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "837:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "841:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "837:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1007,
															"name": "initialMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "849:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1004,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "831:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "831:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "831:30:6"
											}
										]
									},
									"id": 1011,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 997,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 990,
													"src": "784:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 998,
													"name": "ticker",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 992,
													"src": "790:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 999,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 996,
												"name": "ERC20",
												"nameLocations": [
													"778:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "778:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "778:19:6"
										},
										{
											"arguments": [
												{
													"id": 1001,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 988,
													"src": "806:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1002,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1000,
												"name": "Ownable",
												"nameLocations": [
													"798:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "798:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "798:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "671:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "663:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "708:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "694:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 989,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "694:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "ticker",
												"nameLocation": "737:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "723:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 991,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "723:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "initialMint",
												"nameLocation": "759:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "754:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "754:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "652:125:6"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:0:6"
									},
									"scope": 1033,
									"src": "641:228:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3af57cdb",
									"id": 1014,
									"mutability": "mutable",
									"name": "kokoro",
									"nameLocation": "891:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "877:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Kokoro_$1033",
										"typeString": "contract Kokoro"
									},
									"typeName": {
										"id": 1013,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1012,
											"name": "Kokoro",
											"nameLocations": [
												"877:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1033,
											"src": "877:6:6"
										},
										"referencedDeclaration": 1033,
										"src": "877:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Kokoro_$1033",
											"typeString": "contract Kokoro"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "42685d74",
									"id": 1016,
									"mutability": "mutable",
									"name": "totalSacrificed",
									"nameLocation": "948:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "933:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1015,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "933:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1d0806ae",
									"id": 1019,
									"mutability": "mutable",
									"name": "initialPrice",
									"nameLocation": "1022:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "1007:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1017,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1007:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1018,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1037:7:6",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7d2d4fec",
									"id": 1022,
									"mutability": "mutable",
									"name": "bondingCoefficient",
									"nameLocation": "1102:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "1087:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1020,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1087:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1021,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1123:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c250bed5",
									"id": 1025,
									"mutability": "mutable",
									"name": "nftFraction",
									"nameLocation": "1175:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "1160:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1023,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1160:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1024,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1189:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Kokoro.Proof",
									"id": 1032,
									"members": [
										{
											"constant": false,
											"id": 1027,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "1282:4:6",
											"nodeType": "VariableDeclaration",
											"scope": 1032,
											"src": "1274:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1026,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1274:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1029,
											"mutability": "mutable",
											"name": "finalWords",
											"nameLocation": "1304:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 1032,
											"src": "1297:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1028,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1297:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1031,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "1333:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 1032,
											"src": "1325:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1030,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1325:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proof",
									"nameLocation": "1257:5:6",
									"nodeType": "StructDefinition",
									"scope": 1033,
									"src": "1250:100:6",
									"visibility": "public"
								}
							],
							"scope": 1034,
							"src": "600:753:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "83:1272:6"
				},
				"id": 6
			}
		}
	}
}